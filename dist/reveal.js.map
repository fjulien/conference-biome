{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = (a, b) => {\n\tfor (let i in b) {\n\t\ta[i] = b[i];\n\t}\n\n\treturn a;\n};\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = (el, selector) => {\n\treturn Array.from(el.querySelectorAll(selector));\n};\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = (el, className, value) => {\n\tif (value) {\n\t\tel.classList.add(className);\n\t} else {\n\t\tel.classList.remove(className);\n\t}\n};\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = (value) => {\n\tif (typeof value === \"string\") {\n\t\tif (value === \"null\") return null;\n\t\telse if (value === \"true\") return true;\n\t\telse if (value === \"false\") return false;\n\t\telse if (value.match(/^-?[\\d\\.]+$/)) return parseFloat(value);\n\t}\n\n\treturn value;\n};\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = (a, b) => {\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt(dx * dx + dy * dy);\n};\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = (element, transform) => {\n\telement.style.transform = transform;\n};\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = (target, selector) => {\n\tlet matchesMethod =\n\t\ttarget.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!(matchesMethod && matchesMethod.call(target, selector));\n};\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = (target, selector) => {\n\t// Native Element.closest\n\tif (typeof target.closest === \"function\") {\n\t\treturn target.closest(selector);\n\t}\n\n\t// Polyfill\n\twhile (target) {\n\t\tif (matches(target, selector)) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n};\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = (element) => {\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod =\n\t\telement.requestFullscreen ||\n\t\telement.webkitRequestFullscreen ||\n\t\telement.webkitRequestFullScreen ||\n\t\telement.mozRequestFullScreen ||\n\t\telement.msRequestFullscreen;\n\n\tif (requestMethod) {\n\t\trequestMethod.apply(element);\n\t}\n};\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = (\n\tcontainer,\n\ttagname,\n\tclassname,\n\tinnerHTML = \"\",\n) => {\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll(\".\" + classname);\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor (let i = 0; i < nodes.length; i++) {\n\t\tlet testNode = nodes[i];\n\t\tif (testNode.parentNode === container) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement(tagname);\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild(node);\n\n\treturn node;\n};\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = (value) => {\n\tlet tag = document.createElement(\"style\");\n\ttag.type = \"text/css\";\n\n\tif (value && value.length > 0) {\n\t\tif (tag.styleSheet) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t} else {\n\t\t\ttag.appendChild(document.createTextNode(value));\n\t\t}\n\t}\n\n\tdocument.head.appendChild(tag);\n\n\treturn tag;\n};\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\tlet query = {};\n\n\tlocation.search.replace(/[A-Z0-9]+?=([\\w\\.%-]*)/gi, (a) => {\n\t\tquery[a.split(\"=\").shift()] = a.split(\"=\").pop();\n\t});\n\n\t// Basic deserialization\n\tfor (let i in query) {\n\t\tlet value = query[i];\n\n\t\tquery[i] = deserialize(unescape(value));\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif (typeof query[\"dependencies\"] !== \"undefined\")\n\t\tdelete query[\"dependencies\"];\n\n\treturn query;\n};\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = (element, height = 0) => {\n\tif (element) {\n\t\tlet newHeight,\n\t\t\toldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = \"0px\";\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = \"auto\";\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + \"px\";\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty(\"height\");\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n};\n\nconst fileExtensionToMimeMap = {\n\tmp4: \"video/mp4\",\n\tm4a: \"video/mp4\",\n\togv: \"video/ogg\",\n\tmpeg: \"video/mpeg\",\n\twebm: \"video/webm\",\n};\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = (filename = \"\") => {\n\treturn fileExtensionToMimeMap[filename.split(\".\").pop()];\n};\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = (url = \"\") => {\n\treturn encodeURI(url)\n\t\t.replace(/%5B/g, \"[\")\n\t\t.replace(/%5D/g, \"]\")\n\t\t.replace(\n\t\t\t/[!'()*]/g,\n\t\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`,\n\t\t);\n};\n","const UA = navigator.userAgent;\n\nexport const isMobile =\n\t/(iphone|ipod|ipad|android)/gi.test(UA) ||\n\t(navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1); // iPadOS\n\nexport const isChrome = /chrome/i.test(UA) && !/edge/i.test(UA);\n\nexport const isAndroid = /android/gi.test(UA);\n","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import {\n\textend,\n\tqueryAll,\n\tclosest,\n\tgetMimeTypeFromFile,\n\tencodeRFC3986URI,\n} from \"../utils/util.js\";\nimport { isMobile } from \"../utils/device.js\";\n\nimport fitty from \"fitty\";\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind(this);\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload(element) {\n\t\tif (this.Reveal.isScrollView()) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif (typeof preload !== \"boolean\") {\n\t\t\tpreload = element.hasAttribute(\"data-preload\");\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload(slide, options = {}) {\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll(\n\t\t\tslide,\n\t\t\t\"img[data-src], video[data-src], audio[data-src], iframe[data-src]\",\n\t\t).forEach((element) => {\n\t\t\tif (element.tagName !== \"IFRAME\" || this.shouldPreload(element)) {\n\t\t\t\telement.setAttribute(\"src\", element.getAttribute(\"data-src\"));\n\t\t\t\telement.setAttribute(\"data-lazy-loaded\", \"\");\n\t\t\t\telement.removeAttribute(\"data-src\");\n\t\t\t}\n\t\t});\n\n\t\t// Media elements with <source> children\n\t\tqueryAll(slide, \"video, audio\").forEach((media) => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll(media, \"source[data-src]\").forEach((source) => {\n\t\t\t\tsource.setAttribute(\"src\", source.getAttribute(\"data-src\"));\n\t\t\t\tsource.removeAttribute(\"data-src\");\n\t\t\t\tsource.setAttribute(\"data-lazy-loaded\", \"\");\n\t\t\t\tsources += 1;\n\t\t\t});\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif (isMobile && media.tagName === \"VIDEO\") {\n\t\t\t\tmedia.setAttribute(\"playsinline\", \"\");\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif (sources > 0) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t});\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif (background) {\n\t\t\tbackground.style.display = \"block\";\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute(\"data-background-iframe\");\n\n\t\t\t// If the background contains media, load it\n\t\t\tif (background.hasAttribute(\"data-loaded\") === false) {\n\t\t\t\tbackground.setAttribute(\"data-loaded\", \"true\");\n\n\t\t\t\tlet backgroundImage = slide.getAttribute(\"data-background-image\"),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute(\"data-background-video\"),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute(\n\t\t\t\t\t\t\"data-background-video-loop\",\n\t\t\t\t\t),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute(\n\t\t\t\t\t\t\"data-background-video-muted\",\n\t\t\t\t\t);\n\n\t\t\t\t// Images\n\t\t\t\tif (backgroundImage) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif (/^data:/.test(backgroundImage.trim())) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage\n\t\t\t\t\t\t\t.split(\",\")\n\t\t\t\t\t\t\t.map((background) => {\n\t\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.join(\",\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if (backgroundVideo && !this.Reveal.isSpeakerNotes()) {\n\t\t\t\t\tlet video = document.createElement(\"video\");\n\n\t\t\t\t\tif (backgroundVideoLoop) {\n\t\t\t\t\t\tvideo.setAttribute(\"loop\", \"\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (backgroundVideoMuted) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif (isMobile) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute(\"playsinline\", \"\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split(\",\").forEach((source) => {\n\t\t\t\t\t\tconst sourceElement = document.createElement(\"source\");\n\t\t\t\t\t\tsourceElement.setAttribute(\"src\", source);\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile(source);\n\t\t\t\t\t\tif (type) {\n\t\t\t\t\t\t\tsourceElement.setAttribute(\"type\", type);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild(sourceElement);\n\t\t\t\t\t});\n\n\t\t\t\t\tbackgroundContent.appendChild(video);\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if (backgroundIframe && options.excludeIframes !== true) {\n\t\t\t\t\tlet iframe = document.createElement(\"iframe\");\n\t\t\t\t\tiframe.setAttribute(\"allowfullscreen\", \"\");\n\t\t\t\t\tiframe.setAttribute(\"mozallowfullscreen\", \"\");\n\t\t\t\t\tiframe.setAttribute(\"webkitallowfullscreen\", \"\");\n\t\t\t\t\tiframe.setAttribute(\"allow\", \"autoplay\");\n\n\t\t\t\t\tiframe.setAttribute(\"data-src\", backgroundIframe);\n\n\t\t\t\t\tiframe.style.width = \"100%\";\n\t\t\t\t\tiframe.style.height = \"100%\";\n\t\t\t\t\tiframe.style.maxHeight = \"100%\";\n\t\t\t\t\tiframe.style.maxWidth = \"100%\";\n\n\t\t\t\t\tbackgroundContent.appendChild(iframe);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement =\n\t\t\t\tbackgroundContent.querySelector(\"iframe[data-src]\");\n\t\t\tif (backgroundIframeElement) {\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif (\n\t\t\t\t\tthis.shouldPreload(background) &&\n\t\t\t\t\t!/autoplay=(1|true|yes)/gi.test(backgroundIframe)\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tbackgroundIframeElement.getAttribute(\"src\") !== backgroundIframe\n\t\t\t\t\t) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute(\"src\", backgroundIframe);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.layout(slide);\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout(scopeElement) {\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from(scopeElement.querySelectorAll(\".r-fit-text\")).forEach(\n\t\t\t(element) => {\n\t\t\t\tfitty(element, {\n\t\t\t\t\tminSize: 24,\n\t\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\t\tobserveMutations: false,\n\t\t\t\t\tobserveWindow: false,\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload(slide) {\n\t\t// Hide the slide element\n\t\tslide.style.display = \"none\";\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground(slide);\n\t\tif (background) {\n\t\t\tbackground.style.display = \"none\";\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll(background, \"iframe[src]\").forEach((element) => {\n\t\t\t\telement.removeAttribute(\"src\");\n\t\t\t});\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll(\n\t\t\tslide,\n\t\t\t\"video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]\",\n\t\t).forEach((element) => {\n\t\t\telement.setAttribute(\"data-src\", element.getAttribute(\"src\"));\n\t\t\telement.removeAttribute(\"src\");\n\t\t});\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll(\n\t\t\tslide,\n\t\t\t\"video[data-lazy-loaded] source[src], audio source[src]\",\n\t\t).forEach((source) => {\n\t\t\tsource.setAttribute(\"data-src\", source.getAttribute(\"src\"));\n\t\t\tsource.removeAttribute(\"src\");\n\t\t});\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\t\tlet _appendParamToIframeSource = (sourceAttribute, sourceURL, param) => {\n\t\t\tqueryAll(\n\t\t\t\tthis.Reveal.getSlidesElement(),\n\t\t\t\t\"iframe[\" + sourceAttribute + '*=\"' + sourceURL + '\"]',\n\t\t\t).forEach((el) => {\n\t\t\t\tlet src = el.getAttribute(sourceAttribute);\n\t\t\t\tif (src && src.indexOf(param) === -1) {\n\t\t\t\t\tel.setAttribute(\n\t\t\t\t\t\tsourceAttribute,\n\t\t\t\t\t\tsrc + (!/\\?/.test(src) ? \"?\" : \"&\") + param,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource(\"src\", \"youtube.com/embed/\", \"enablejsapi=1\");\n\t\t_appendParamToIframeSource(\n\t\t\t\"data-src\",\n\t\t\t\"youtube.com/embed/\",\n\t\t\t\"enablejsapi=1\",\n\t\t);\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource(\"src\", \"player.vimeo.com/\", \"api=1\");\n\t\t_appendParamToIframeSource(\"data-src\", \"player.vimeo.com/\", \"api=1\");\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent(element) {\n\t\tif (element && !this.Reveal.isSpeakerNotes()) {\n\t\t\t// Restart GIFs\n\t\t\tqueryAll(element, 'img[src$=\".gif\"]').forEach((el) => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute(\"src\", el.getAttribute(\"src\"));\n\t\t\t});\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll(element, \"video, audio\").forEach((el) => {\n\t\t\t\tif (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif (typeof autoplay !== \"boolean\") {\n\t\t\t\t\tautoplay =\n\t\t\t\t\t\tel.hasAttribute(\"data-autoplay\") ||\n\t\t\t\t\t\t!!closest(el, \".slide-background\");\n\t\t\t\t}\n\n\t\t\t\tif (autoplay && typeof el.play === \"function\") {\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif (el.readyState > 1) {\n\t\t\t\t\t\tthis.startEmbeddedMedia({ target: el });\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if (isMobile) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tpromise &&\n\t\t\t\t\t\t\ttypeof promise.catch === \"function\" &&\n\t\t\t\t\t\t\tel.controls === false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tpromise.catch(() => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener(\"play\", () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener(\"loadeddata\", this.startEmbeddedMedia); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener(\"loadeddata\", this.startEmbeddedMedia);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll(element, \"iframe[src]\").forEach((el) => {\n\t\t\t\tif (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe({ target: el });\n\t\t\t});\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll(element, \"iframe[data-src]\").forEach((el) => {\n\t\t\t\tif (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (el.getAttribute(\"src\") !== el.getAttribute(\"data-src\")) {\n\t\t\t\t\tel.removeEventListener(\"load\", this.startEmbeddedIframe); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener(\"load\", this.startEmbeddedIframe);\n\t\t\t\t\tel.setAttribute(\"src\", el.getAttribute(\"data-src\"));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia(event) {\n\t\tlet isAttachedToDOM = !!closest(event.target, \"html\"),\n\t\t\tisVisible = !!closest(event.target, \".present\");\n\n\t\tif (isAttachedToDOM && isVisible) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener(\"loadeddata\", this.startEmbeddedMedia);\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe(event) {\n\t\tlet iframe = event.target;\n\n\t\tif (iframe && iframe.contentWindow) {\n\t\t\tlet isAttachedToDOM = !!closest(event.target, \"html\"),\n\t\t\t\tisVisible = !!closest(event.target, \".present\");\n\n\t\t\tif (isAttachedToDOM && isVisible) {\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif (typeof autoplay !== \"boolean\") {\n\t\t\t\t\tautoplay =\n\t\t\t\t\t\tiframe.hasAttribute(\"data-autoplay\") ||\n\t\t\t\t\t\t!!closest(iframe, \".slide-background\");\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif (\n\t\t\t\t\t/youtube\\.com\\/embed\\//.test(iframe.getAttribute(\"src\")) &&\n\t\t\t\t\tautoplay\n\t\t\t\t) {\n\t\t\t\t\tiframe.contentWindow.postMessage(\n\t\t\t\t\t\t'{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}',\n\t\t\t\t\t\t\"*\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if (\n\t\t\t\t\t/player\\.vimeo\\.com\\//.test(iframe.getAttribute(\"src\")) &&\n\t\t\t\t\tautoplay\n\t\t\t\t) {\n\t\t\t\t\tiframe.contentWindow.postMessage('{\"method\":\"play\"}', \"*\");\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage(\"slide:start\", \"*\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent(element, options = {}) {\n\t\toptions = extend(\n\t\t\t{\n\t\t\t\t// Defaults\n\t\t\t\tunloadIframes: true,\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\tif (element && element.parentNode) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll(element, \"video, audio\").forEach((el) => {\n\t\t\t\tif (!el.hasAttribute(\"data-ignore\") && typeof el.pause === \"function\") {\n\t\t\t\t\tel.setAttribute(\"data-paused-by-reveal\", \"\");\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll(element, \"iframe\").forEach((el) => {\n\t\t\t\tif (el.contentWindow) el.contentWindow.postMessage(\"slide:stop\", \"*\");\n\t\t\t\tel.removeEventListener(\"load\", this.startEmbeddedIframe);\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll(element, 'iframe[src*=\"youtube.com/embed/\"]').forEach((el) => {\n\t\t\t\tif (\n\t\t\t\t\t!el.hasAttribute(\"data-ignore\") &&\n\t\t\t\t\tel.contentWindow &&\n\t\t\t\t\ttypeof el.contentWindow.postMessage === \"function\"\n\t\t\t\t) {\n\t\t\t\t\tel.contentWindow.postMessage(\n\t\t\t\t\t\t'{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n\t\t\t\t\t\t\"*\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll(element, 'iframe[src*=\"player.vimeo.com/\"]').forEach((el) => {\n\t\t\t\tif (\n\t\t\t\t\t!el.hasAttribute(\"data-ignore\") &&\n\t\t\t\t\tel.contentWindow &&\n\t\t\t\t\ttypeof el.contentWindow.postMessage === \"function\"\n\t\t\t\t) {\n\t\t\t\t\tel.contentWindow.postMessage('{\"method\":\"pause\"}', \"*\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (options.unloadIframes === true) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll(element, \"iframe[data-src]\").forEach((el) => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute(\"src\", \"about:blank\");\n\t\t\t\t\tel.removeAttribute(\"src\");\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n","export const SLIDES_SELECTOR = \".slides section\";\nexport const HORIZONTAL_SLIDES_SELECTOR = \".slides>section\";\nexport const VERTICAL_SLIDES_SELECTOR = \".slides>section.present>section\";\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = \".backgrounds>.slide-background\";\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST =\n\t/registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX =\n\t/fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = \"h.v\";\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = \"h/v\";\nexport const SLIDE_NUMBER_FORMAT_CURRENT = \"c\";\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = \"c/t\";\n","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL,\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\t}\n\n\trender() {\n\t\tthis.element = document.createElement(\"div\");\n\t\tthis.element.className = \"slide-number\";\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tlet slideNumberDisplay = \"none\";\n\t\tif (config.slideNumber && !this.Reveal.isPrintView()) {\n\t\t\tif (config.showSlideNumber === \"all\") {\n\t\t\t\tslideNumberDisplay = \"block\";\n\t\t\t} else if (\n\t\t\t\tconfig.showSlideNumber === \"speaker\" &&\n\t\t\t\tthis.Reveal.isSpeakerNotes()\n\t\t\t) {\n\t\t\t\tslideNumberDisplay = \"block\";\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\t\t// Update slide number if enabled\n\t\tif (this.Reveal.getConfig().slideNumber && this.element) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber(slide = this.Reveal.getCurrentSlide()) {\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif (typeof config.slideNumber === \"function\") {\n\t\t\tvalue = config.slideNumber(slide);\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif (typeof config.slideNumber === \"string\") {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif (!/c/.test(format) && this.Reveal.getHorizontalSlides().length === 1) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset =\n\t\t\t\tslide && slide.dataset.visibility === \"uncounted\" ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch (format) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push(this.Reveal.getSlidePastCount(slide) + horizontalOffset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push(\n\t\t\t\t\t\tthis.Reveal.getSlidePastCount(slide) + horizontalOffset,\n\t\t\t\t\t\t\"/\",\n\t\t\t\t\t\tthis.Reveal.getTotalSlides(),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices(slide);\n\t\t\t\t\tvalue.push(indices.h + horizontalOffset);\n\t\t\t\t\tlet sep =\n\t\t\t\t\t\tformat === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n\t\t\t\t\t\t\t? \"/\"\n\t\t\t\t\t\t\t: \".\";\n\t\t\t\t\tif (this.Reveal.isVerticalSlide(slide))\n\t\t\t\t\t\tvalue.push(sep, indices.v + 1);\n\t\t\t}\n\t\t}\n\n\t\tlet url = \"#\" + this.Reveal.location.getHash(slide);\n\t\treturn this.formatNumber(value[0], value[1], value[2], url);\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber(a, delimiter, b, url = \"#\" + this.Reveal.location.getHash()) {\n\t\tif (typeof b === \"number\" && !isNaN(b)) {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t} else {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.element.remove();\n\t}\n}\n","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind(this);\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\n\t}\n\n\trender() {\n\t\tthis.element = document.createElement(\"div\");\n\t\tthis.element.className = \"jump-to-slide\";\n\n\t\tthis.jumpInput = document.createElement(\"input\");\n\t\tthis.jumpInput.type = \"text\";\n\t\tthis.jumpInput.className = \"jump-to-slide-input\";\n\t\tthis.jumpInput.placeholder = \"Jump to slide\";\n\t\tthis.jumpInput.addEventListener(\"input\", this.onInput);\n\t\tthis.jumpInput.addEventListener(\"keydown\", this.onKeyDown);\n\t\tthis.jumpInput.addEventListener(\"blur\", this.onBlur);\n\n\t\tthis.element.appendChild(this.jumpInput);\n\t}\n\n\tshow() {\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\n\t\tthis.jumpInput.focus();\n\t}\n\n\thide() {\n\t\tif (this.isVisible()) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = \"\";\n\n\t\t\tclearTimeout(this.jumpTimeout);\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\t}\n\n\tisVisible() {\n\t\treturn !!this.element.parentNode;\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\t\tclearTimeout(this.jumpTimeout);\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim(\"\");\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear mumber\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif (/^\\d+$/.test(query)) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif (\n\t\t\t\tslideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT ||\n\t\t\t\tslideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n\t\t\t) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[parseInt(query, 10) - 1];\n\t\t\t\tif (slide) {\n\t\t\t\t\tindices = this.Reveal.getIndices(slide);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!indices) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif (/^\\d+\\.\\d+$/.test(query)) {\n\t\t\t\tquery = query.replace(\".\", \"/\");\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash(query, {\n\t\t\t\toneBasedIndex: true,\n\t\t\t});\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif (!indices && /\\S+/i.test(query) && query.length > 1) {\n\t\t\tindices = this.search(query);\n\t\t}\n\n\t\tif (indices && query !== \"\") {\n\t\t\tthis.Reveal.slide(indices.h, indices.v, indices.f);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.Reveal.slide(\n\t\t\t\tthis.indicesOnShow.h,\n\t\t\t\tthis.indicesOnShow.v,\n\t\t\t\tthis.indicesOnShow.f,\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tjumpAfter(delay) {\n\t\tclearTimeout(this.jumpTimeout);\n\t\tthis.jumpTimeout = setTimeout(() => this.jump(), delay);\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch(query) {\n\t\tconst regex = new RegExp(\"\\\\b\" + query.trim() + \"\\\\b\", \"i\");\n\n\t\tconst slide = this.Reveal.getSlides().find((slide) => {\n\t\t\treturn regex.test(slide.innerText);\n\t\t});\n\n\t\tif (slide) {\n\t\t\treturn this.Reveal.getIndices(slide);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\t\tthis.Reveal.slide(\n\t\t\tthis.indicesOnShow.h,\n\t\t\tthis.indicesOnShow.v,\n\t\t\tthis.indicesOnShow.f,\n\t\t);\n\t\tthis.hide();\n\t}\n\n\tconfirm() {\n\t\tthis.jump();\n\t\tthis.hide();\n\t}\n\n\tdestroy() {\n\t\tthis.jumpInput.removeEventListener(\"input\", this.onInput);\n\t\tthis.jumpInput.removeEventListener(\"keydown\", this.onKeyDown);\n\t\tthis.jumpInput.removeEventListener(\"blur\", this.onBlur);\n\n\t\tthis.element.remove();\n\t}\n\n\tonKeyDown(event) {\n\t\tif (event.keyCode === 13) {\n\t\t\tthis.confirm();\n\t\t} else if (event.keyCode === 27) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\t}\n\n\tonInput(event) {\n\t\tthis.jumpAfter(200);\n\t}\n\n\tonBlur() {\n\t\tsetTimeout(() => this.hide(), 1);\n\t}\n}\n","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = (color) => {\n\tlet hex3 = color.match(/^#([0-9a-f]{3})$/i);\n\tif (hex3 && hex3[1]) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt(hex3.charAt(0), 16) * 0x11,\n\t\t\tg: parseInt(hex3.charAt(1), 16) * 0x11,\n\t\t\tb: parseInt(hex3.charAt(2), 16) * 0x11,\n\t\t};\n\t}\n\n\tlet hex6 = color.match(/^#([0-9a-f]{6})$/i);\n\tif (hex6 && hex6[1]) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt(hex6.slice(0, 2), 16),\n\t\t\tg: parseInt(hex6.slice(2, 4), 16),\n\t\t\tb: parseInt(hex6.slice(4, 6), 16),\n\t\t};\n\t}\n\n\tlet rgb = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\tif (rgb) {\n\t\treturn {\n\t\t\tr: parseInt(rgb[1], 10),\n\t\t\tg: parseInt(rgb[2], 10),\n\t\t\tb: parseInt(rgb[3], 10),\n\t\t};\n\t}\n\n\tlet rgba = color.match(\n\t\t/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i,\n\t);\n\tif (rgba) {\n\t\treturn {\n\t\t\tr: parseInt(rgba[1], 10),\n\t\t\tg: parseInt(rgba[2], 10),\n\t\t\tb: parseInt(rgba[3], 10),\n\t\t\ta: parseFloat(rgba[4]),\n\t\t};\n\t}\n\n\treturn null;\n};\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = (color) => {\n\tif (typeof color === \"string\") color = colorToRgb(color);\n\n\tif (color) {\n\t\treturn (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\t}\n\n\treturn null;\n};\n","import { queryAll } from \"../utils/util.js\";\nimport { colorToRgb, colorBrightness } from \"../utils/color.js\";\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\t}\n\n\trender() {\n\t\tthis.element = document.createElement(\"div\");\n\t\tthis.element.className = \"backgrounds\";\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = \"\";\n\t\tthis.element.classList.add(\"no-transition\");\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach((slideh) => {\n\t\t\tlet backgroundStack = this.createBackground(slideh, this.element);\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll(slideh, \"section\").forEach((slidev) => {\n\t\t\t\tthis.createBackground(slidev, backgroundStack);\n\n\t\t\t\tbackgroundStack.classList.add(\"stack\");\n\t\t\t});\n\t\t});\n\n\t\t// Add parallax background if specified\n\t\tif (this.Reveal.getConfig().parallaxBackgroundImage) {\n\t\t\tthis.element.style.backgroundImage =\n\t\t\t\t'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize =\n\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat =\n\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition =\n\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add(\"has-parallax-background\");\n\t\t\t}, 1);\n\t\t} else {\n\t\t\tthis.element.style.backgroundImage = \"\";\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\n\t\t\t\t\"has-parallax-background\",\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground(slide, container) {\n\t\t// Main slide background element\n\t\tlet element = document.createElement(\"div\");\n\t\telement.className =\n\t\t\t\"slide-background \" + slide.className.replace(/present|past|future/, \"\");\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement(\"div\");\n\t\tcontentElement.className = \"slide-background-content\";\n\n\t\telement.appendChild(contentElement);\n\t\tcontainer.appendChild(element);\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync(slide);\n\n\t\treturn element;\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync(slide) {\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute(\"data-background\"),\n\t\t\tbackgroundSize: slide.getAttribute(\"data-background-size\"),\n\t\t\tbackgroundImage: slide.getAttribute(\"data-background-image\"),\n\t\t\tbackgroundVideo: slide.getAttribute(\"data-background-video\"),\n\t\t\tbackgroundIframe: slide.getAttribute(\"data-background-iframe\"),\n\t\t\tbackgroundColor: slide.getAttribute(\"data-background-color\"),\n\t\t\tbackgroundGradient: slide.getAttribute(\"data-background-gradient\"),\n\t\t\tbackgroundRepeat: slide.getAttribute(\"data-background-repeat\"),\n\t\t\tbackgroundPosition: slide.getAttribute(\"data-background-position\"),\n\t\t\tbackgroundTransition: slide.getAttribute(\"data-background-transition\"),\n\t\t\tbackgroundOpacity: slide.getAttribute(\"data-background-opacity\"),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute(\"data-preload\");\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove(\"has-dark-background\");\n\t\tslide.classList.remove(\"has-light-background\");\n\n\t\telement.removeAttribute(\"data-loaded\");\n\t\telement.removeAttribute(\"data-background-hash\");\n\t\telement.removeAttribute(\"data-background-size\");\n\t\telement.removeAttribute(\"data-background-transition\");\n\t\telement.style.backgroundColor = \"\";\n\n\t\tcontentElement.style.backgroundSize = \"\";\n\t\tcontentElement.style.backgroundRepeat = \"\";\n\t\tcontentElement.style.backgroundPosition = \"\";\n\t\tcontentElement.style.backgroundImage = \"\";\n\t\tcontentElement.style.opacity = \"\";\n\t\tcontentElement.innerHTML = \"\";\n\n\t\tif (data.background) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif (\n\t\t\t\t/^(http|file|\\/\\/)/gi.test(data.background) ||\n\t\t\t\t/\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test(data.background)\n\t\t\t) {\n\t\t\t\tslide.setAttribute(\"data-background-image\", data.background);\n\t\t\t} else {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif (\n\t\t\tdata.background ||\n\t\t\tdata.backgroundColor ||\n\t\t\tdata.backgroundGradient ||\n\t\t\tdata.backgroundImage ||\n\t\t\tdata.backgroundVideo ||\n\t\t\tdata.backgroundIframe\n\t\t) {\n\t\t\telement.setAttribute(\n\t\t\t\t\"data-background-hash\",\n\t\t\t\tdata.background +\n\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\tdata.backgroundOpacity,\n\t\t\t);\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif (data.backgroundSize)\n\t\t\telement.setAttribute(\"data-background-size\", data.backgroundSize);\n\t\tif (data.backgroundColor)\n\t\t\telement.style.backgroundColor = data.backgroundColor;\n\t\tif (data.backgroundGradient)\n\t\t\telement.style.backgroundImage = data.backgroundGradient;\n\t\tif (data.backgroundTransition)\n\t\t\telement.setAttribute(\n\t\t\t\t\"data-background-transition\",\n\t\t\t\tdata.backgroundTransition,\n\t\t\t);\n\n\t\tif (dataPreload) element.setAttribute(\"data-preload\", \"\");\n\n\t\t// Background image options are set on the content wrapper\n\t\tif (data.backgroundSize)\n\t\t\tcontentElement.style.backgroundSize = data.backgroundSize;\n\t\tif (data.backgroundRepeat)\n\t\t\tcontentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif (data.backgroundPosition)\n\t\t\tcontentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif (data.backgroundOpacity)\n\t\t\tcontentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass(slide);\n\n\t\tif (typeof contrastClass === \"string\") {\n\t\t\tslide.classList.add(contrastClass);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass(slide) {\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute(\"data-background-color\");\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif (!contrastColor || !colorToRgb(contrastColor)) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle(element);\n\t\t\tif (computedBackgroundStyle && computedBackgroundStyle.backgroundColor) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif (contrastColor) {\n\t\t\tconst rgb = colorToRgb(contrastColor);\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif (rgb && rgb.a !== 0) {\n\t\t\t\tif (colorBrightness(contrastColor) < 128) {\n\t\t\t\t\treturn \"has-dark-background\";\n\t\t\t\t} else {\n\t\t\t\t\treturn \"has-light-background\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement(slide, target) {\n\t\t[\"has-light-background\", \"has-dark-background\"].forEach((classToBubble) => {\n\t\t\tif (slide.classList.contains(classToBubble)) {\n\t\t\t\ttarget.classList.add(classToBubble);\n\t\t\t} else {\n\t\t\t\ttarget.classList.remove(classToBubble);\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate(includeAll = false) {\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? \"future\" : \"past\",\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? \"past\" : \"future\";\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from(this.element.childNodes).forEach((backgroundh, h) => {\n\t\t\tbackgroundh.classList.remove(\"past\", \"present\", \"future\");\n\n\t\t\tif (h < indices.h) {\n\t\t\t\tbackgroundh.classList.add(horizontalPast);\n\t\t\t} else if (h > indices.h) {\n\t\t\t\tbackgroundh.classList.add(horizontalFuture);\n\t\t\t} else {\n\t\t\t\tbackgroundh.classList.add(\"present\");\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif (includeAll || h === indices.h) {\n\t\t\t\tqueryAll(backgroundh, \".slide-background\").forEach((backgroundv, v) => {\n\t\t\t\t\tbackgroundv.classList.remove(\"past\", \"present\", \"future\");\n\n\t\t\t\t\tconst indexv = typeof indices.v === \"number\" ? indices.v : 0;\n\n\t\t\t\t\tif (v < indexv) {\n\t\t\t\t\t\tbackgroundv.classList.add(\"past\");\n\t\t\t\t\t} else if (v > indexv) {\n\t\t\t\t\t\tbackgroundv.classList.add(\"future\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbackgroundv.classList.add(\"present\");\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif (h === indices.h) currentBackground = backgroundv;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif (this.previousBackground) {\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent(this.previousBackground, {\n\t\t\t\tunloadIframes: !this.Reveal.slideContent.shouldPreload(\n\t\t\t\t\tthis.previousBackground,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif (currentBackground) {\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent(currentBackground);\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector(\n\t\t\t\t\".slide-background-content\",\n\t\t\t);\n\t\t\tif (currentBackgroundContent) {\n\t\t\t\tlet backgroundImageURL =\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage || \"\";\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif (/\\.gif/i.test(backgroundImageURL)) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = \"\";\n\t\t\t\t\twindow.getComputedStyle(currentBackgroundContent).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground\n\t\t\t\t? this.previousBackground.getAttribute(\"data-background-hash\")\n\t\t\t\t: null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute(\n\t\t\t\t\"data-background-hash\",\n\t\t\t);\n\t\t\tif (\n\t\t\t\tcurrentBackgroundHash &&\n\t\t\t\tcurrentBackgroundHash === previousBackgroundHash &&\n\t\t\t\tcurrentBackground !== this.previousBackground\n\t\t\t) {\n\t\t\t\tthis.element.classList.add(\"no-transition\");\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif (currentSlide) {\n\t\t\tthis.bubbleSlideContrastClassToElement(\n\t\t\t\tcurrentSlide,\n\t\t\t\tthis.Reveal.getRevealElement(),\n\t\t\t);\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout(() => {\n\t\t\tthis.element.classList.remove(\"no-transition\");\n\t\t}, 1);\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif (this.Reveal.getConfig().parallaxBackgroundImage) {\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split(\" \"),\n\t\t\t\tbackgroundWidth,\n\t\t\t\tbackgroundHeight;\n\n\t\t\tif (backgroundSize.length === 1) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt(backgroundSize[0], 10);\n\t\t\t} else {\n\t\t\t\tbackgroundWidth = parseInt(backgroundSize[0], 10);\n\t\t\t\tbackgroundHeight = parseInt(backgroundSize[1], 10);\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif (\n\t\t\t\ttypeof this.Reveal.getConfig().parallaxBackgroundHorizontal === \"number\"\n\t\t\t) {\n\t\t\t\thorizontalOffsetMultiplier =\n\t\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t} else {\n\t\t\t\thorizontalOffsetMultiplier =\n\t\t\t\t\thorizontalSlideCount > 1\n\t\t\t\t\t\t? (backgroundWidth - slideWidth) / (horizontalSlideCount - 1)\n\t\t\t\t\t\t: 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif (\n\t\t\t\ttypeof this.Reveal.getConfig().parallaxBackgroundVertical === \"number\"\n\t\t\t) {\n\t\t\t\tverticalOffsetMultiplier =\n\t\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t} else {\n\t\t\t\tverticalOffsetMultiplier =\n\t\t\t\t\t(backgroundHeight - slideHeight) / (verticalSlideCount - 1);\n\t\t\t}\n\n\t\t\tverticalOffset =\n\t\t\t\tverticalSlideCount > 0 ? verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition =\n\t\t\t\thorizontalOffset + \"px \" + -verticalOffset + \"px\";\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.element.remove();\n\t}\n}\n","import {\n\tqueryAll,\n\textend,\n\tcreateStyleSheet,\n\tmatches,\n\tclosest,\n} from \"../utils/util.js\";\nimport { FRAGMENT_STYLE_REGEX } from \"../utils/constants.js\";\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun(fromSlide, toSlide) {\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf(toSlide);\n\t\tlet fromSlideIndex = allSlides.indexOf(fromSlide);\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif (\n\t\t\tfromSlide.hasAttribute(\"data-auto-animate\") &&\n\t\t\ttoSlide.hasAttribute(\"data-auto-animate\") &&\n\t\t\tfromSlide.getAttribute(\"data-auto-animate-id\") ===\n\t\t\t\ttoSlide.getAttribute(\"data-auto-animate-id\") &&\n\t\t\t!(toSlideIndex > fromSlideIndex ? toSlide : fromSlide).hasAttribute(\n\t\t\t\t\"data-auto-animate-restart\",\n\t\t\t)\n\t\t) {\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet =\n\t\t\t\tthis.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions(toSlide);\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = \"pending\";\n\t\t\ttoSlide.dataset.autoAnimate = \"pending\";\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection =\n\t\t\t\ttoSlideIndex > fromSlideIndex ? \"forward\" : \"backward\";\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === \"none\";\n\t\t\tif (fromSlideIsHidden)\n\t\t\t\tfromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements(fromSlide, toSlide).map(\n\t\t\t\t(elements) => {\n\t\t\t\t\treturn this.autoAnimateElements(\n\t\t\t\t\t\telements.from,\n\t\t\t\t\t\telements.to,\n\t\t\t\t\t\telements.options || {},\n\t\t\t\t\t\tanimationOptions,\n\t\t\t\t\t\tautoAnimateCounter++,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (fromSlideIsHidden) fromSlide.style.display = \"none\";\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif (\n\t\t\t\ttoSlide.dataset.autoAnimateUnmatched !== \"false\" &&\n\t\t\t\tthis.Reveal.getConfig().autoAnimateUnmatched === true\n\t\t\t) {\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements(toSlide).forEach(\n\t\t\t\t\t(unmatchedElement) => {\n\t\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions(\n\t\t\t\t\t\t\tunmatchedElement,\n\t\t\t\t\t\t\tanimationOptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlet id = \"unmatched\";\n\n\t\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tunmatchedOptions.duration !== animationOptions.duration ||\n\t\t\t\t\t\t\tunmatchedOptions.delay !== animationOptions.delay\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid = \"unmatched-\" + autoAnimateCounter++;\n\t\t\t\t\t\t\tcss.push(\n\t\t\t\t\t\t\t\t`[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\t\t\t\t\t},\n\t\t\t\t\tthis,\n\t\t\t\t);\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push(\n\t\t\t\t\t`[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join(\"\");\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tif (this.autoAnimateStyleSheet) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle(this.autoAnimateStyleSheet).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = \"running\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: \"autoanimate\",\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\t\t// Reset slides\n\t\tqueryAll(\n\t\t\tthis.Reveal.getRevealElement(),\n\t\t\t'[data-auto-animate]:not([data-auto-animate=\"\"])',\n\t\t).forEach((element) => {\n\t\t\telement.dataset.autoAnimate = \"\";\n\t\t});\n\n\t\t// Reset elements\n\t\tqueryAll(\n\t\t\tthis.Reveal.getRevealElement(),\n\t\t\t\"[data-auto-animate-target]\",\n\t\t).forEach((element) => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t});\n\n\t\t// Remove the animation sheet\n\t\tif (this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild(\n\t\t\t\tthis.autoAnimateStyleSheet,\n\t\t\t);\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements(from, to, elementOptions, animationOptions, id) {\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = \"\";\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions(to, animationOptions);\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif (typeof elementOptions.delay !== \"undefined\")\n\t\t\toptions.delay = elementOptions.delay;\n\t\tif (typeof elementOptions.duration !== \"undefined\")\n\t\t\toptions.duration = elementOptions.duration;\n\t\tif (typeof elementOptions.easing !== \"undefined\")\n\t\t\toptions.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties(\n\t\t\t\t\"from\",\n\t\t\t\tfrom,\n\t\t\t\telementOptions,\n\t\t\t),\n\t\t\ttoProps = this.getAutoAnimatableProperties(\"to\", to, elementOptions);\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif (to.classList.contains(\"fragment\")) {\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles[\"opacity\"];\n\n\t\t\tif (from.classList.contains(\"fragment\")) {\n\t\t\t\tlet fromFragmentStyle = (from.className.match(FRAGMENT_STYLE_REGEX) || [\n\t\t\t\t\t\"\",\n\t\t\t\t])[0];\n\t\t\t\tlet toFragmentStyle = (to.className.match(FRAGMENT_STYLE_REGEX) || [\n\t\t\t\t\t\"\",\n\t\t\t\t])[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif (\n\t\t\t\t\tfromFragmentStyle === toFragmentStyle &&\n\t\t\t\t\tanimationOptions.slideDirection === \"forward\"\n\t\t\t\t) {\n\t\t\t\t\tto.classList.add(\"visible\", \"disabled\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif (elementOptions.translate !== false || elementOptions.scale !== false) {\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: (fromProps.x - toProps.x) / presentationScale,\n\t\t\t\ty: (fromProps.y - toProps.y) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height,\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round(delta.x * 1000) / 1000;\n\t\t\tdelta.y = Math.round(delta.y * 1000) / 1000;\n\t\t\tdelta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\n\t\t\tdelta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\n\n\t\t\tlet translate =\n\t\t\t\t\telementOptions.translate !== false &&\n\t\t\t\t\t(delta.x !== 0 || delta.y !== 0),\n\t\t\t\tscale =\n\t\t\t\t\telementOptions.scale !== false &&\n\t\t\t\t\t(delta.scaleX !== 0 || delta.scaleY !== 0);\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif (translate || scale) {\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif (translate) transform.push(`translate(${delta.x}px, ${delta.y}px)`);\n\t\t\t\tif (scale) transform.push(`scale(${delta.scaleX}, ${delta.scaleY})`);\n\n\t\t\t\tfromProps.styles[\"transform\"] = transform.join(\" \");\n\t\t\t\tfromProps.styles[\"transform-origin\"] = \"top left\";\n\n\t\t\t\ttoProps.styles[\"transform\"] = \"none\";\n\t\t\t}\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor (let propertyName in toProps.styles) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif (toValue === fromValue) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t} else {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif (toValue.explicitValue === true) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif (fromValue.explicitValue === true) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = \"\";\n\n\t\tlet toStyleProperties = Object.keys(toProps.styles);\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif (toStyleProperties.length > 0) {\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles[\"transition\"] = \"none\";\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles[\"transition\"] =\n\t\t\t\t`all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles[\"transition-property\"] = toStyleProperties.join(\", \");\n\t\t\ttoProps.styles[\"will-change\"] = toStyleProperties.join(\", \");\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys(fromProps.styles)\n\t\t\t\t.map((propertyName) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tpropertyName +\n\t\t\t\t\t\t\": \" +\n\t\t\t\t\t\tfromProps.styles[propertyName] +\n\t\t\t\t\t\t\" !important;\"\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.join(\"\");\n\n\t\t\tlet toCSS = Object.keys(toProps.styles)\n\t\t\t\t.map((propertyName) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tpropertyName + \": \" + toProps.styles[propertyName] + \" !important;\"\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.join(\"\");\n\n\t\t\tcss =\n\t\t\t\t'[data-auto-animate-target=\"' +\n\t\t\t\tid +\n\t\t\t\t'\"] {' +\n\t\t\t\tfromCSS +\n\t\t\t\t\"}\" +\n\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"' +\n\t\t\t\tid +\n\t\t\t\t'\"] {' +\n\t\t\t\ttoCSS +\n\t\t\t\t\"}\";\n\t\t}\n\n\t\treturn css;\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions(element, inheritedOptions) {\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0,\n\t\t};\n\n\t\toptions = extend(options, inheritedOptions);\n\n\t\t// Inherit options from parent elements\n\t\tif (element.parentNode) {\n\t\t\tlet autoAnimatedParent = closest(\n\t\t\t\telement.parentNode,\n\t\t\t\t\"[data-auto-animate-target]\",\n\t\t\t);\n\t\t\tif (autoAnimatedParent) {\n\t\t\t\toptions = this.getAutoAnimateOptions(autoAnimatedParent, options);\n\t\t\t}\n\t\t}\n\n\t\tif (element.dataset.autoAnimateEasing) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif (element.dataset.autoAnimateDuration) {\n\t\t\toptions.duration = parseFloat(element.dataset.autoAnimateDuration);\n\t\t}\n\n\t\tif (element.dataset.autoAnimateDelay) {\n\t\t\toptions.delay = parseFloat(element.dataset.autoAnimateDelay);\n\t\t}\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties(direction, element, elementOptions) {\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif (elementOptions.translate !== false || elementOptions.scale !== false) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif (typeof elementOptions.measure === \"function\") {\n\t\t\t\tbounds = elementOptions.measure(element);\n\t\t\t} else {\n\t\t\t\tif (config.center) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t} else {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle(element);\n\n\t\t// CSS styles\n\t\t(elementOptions.styles || config.autoAnimateStyles).forEach((style) => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif (typeof style === \"string\") style = { property: style };\n\n\t\t\tif (typeof style.from !== \"undefined\" && direction === \"from\") {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t} else if (typeof style.to !== \"undefined\" && direction === \"to\") {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t} else {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif (style.property === \"line-height\") {\n\t\t\t\t\tvalue =\n\t\t\t\t\t\tparseFloat(computedStyles[\"line-height\"]) /\n\t\t\t\t\t\tparseFloat(computedStyles[\"font-size\"]);\n\t\t\t\t}\n\n\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value !== \"\") {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements(fromSlide, toSlide) {\n\t\tlet matcher =\n\t\t\ttypeof this.Reveal.getConfig().autoAnimateMatcher === \"function\"\n\t\t\t\t? this.Reveal.getConfig().autoAnimateMatcher\n\t\t\t\t: this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call(this, fromSlide, toSlide);\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter((pair, index) => {\n\t\t\tif (reserved.indexOf(pair.to) === -1) {\n\t\t\t\treserved.push(pair.to);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs(fromSlide, toSlide) {\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = \"pre\";\n\t\tconst textNodes = \"h1, h2, h3, h4, h5, h6, p, li\";\n\t\tconst mediaNodes = \"img, video, iframe\";\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches(\n\t\t\tpairs,\n\t\t\tfromSlide,\n\t\t\ttoSlide,\n\t\t\t\"[data-id]\",\n\t\t\t(node) => {\n\t\t\t\treturn node.nodeName + \":::\" + node.getAttribute(\"data-id\");\n\t\t\t},\n\t\t);\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches(\n\t\t\tpairs,\n\t\t\tfromSlide,\n\t\t\ttoSlide,\n\t\t\ttextNodes,\n\t\t\t(node) => {\n\t\t\t\treturn node.nodeName + \":::\" + node.innerText;\n\t\t\t},\n\t\t);\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches(\n\t\t\tpairs,\n\t\t\tfromSlide,\n\t\t\ttoSlide,\n\t\t\tmediaNodes,\n\t\t\t(node) => {\n\t\t\t\treturn (\n\t\t\t\t\tnode.nodeName +\n\t\t\t\t\t\":::\" +\n\t\t\t\t\t(node.getAttribute(\"src\") || node.getAttribute(\"data-src\"))\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches(\n\t\t\tpairs,\n\t\t\tfromSlide,\n\t\t\ttoSlide,\n\t\t\tcodeNodes,\n\t\t\t(node) => {\n\t\t\t\treturn node.nodeName + \":::\" + node.innerText;\n\t\t\t},\n\t\t);\n\n\t\tpairs.forEach((pair) => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif (matches(pair.from, textNodes)) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if (matches(pair.from, codeNodes)) {\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [\"width\", \"height\"] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches(\n\t\t\t\t\tpairs,\n\t\t\t\t\tpair.from,\n\t\t\t\t\tpair.to,\n\t\t\t\t\t\".hljs .hljs-ln-code\",\n\t\t\t\t\t(node) => {\n\t\t\t\t\t\treturn node.textContent;\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tscale: false,\n\t\t\t\t\t\tstyles: [],\n\t\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind(this),\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches(\n\t\t\t\t\tpairs,\n\t\t\t\t\tpair.from,\n\t\t\t\t\tpair.to,\n\t\t\t\t\t\".hljs .hljs-ln-numbers[data-line-number]\",\n\t\t\t\t\t(node) => {\n\t\t\t\t\t\treturn node.getAttribute(\"data-line-number\");\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tscale: false,\n\t\t\t\t\t\tstyles: [\"width\"],\n\t\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind(this),\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}, this);\n\n\t\treturn pairs;\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox(element) {\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round(element.offsetLeft * presentationScale * 100) / 100,\n\t\t\ty: Math.round(element.offsetTop * presentationScale * 100) / 100,\n\t\t\twidth: Math.round(element.offsetWidth * presentationScale * 100) / 100,\n\t\t\theight: Math.round(element.offsetHeight * presentationScale * 100) / 100,\n\t\t};\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches(\n\t\tpairs,\n\t\tfromScope,\n\t\ttoScope,\n\t\tselector,\n\t\tserializer,\n\t\tanimationOptions,\n\t) {\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice\n\t\t\t.call(fromScope.querySelectorAll(selector))\n\t\t\t.forEach((element, i) => {\n\t\t\t\tconst key = serializer(element);\n\t\t\t\tif (typeof key === \"string\" && key.length) {\n\t\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\t\tfromMatches[key].push(element);\n\t\t\t\t}\n\t\t\t});\n\n\t\t[].slice.call(toScope.querySelectorAll(selector)).forEach((element, i) => {\n\t\t\tconst key = serializer(element);\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push(element);\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif (fromMatches[key]) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif (fromMatches[key][primaryIndex]) {\n\t\t\t\t\tfromElement = fromMatches[key][primaryIndex];\n\t\t\t\t\tfromMatches[key][primaryIndex] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if (fromMatches[key][secondaryIndex]) {\n\t\t\t\t\tfromElement = fromMatches[key][secondaryIndex];\n\t\t\t\t\tfromMatches[key][secondaryIndex] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif (fromElement) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements(rootElement) {\n\t\treturn [].slice.call(rootElement.children).reduce((result, element) => {\n\t\t\tconst containsAnimatedElements = element.querySelector(\n\t\t\t\t\"[data-auto-animate-target]\",\n\t\t\t);\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif (\n\t\t\t\t!element.hasAttribute(\"data-auto-animate-target\") &&\n\t\t\t\t!containsAnimatedElements\n\t\t\t) {\n\t\t\t\tresult.push(element);\n\t\t\t}\n\n\t\t\tif (element.querySelector(\"[data-auto-animate-target]\")) {\n\t\t\t\tresult = result.concat(this.getUnmatchedAutoAnimateElements(element));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, []);\n\t}\n}\n","import {\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tHORIZONTAL_BACKGROUNDS_SELECTOR,\n} from \"../utils/constants.js\";\nimport { queryAll } from \"../utils/util.js\";\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind(this);\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\t\tif (this.active) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll(\n\t\t\tthis.Reveal.getRevealElement(),\n\t\t\tHORIZONTAL_SLIDES_SELECTOR,\n\t\t);\n\t\tconst horizontalBackgrounds = queryAll(\n\t\t\tthis.Reveal.getRevealElement(),\n\t\t\tHORIZONTAL_BACKGROUNDS_SELECTOR,\n\t\t);\n\n\t\tthis.viewportElement.classList.add(\"loading-scroll-mode\", \"reveal-scroll\");\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle(this.viewportElement);\n\t\tif (viewportStyles && viewportStyles.background) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = (slide, h, v, isVertical) => {\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif (\n\t\t\t\tpreviousSlide &&\n\t\t\t\tthis.Reveal.shouldAutoAnimateBetween(previousSlide, slide)\n\t\t\t) {\n\t\t\t\tcontentContainer = document.createElement(\"div\");\n\t\t\t\tcontentContainer.className =\n\t\t\t\t\t\"scroll-page-content scroll-auto-animate-page\";\n\t\t\t\tcontentContainer.style.display = \"none\";\n\t\t\t\tpreviousSlide\n\t\t\t\t\t.closest(\".scroll-page-content\")\n\t\t\t\t\t.parentNode.appendChild(contentContainer);\n\t\t\t} else {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement(\"div\");\n\t\t\t\tpage.className = \"scroll-page\";\n\t\t\t\tpageElements.push(page);\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif (isVertical && horizontalBackgrounds.length > h) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle(slideBackground);\n\n\t\t\t\t\tif (pageBackground && pageBackground.background) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t} else if (presentationBackground) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if (presentationBackground) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement(\"div\");\n\t\t\t\tstickyContainer.className = \"scroll-page-sticky\";\n\t\t\t\tpage.appendChild(stickyContainer);\n\n\t\t\t\tcontentContainer = document.createElement(\"div\");\n\t\t\t\tcontentContainer.className = \"scroll-page-content\";\n\t\t\t\tstickyContainer.appendChild(contentContainer);\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild(slide);\n\n\t\t\tslide.classList.remove(\"past\", \"future\");\n\t\t\tslide.setAttribute(\"data-index-h\", h);\n\t\t\tslide.setAttribute(\"data-index-v\", v);\n\n\t\t\tif (slide.slideBackgroundElement) {\n\t\t\t\tslide.slideBackgroundElement.remove(\"past\", \"future\");\n\t\t\t\tcontentContainer.insertBefore(slide.slideBackgroundElement, slide);\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\t\t};\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach((horizontalSlide, h) => {\n\t\t\tif (this.Reveal.isVerticalStack(horizontalSlide)) {\n\t\t\t\thorizontalSlide\n\t\t\t\t\t.querySelectorAll(\"section\")\n\t\t\t\t\t.forEach((verticalSlide, v) => {\n\t\t\t\t\t\tcreatePageElement(verticalSlide, h, v, true);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcreatePageElement(horizontalSlide, h, 0);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll(this.Reveal.getRevealElement(), \".stack\").forEach((stack) =>\n\t\t\tstack.remove(),\n\t\t);\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach((page) => pageContainer.appendChild(page));\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout(this.Reveal.getSlidesElement());\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState(stateBeforeActivation);\n\n\t\tthis.activatedCallbacks.forEach((callback) => callback());\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove(\"loading-scroll-mode\");\n\t\tthis.viewportElement.addEventListener(\"scroll\", this.onScroll, {\n\t\t\tpassive: true,\n\t\t});\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\t\tif (!this.active) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener(\"scroll\", this.onScroll);\n\t\tthis.viewportElement.classList.remove(\"reveal-scroll\");\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState(stateBeforeDeactivation);\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\t}\n\n\ttoggle(override) {\n\t\tif (typeof override === \"boolean\") {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t} else {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\t\treturn this.active;\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\t\tthis.progressBar = document.createElement(\"div\");\n\t\tthis.progressBar.className = \"scrollbar\";\n\n\t\tthis.progressBarInner = document.createElement(\"div\");\n\t\tthis.progressBarInner.className = \"scrollbar-inner\";\n\t\tthis.progressBar.appendChild(this.progressBarInner);\n\n\t\tthis.progressBarPlayhead = document.createElement(\"div\");\n\t\tthis.progressBarPlayhead.className = \"scrollbar-playhead\";\n\t\tthis.progressBarInner.appendChild(this.progressBarPlayhead);\n\n\t\tthis.viewportElement.insertBefore(\n\t\t\tthis.progressBar,\n\t\t\tthis.viewportElement.firstChild,\n\t\t);\n\n\t\tconst handleDocumentMouseMove = (event) => {\n\t\t\tlet progress =\n\t\t\t\t(event.clientY - this.progressBarInner.getBoundingClientRect().top) /\n\t\t\t\tthis.progressBarHeight;\n\t\t\tprogress = Math.max(Math.min(progress, 1), 0);\n\n\t\t\tthis.viewportElement.scrollTop =\n\t\t\t\tprogress *\n\t\t\t\t(this.viewportElement.scrollHeight - this.viewportElement.offsetHeight);\n\t\t};\n\n\t\tconst handleDocumentMouseUp = (event) => {\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener(\"mousemove\", handleDocumentMouseMove);\n\t\t\tdocument.removeEventListener(\"mouseup\", handleDocumentMouseUp);\n\t\t};\n\n\t\tconst handleMouseDown = (event) => {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener(\"mousemove\", handleDocumentMouseMove);\n\t\t\tdocument.addEventListener(\"mouseup\", handleDocumentMouseUp);\n\n\t\t\thandleDocumentMouseMove(event);\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener(\"mousedown\", handleMouseDown);\n\t}\n\n\tremoveProgressBar() {\n\t\tif (this.progressBar) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\t}\n\n\tlayout() {\n\t\tif (this.isActive()) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize(\n\t\t\twindow.innerWidth,\n\t\t\twindow.innerHeight,\n\t\t);\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === \"compact\";\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout\n\t\t\t? compactHeight\n\t\t\t: viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty(\"--page-height\", pageHeight + \"px\");\n\t\tthis.viewportElement.style.scrollSnapType =\n\t\t\ttypeof config.scrollSnap === \"string\" ? `y ${config.scrollSnap}` : \"\";\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from(\n\t\t\tthis.Reveal.getRevealElement().querySelectorAll(\".scroll-page\"),\n\t\t);\n\n\t\tthis.pages = pageElements.map((pageElement) => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector(\"section\"),\n\t\t\t\tstickyElement: pageElement.querySelector(\".scroll-page-sticky\"),\n\t\t\t\tcontentElement: pageElement.querySelector(\".scroll-page-content\"),\n\t\t\t\tbackgroundElement: pageElement.querySelector(\".slide-background\"),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll(\n\t\t\t\t\t\".scroll-auto-animate-page\",\n\t\t\t\t),\n\t\t\t\tautoAnimatePages: [],\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty(\n\t\t\t\t\"--slide-height\",\n\t\t\t\tconfig.center === true ? \"auto\" : slideSize.height + \"px\",\n\t\t\t);\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage(page),\n\t\t\t\tdeactivate: () => this.deactivatePage(page),\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage(page);\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif (page.autoAnimateElements.length > 0) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage(page);\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max(page.scrollTriggers.length - 1, 0);\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce((total, page) => {\n\t\t\t\treturn total + Math.max(page.scrollTriggers.length - 1, 0);\n\t\t\t}, page.autoAnimatePages.length);\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement\n\t\t\t\t.querySelectorAll(\".scroll-snap-point\")\n\t\t\t\t.forEach((el) => el.remove());\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor (let i = 0; i < totalScrollTriggerCount + 1; i++) {\n\t\t\t\tconst triggerStick = document.createElement(\"div\");\n\t\t\t\ttriggerStick.className = \"scroll-snap-point\";\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + \"px\";\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout\n\t\t\t\t\t? \"center\"\n\t\t\t\t\t: \"start\";\n\t\t\t\tpage.pageElement.appendChild(triggerStick);\n\n\t\t\t\tif (i === 0) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + \"px\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif (useCompactLayout && page.scrollTriggers.length > 0) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty(\n\t\t\t\t\t\"--page-height\",\n\t\t\t\t\tviewportHeight + \"px\",\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty(\"--page-height\");\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty(\n\t\t\t\t\"--page-scroll-padding\",\n\t\t\t\tpage.scrollPadding + \"px\",\n\t\t\t);\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif (totalScrollTriggerCount > 0) {\n\t\t\t\tpage.stickyElement.style.position = \"sticky\";\n\t\t\t\tpage.stickyElement.style.top =\n\t\t\t\t\tMath.max((viewportHeight - page.pageHeight) / 2, 0) + \"px\";\n\t\t\t} else {\n\t\t\t\tpage.stickyElement.style.position = \"relative\";\n\t\t\t\tpage.pageElement.style.scrollSnapAlign =\n\t\t\t\t\tpage.pageHeight < viewportHeight ? \"center\" : \"start\";\n\t\t\t}\n\n\t\t\treturn page;\n\t\t});\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute(\"data-scrollbar\", config.scrollProgress);\n\n\t\tif (config.scrollProgress && this.totalScrollTriggerCount > 1) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif (!this.progressBar) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t} else {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce(\n\t\t\t(total, trigger) => {\n\t\t\t\treturn total + Math.max(trigger.page.scrollTriggers.length, 1);\n\t\t\t},\n\t\t\t0,\n\t\t);\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach((trigger, i) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart +\n\t\t\t\t\tMath.max(trigger.page.scrollTriggers.length, 1) /\n\t\t\t\t\t\tthis.totalScrollTriggerCount,\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize =\n\t\t\t\t(trigger.range[1] - trigger.range[0]) /\n\t\t\t\ttrigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach((scrollTrigger, i) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + (i + 1) * scrollTriggerSegmentSize,\n\t\t\t\t];\n\t\t\t});\n\n\t\t\trangeStart = trigger.range[1];\n\t\t});\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage(page, slideElement) {\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort(\n\t\t\tslideElement.querySelectorAll(\".fragment\"),\n\t\t\ttrue,\n\t\t);\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif (fragmentGroups.length) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort(\n\t\t\t\tslideElement.querySelectorAll(\".fragment:not(.disabled)\"),\n\t\t\t);\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update(-1, page.fragments, slideElement);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach((fragments, i) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update(i, page.fragments, slideElement);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn page.scrollTriggers.length;\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage(page) {\n\t\tif (page.autoAnimateElements.length > 0) {\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push(\n\t\t\t\t...Array.from(page.autoAnimateElements).map((autoAnimateElement, i) => {\n\t\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\t\tslideElement: autoAnimateElement.querySelector(\"section\"),\n\t\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\t\tbackgroundElement:\n\t\t\t\t\t\t\tautoAnimateElement.querySelector(\".slide-background\"),\n\t\t\t\t\t});\n\n\t\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\t\tthis.createFragmentTriggersForPage(\n\t\t\t\t\t\tautoAnimatePage,\n\t\t\t\t\t\tautoAnimatePage.slideElement,\n\t\t\t\t\t);\n\n\t\t\t\t\tpage.autoAnimatePages.push(autoAnimatePage);\n\n\t\t\t\t\t// Return our slide trigger\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\t\tactivate: () => this.activatePage(autoAnimatePage),\n\t\t\t\t\t\tdeactivate: () => this.deactivatePage(autoAnimatePage),\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage(page) {\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt(page.slideElement.getAttribute(\"data-index-h\"), 10);\n\t\tpage.indexv = parseInt(page.slideElement.getAttribute(\"data-index-v\"), 10);\n\n\t\treturn page;\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\t\tthis.progressBarInner\n\t\t\t.querySelectorAll(\".scrollbar-slide\")\n\t\t\t.forEach((slide) => slide.remove());\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max(\n\t\t\tviewportHeightFactor * this.progressBarHeight,\n\t\t\tMIN_PLAYHEAD_HEIGHT,\n\t\t);\n\t\tthis.progressBarScrollableHeight =\n\t\t\tthis.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight =\n\t\t\t(viewportHeight / scrollHeight) * this.progressBarHeight;\n\t\tconst spacing = Math.min(progressSegmentHeight / 8, MAX_PROGRESS_SPACING);\n\n\t\tthis.progressBarPlayhead.style.height =\n\t\t\tthis.playheadHeight - spacing + \"px\";\n\n\t\t// Don't show individual segments if they're too small\n\t\tif (progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT) {\n\t\t\tthis.slideTriggers.forEach((slideTrigger) => {\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement(\"div\");\n\t\t\t\tpage.progressBarSlide.className = \"scrollbar-slide\";\n\t\t\t\tpage.progressBarSlide.style.top =\n\t\t\t\t\tslideTrigger.range[0] * this.progressBarHeight + \"px\";\n\t\t\t\tpage.progressBarSlide.style.height =\n\t\t\t\t\t(slideTrigger.range[1] - slideTrigger.range[0]) *\n\t\t\t\t\t\tthis.progressBarHeight -\n\t\t\t\t\tspacing +\n\t\t\t\t\t\"px\";\n\t\t\t\tpage.progressBarSlide.classList.toggle(\n\t\t\t\t\t\"has-triggers\",\n\t\t\t\t\tpage.scrollTriggers.length > 0,\n\t\t\t\t);\n\t\t\t\tthis.progressBarInner.appendChild(page.progressBarSlide);\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map((trigger, i) => {\n\t\t\t\t\tconst triggerElement = document.createElement(\"div\");\n\t\t\t\t\ttriggerElement.className = \"scrollbar-trigger\";\n\t\t\t\t\ttriggerElement.style.top =\n\t\t\t\t\t\t(trigger.range[0] - slideTrigger.range[0]) *\n\t\t\t\t\t\t\tthis.progressBarHeight +\n\t\t\t\t\t\t\"px\";\n\t\t\t\t\ttriggerElement.style.height =\n\t\t\t\t\t\t(trigger.range[1] - trigger.range[0]) * this.progressBarHeight -\n\t\t\t\t\t\tspacing +\n\t\t\t\t\t\t\"px\";\n\t\t\t\t\tpage.progressBarSlide.appendChild(triggerElement);\n\n\t\t\t\t\tif (i === 0) triggerElement.style.display = \"none\";\n\n\t\t\t\t\treturn triggerElement;\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.pages.forEach((page) => (page.progressBarSlide = null));\n\t\t}\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor =\n\t\t\tviewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight;\n\t\tconst scrollProgress = Math.max(Math.min(scrollTop / scrollHeight, 1), 0);\n\t\tconst scrollProgressMid = Math.max(\n\t\t\tMath.min(\n\t\t\t\t(scrollTop + viewportHeight / 2) / this.viewportElement.scrollHeight,\n\t\t\t\t1,\n\t\t\t),\n\t\t\t0,\n\t\t);\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach((trigger) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload =\n\t\t\t\tscrollProgress >= trigger.range[0] - viewportHeightFactor * 2 &&\n\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor * 2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif (shouldPreload && !page.loaded) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load(page.slideElement);\n\t\t\t} else if (page.loaded) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload(page.slideElement);\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif (\n\t\t\t\tscrollProgress >= trigger.range[0] &&\n\t\t\t\tscrollProgress <= trigger.range[1]\n\t\t\t) {\n\t\t\t\tthis.activateTrigger(trigger);\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if (trigger.active) {\n\t\t\t\tthis.deactivateTrigger(trigger);\n\t\t\t}\n\t\t});\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif (activePage) {\n\t\t\tactivePage.scrollTriggers.forEach((trigger) => {\n\t\t\t\tif (\n\t\t\t\t\tscrollProgressMid >= trigger.range[0] &&\n\t\t\t\t\tscrollProgressMid <= trigger.range[1]\n\t\t\t\t) {\n\t\t\t\t\tthis.activateTrigger(trigger);\n\t\t\t\t} else if (trigger.active) {\n\t\t\t\t\tthis.deactivateTrigger(trigger);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue(\n\t\t\tscrollTop / (this.viewportElement.scrollHeight - viewportHeight),\n\t\t);\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue(progress) {\n\t\tif (this.progressBar) {\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${\n\t\t\t\tprogress * this.progressBarScrollableHeight\n\t\t\t}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter((page) => page.progressBarSlide)\n\t\t\t\t.forEach((page) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle(\n\t\t\t\t\t\t\"active\",\n\t\t\t\t\t\tpage.active === true,\n\t\t\t\t\t);\n\n\t\t\t\t\tpage.scrollTriggers.forEach((trigger, i) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle(\n\t\t\t\t\t\t\t\"active\",\n\t\t\t\t\t\t\tpage.active === true && trigger.active === true,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\tthis.showProgressBar();\n\t\t}\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\t\tthis.progressBar.classList.add(\"visible\");\n\n\t\tclearTimeout(this.hideProgressBarTimeout);\n\n\t\tif (\n\t\t\tthis.Reveal.getConfig().scrollProgress === \"auto\" &&\n\t\t\t!this.draggingProgressBar\n\t\t) {\n\t\t\tthis.hideProgressBarTimeout = setTimeout(() => {\n\t\t\t\tif (this.progressBar) {\n\t\t\t\t\tthis.progressBar.classList.remove(\"visible\");\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide(slideElement) {\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif (!this.active) {\n\t\t\tthis.activatedCallbacks.push(() => this.scrollToSlide(slideElement));\n\t\t} else {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide(slideElement);\n\n\t\t\tif (trigger) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop =\n\t\t\t\t\ttrigger.range[0] *\n\t\t\t\t\t(this.viewportElement.scrollHeight -\n\t\t\t\t\t\tthis.viewportElement.offsetHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\t\tclearTimeout(this.storeScrollPositionTimeout);\n\n\t\tthis.storeScrollPositionTimeout = setTimeout(() => {\n\t\t\tsessionStorage.setItem(\n\t\t\t\t\"reveal-scroll-top\",\n\t\t\t\tthis.viewportElement.scrollTop,\n\t\t\t);\n\t\t\tsessionStorage.setItem(\n\t\t\t\t\"reveal-scroll-origin\",\n\t\t\t\tlocation.origin + location.pathname,\n\t\t\t);\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50);\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\t\tconst scrollPosition = sessionStorage.getItem(\"reveal-scroll-top\");\n\t\tconst scrollOrigin = sessionStorage.getItem(\"reveal-scroll-origin\");\n\n\t\tif (\n\t\t\tscrollPosition &&\n\t\t\tscrollOrigin === location.origin + location.pathname\n\t\t) {\n\t\t\tthis.viewportElement.scrollTop = parseInt(scrollPosition, 10);\n\t\t}\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage(page) {\n\t\tif (!page.active) {\n\t\t\tpage.active = true;\n\n\t\t\tconst {\n\t\t\t\tslideElement,\n\t\t\t\tbackgroundElement,\n\t\t\t\tcontentElement,\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t} = page;\n\n\t\t\tcontentElement.style.display = \"block\";\n\n\t\t\tslideElement.classList.add(\"present\");\n\n\t\t\tif (backgroundElement) {\n\t\t\t\tbackgroundElement.classList.add(\"present\");\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage(slideElement, indexh, indexv);\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement(\n\t\t\t\tslideElement,\n\t\t\t\tthis.viewportElement,\n\t\t\t);\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from(\n\t\t\t\tcontentElement.parentNode.querySelectorAll(\".scroll-page-content\"),\n\t\t\t).forEach((sibling) => {\n\t\t\t\tif (sibling !== contentElement) {\n\t\t\t\t\tsibling.style.display = \"none\";\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage(page) {\n\t\tif (page.active) {\n\t\t\tpage.active = false;\n\t\t\tif (page.slideElement) page.slideElement.classList.remove(\"present\");\n\t\t\tif (page.backgroundElement)\n\t\t\t\tpage.backgroundElement.classList.remove(\"present\");\n\t\t}\n\t}\n\n\tactivateTrigger(trigger) {\n\t\tif (!trigger.active) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\t}\n\n\tdeactivateTrigger(trigger) {\n\t\tif (trigger.active) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif (trigger.deactivate) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices(h, v) {\n\t\tconst page = this.getAllPages().find((page) => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t});\n\n\t\treturn page ? page.slideElement : null;\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide(slide) {\n\t\treturn this.slideTriggers.find(\n\t\t\t(trigger) => trigger.page.slideElement === slide,\n\t\t);\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\t\treturn this.pages.flatMap((page) => [\n\t\t\tpage,\n\t\t\t...(page.autoAnimatePages || []),\n\t\t]);\n\t}\n\n\tonScroll() {\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\t}\n\n\tget viewportElement() {\n\t\treturn this.Reveal.getViewportElement();\n\t}\n}\n","import { SLIDES_SELECTOR } from \"../utils/constants.js\";\nimport { queryAll, createStyleSheet } from \"../utils/util.js\";\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR);\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers =\n\t\t\tconfig.slideNumber && /all|print/i.test(config.showSlideNumber);\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize(\n\t\t\twindow.innerWidth,\n\t\t\twindow.innerHeight,\n\t\t);\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor(slideSize.width * (1 + config.margin)),\n\t\t\tpageHeight = Math.floor(slideSize.height * (1 + config.margin));\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise(requestAnimationFrame);\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet(\n\t\t\t\"@page{size:\" + pageWidth + \"px \" + pageHeight + \"px; margin: 0px;}\",\n\t\t);\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet(\n\t\t\t\".reveal section>img, .reveal section>video, .reveal section>iframe{max-width: \" +\n\t\t\t\tslideWidth +\n\t\t\t\t\"px; max-height:\" +\n\t\t\t\tslideHeight +\n\t\t\t\t\"px}\",\n\t\t);\n\n\t\tdocument.documentElement.classList.add(\"reveal-print\", \"print-pdf\");\n\t\tdocument.body.style.width = pageWidth + \"px\";\n\t\tdocument.body.style.height = pageHeight + \"px\";\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif (viewportElement) {\n\t\t\tconst viewportStyles = window.getComputedStyle(viewportElement);\n\t\t\tif (viewportStyles && viewportStyles.background) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise(requestAnimationFrame);\n\t\tthis.Reveal.layoutSlideContents(slideWidth, slideHeight);\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise(requestAnimationFrame);\n\n\t\tconst slideScrollHeights = slides.map((slide) => slide.scrollHeight);\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach(function (slide, index) {\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif (slide.classList.contains(\"stack\") === false) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = (pageWidth - slideWidth) / 2;\n\t\t\t\tlet top = (pageHeight - slideHeight) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[index];\n\t\t\t\tlet numberOfPages = Math.max(Math.ceil(contentHeight / pageHeight), 1);\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min(numberOfPages, config.pdfMaxPagesPerSlide);\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif (\n\t\t\t\t\t(numberOfPages === 1 && config.center) ||\n\t\t\t\t\tslide.classList.contains(\"center\")\n\t\t\t\t) {\n\t\t\t\t\ttop = Math.max((pageHeight - contentHeight) / 2, 0);\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement(\"div\");\n\t\t\t\tpages.push(page);\n\n\t\t\t\tpage.className = \"pdf-page\";\n\t\t\t\tpage.style.height =\n\t\t\t\t\t(pageHeight + config.pdfPageHeightOffset) * numberOfPages + \"px\";\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif (presentationBackground) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild(slide);\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + \"px\";\n\t\t\t\tslide.style.top = top + \"px\";\n\t\t\t\tslide.style.width = slideWidth + \"px\";\n\n\t\t\t\tthis.Reveal.slideContent.layout(slide);\n\n\t\t\t\tif (slide.slideBackgroundElement) {\n\t\t\t\t\tpage.insertBefore(slide.slideBackgroundElement, slide);\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif (config.showNotes) {\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes(slide);\n\t\t\t\t\tif (notes) {\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout =\n\t\t\t\t\t\t\ttypeof config.showNotes === \"string\"\n\t\t\t\t\t\t\t\t? config.showNotes\n\t\t\t\t\t\t\t\t: \"inline\";\n\t\t\t\t\t\tconst notesElement = document.createElement(\"div\");\n\t\t\t\t\t\tnotesElement.classList.add(\"speaker-notes\");\n\t\t\t\t\t\tnotesElement.classList.add(\"speaker-notes-pdf\");\n\t\t\t\t\t\tnotesElement.setAttribute(\"data-layout\", notesLayout);\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif (notesLayout === \"separate-page\") {\n\t\t\t\t\t\t\tpages.push(notesElement);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + \"px\";\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + \"px\";\n\t\t\t\t\t\t\tnotesElement.style.width = pageWidth - notesSpacing * 2 + \"px\";\n\t\t\t\t\t\t\tpage.appendChild(notesElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif (injectPageNumbers) {\n\t\t\t\t\tconst numberElement = document.createElement(\"div\");\n\t\t\t\t\tnumberElement.classList.add(\"slide-number\");\n\t\t\t\t\tnumberElement.classList.add(\"slide-number-pdf\");\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild(numberElement);\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif (config.pdfSeparateFragments) {\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort(\n\t\t\t\t\t\tpage.querySelectorAll(\".fragment\"),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach(function (fragments, index) {\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif (previousFragmentStep) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach(function (fragment) {\n\t\t\t\t\t\t\t\tfragment.classList.remove(\"current-fragment\");\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach(function (fragment) {\n\t\t\t\t\t\t\tfragment.classList.add(\"visible\", \"current-fragment\");\n\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode(true);\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif (injectPageNumbers) {\n\t\t\t\t\t\t\tconst numberElement =\n\t\t\t\t\t\t\t\tclonedPage.querySelector(\".slide-number-pdf\");\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += \".\" + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push(clonedPage);\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\t\t\t\t\t}, this);\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach(function (fragments) {\n\t\t\t\t\t\tfragments.forEach(function (fragment) {\n\t\t\t\t\t\t\tfragment.classList.remove(\"visible\", \"current-fragment\");\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll(page, \".fragment:not(.fade-out)\").forEach(\n\t\t\t\t\t\tfunction (fragment) {\n\t\t\t\t\t\t\tfragment.classList.add(\"visible\");\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);\n\n\t\tawait new Promise(requestAnimationFrame);\n\n\t\tpages.forEach((page) => pageContainer.appendChild(page));\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout(this.Reveal.getSlidesElement());\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: \"pdf-ready\" });\n\n\t\tviewportElement.classList.remove(\"loading-scroll-mode\");\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\t\treturn this.Reveal.getConfig().view === \"print\";\n\t}\n}\n","import { extend, queryAll } from \"../utils/util.js\";\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tif (config.fragments === false) {\n\t\t\tthis.disable();\n\t\t} else if (oldConfig.fragments === false) {\n\t\t\tthis.enable();\n\t\t}\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\t\tqueryAll(this.Reveal.getSlidesElement(), \".fragment\").forEach((element) => {\n\t\t\telement.classList.add(\"visible\");\n\t\t\telement.classList.remove(\"current-fragment\");\n\t\t});\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\t\tqueryAll(this.Reveal.getSlidesElement(), \".fragment\").forEach((element) => {\n\t\t\telement.classList.remove(\"visible\");\n\t\t\telement.classList.remove(\"current-fragment\");\n\t\t});\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif (currentSlide && this.Reveal.getConfig().fragments) {\n\t\t\tlet fragments = currentSlide.querySelectorAll(\".fragment:not(.disabled)\");\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll(\n\t\t\t\t\".fragment:not(.disabled):not(.visible)\",\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length,\n\t\t\t};\n\t\t} else {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort(fragments, grouped = false) {\n\t\tfragments = Array.from(fragments);\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach((fragment) => {\n\t\t\tif (fragment.hasAttribute(\"data-fragment-index\")) {\n\t\t\t\tlet index = parseInt(fragment.getAttribute(\"data-fragment-index\"), 10);\n\n\t\t\t\tif (!ordered[index]) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push(fragment);\n\t\t\t} else {\n\t\t\t\tunordered.push([fragment]);\n\t\t\t}\n\t\t});\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat(unordered);\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach((group) => {\n\t\t\tgroup.forEach((fragment) => {\n\t\t\t\tsorted.push(fragment);\n\t\t\t\tfragment.setAttribute(\"data-fragment-index\", index);\n\t\t\t});\n\n\t\t\tindex++;\n\t\t});\n\n\t\treturn grouped === true ? ordered : sorted;\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\t\tthis.Reveal.getHorizontalSlides().forEach((horizontalSlide) => {\n\t\t\tlet verticalSlides = queryAll(horizontalSlide, \"section\");\n\t\t\tverticalSlides.forEach((verticalSlide, y) => {\n\t\t\t\tthis.sort(verticalSlide.querySelectorAll(\".fragment\"));\n\t\t\t}, this);\n\n\t\t\tif (verticalSlides.length === 0)\n\t\t\t\tthis.sort(horizontalSlide.querySelectorAll(\".fragment\"));\n\t\t});\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate(index, fragments, slide = this.Reveal.getCurrentSlide()) {\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: [],\n\t\t};\n\n\t\tif (slide && this.Reveal.getConfig().fragments) {\n\t\t\tfragments = fragments || this.sort(slide.querySelectorAll(\".fragment\"));\n\n\t\t\tif (fragments.length) {\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif (typeof index !== \"number\") {\n\t\t\t\t\tlet currentFragment = this.sort(\n\t\t\t\t\t\tslide.querySelectorAll(\".fragment.visible\"),\n\t\t\t\t\t).pop();\n\t\t\t\t\tif (currentFragment) {\n\t\t\t\t\t\tindex = parseInt(\n\t\t\t\t\t\t\tcurrentFragment.getAttribute(\"data-fragment-index\") || 0,\n\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from(fragments).forEach((el, i) => {\n\t\t\t\t\tif (el.hasAttribute(\"data-fragment-index\")) {\n\t\t\t\t\t\ti = parseInt(el.getAttribute(\"data-fragment-index\"), 10);\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max(maxIndex, i);\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif (i <= index) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains(\"visible\");\n\t\t\t\t\t\tel.classList.add(\"visible\");\n\t\t\t\t\t\tel.classList.remove(\"current-fragment\");\n\n\t\t\t\t\t\tif (i === index) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus(this.Reveal.getStatusText(el));\n\n\t\t\t\t\t\t\tel.classList.add(\"current-fragment\");\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent(el);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!wasVisible) {\n\t\t\t\t\t\t\tchangedFragments.shown.push(el);\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: \"visible\",\n\t\t\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains(\"visible\");\n\t\t\t\t\t\tel.classList.remove(\"visible\");\n\t\t\t\t\t\tel.classList.remove(\"current-fragment\");\n\n\t\t\t\t\t\tif (wasVisible) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent(el);\n\t\t\t\t\t\t\tchangedFragments.hidden.push(el);\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: \"hidden\",\n\t\t\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === \"number\" ? index : -1;\n\t\t\t\tindex = Math.max(Math.min(index, maxIndex), -1);\n\t\t\t\tslide.setAttribute(\"data-fragment\", index);\n\t\t\t}\n\t\t}\n\n\t\treturn changedFragments;\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync(slide = this.Reveal.getCurrentSlide()) {\n\t\treturn this.sort(slide.querySelectorAll(\".fragment\"));\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto(index, offset = 0) {\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif (currentSlide && this.Reveal.getConfig().fragments) {\n\t\t\tlet fragments = this.sort(\n\t\t\t\tcurrentSlide.querySelectorAll(\".fragment:not(.disabled)\"),\n\t\t\t);\n\t\t\tif (fragments.length) {\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif (typeof index !== \"number\") {\n\t\t\t\t\tlet lastVisibleFragment = this.sort(\n\t\t\t\t\t\tcurrentSlide.querySelectorAll(\".fragment:not(.disabled).visible\"),\n\t\t\t\t\t).pop();\n\n\t\t\t\t\tif (lastVisibleFragment) {\n\t\t\t\t\t\tindex = parseInt(\n\t\t\t\t\t\t\tlastVisibleFragment.getAttribute(\"data-fragment-index\") || 0,\n\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update(index, fragments);\n\n\t\t\t\tif (changedFragments.hidden.length) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: \"fragmenthidden\",\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (changedFragments.shown.length) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: \"fragmentshown\",\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif (this.Reveal.getConfig().fragmentInURL) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!(\n\t\t\t\t\tchangedFragments.shown.length || changedFragments.hidden.length\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\t\treturn this.goto(null, 1);\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\t\treturn this.goto(null, -1);\n\t}\n}\n","import { SLIDES_SELECTOR } from \"../utils/constants.js\";\nimport { extend, queryAll, transformElement } from \"../utils/util.js\";\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind(this);\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\t\t// Only proceed if enabled in config\n\t\tif (\n\t\t\tthis.Reveal.getConfig().overview &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.isActive()\n\t\t) {\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"overview\");\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild(\n\t\t\t\tthis.Reveal.getBackgroundsElement(),\n\t\t\t);\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\n\t\t\t\t(slide) => {\n\t\t\t\t\tif (!slide.classList.contains(\"stack\")) {\n\t\t\t\t\t\tslide.addEventListener(\"click\", this.onSlideClicked, true);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif (this.Reveal.getConfig().rtl) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: \"overviewshown\",\n\t\t\t\tdata: {\n\t\t\t\t\tindexh: indices.h,\n\t\t\t\t\tindexv: indices.v,\n\t\t\t\t\tcurrentSlide: this.Reveal.getCurrentSlide(),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach((hslide, h) => {\n\t\t\thslide.setAttribute(\"data-index-h\", h);\n\t\t\ttransformElement(\n\t\t\t\thslide,\n\t\t\t\t\"translate3d(\" + h * this.overviewSlideWidth + \"px, 0, 0)\",\n\t\t\t);\n\n\t\t\tif (hslide.classList.contains(\"stack\")) {\n\t\t\t\tqueryAll(hslide, \"section\").forEach((vslide, v) => {\n\t\t\t\t\tvslide.setAttribute(\"data-index-h\", h);\n\t\t\t\t\tvslide.setAttribute(\"data-index-v\", v);\n\n\t\t\t\t\ttransformElement(\n\t\t\t\t\t\tvslide,\n\t\t\t\t\t\t\"translate3d(0, \" + v * this.overviewSlideHeight + \"px, 0)\",\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Layout slide backgrounds\n\t\tArray.from(this.Reveal.getBackgroundsElement().childNodes).forEach(\n\t\t\t(hbackground, h) => {\n\t\t\t\ttransformElement(\n\t\t\t\t\thbackground,\n\t\t\t\t\t\"translate3d(\" + h * this.overviewSlideWidth + \"px, 0, 0)\",\n\t\t\t\t);\n\n\t\t\t\tqueryAll(hbackground, \".slide-background\").forEach((vbackground, v) => {\n\t\t\t\t\ttransformElement(\n\t\t\t\t\t\tvbackground,\n\t\t\t\t\t\t\"translate3d(0, \" + v * this.overviewSlideHeight + \"px, 0)\",\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\t\tconst vmin = Math.min(window.innerWidth, window.innerHeight);\n\t\tconst scale = Math.max(vmin / 5, 150) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides({\n\t\t\toverview: [\n\t\t\t\t\"scale(\" + scale + \")\",\n\t\t\t\t\"translateX(\" + -indices.h * this.overviewSlideWidth + \"px)\",\n\t\t\t\t\"translateY(\" + -indices.v * this.overviewSlideHeight + \"px)\",\n\t\t\t].join(\" \"),\n\t\t});\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\t\t// Only proceed if enabled in config\n\t\tif (this.Reveal.getConfig().overview) {\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\"overview\");\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"overview-deactivating\");\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove(\n\t\t\t\t\t\"overview-deactivating\",\n\t\t\t\t);\n\t\t\t}, 1);\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild(\n\t\t\t\tthis.Reveal.getBackgroundsElement(),\n\t\t\t);\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\n\t\t\t\t(slide) => {\n\t\t\t\t\ttransformElement(slide, \"\");\n\n\t\t\t\t\tslide.removeEventListener(\"click\", this.onSlideClicked, true);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll(\n\t\t\t\tthis.Reveal.getBackgroundsElement(),\n\t\t\t\t\".slide-background\",\n\t\t\t).forEach((background) => {\n\t\t\t\ttransformElement(background, \"\");\n\t\t\t});\n\n\t\t\tthis.Reveal.transformSlides({ overview: \"\" });\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide(indices.h, indices.v);\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: \"overviewhidden\",\n\t\t\t\tdata: {\n\t\t\t\t\tindexh: indices.h,\n\t\t\t\t\tindexv: indices.v,\n\t\t\t\t\tcurrentSlide: this.Reveal.getCurrentSlide(),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle(override) {\n\t\tif (typeof override === \"boolean\") {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t} else {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\t\treturn this.active;\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked(event) {\n\t\tif (this.isActive()) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile (element && !element.nodeName.match(/section/gi)) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif (element && !element.classList.contains(\"disabled\")) {\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif (element.nodeName.match(/section/gi)) {\n\t\t\t\t\tlet h = parseInt(element.getAttribute(\"data-index-h\"), 10),\n\t\t\t\t\t\tv = parseInt(element.getAttribute(\"data-index-v\"), 10);\n\n\t\t\t\t\tthis.Reveal.slide(h, v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { enterFullscreen } from \"../utils/util.js\";\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind(this);\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tif (config.navigationMode === \"linear\") {\n\t\t\tthis.shortcuts[\"&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J\"] =\n\t\t\t\t\"Next slide\";\n\t\t\tthis.shortcuts[\"&#8592;  ,  &#8593;  ,  P  ,  H  ,  K\"] =\n\t\t\t\t\"Previous slide\";\n\t\t} else {\n\t\t\tthis.shortcuts[\"N  ,  SPACE\"] = \"Next slide\";\n\t\t\tthis.shortcuts[\"P  ,  Shift SPACE\"] = \"Previous slide\";\n\t\t\tthis.shortcuts[\"&#8592;  ,  H\"] = \"Navigate left\";\n\t\t\tthis.shortcuts[\"&#8594;  ,  L\"] = \"Navigate right\";\n\t\t\tthis.shortcuts[\"&#8593;  ,  K\"] = \"Navigate up\";\n\t\t\tthis.shortcuts[\"&#8595;  ,  J\"] = \"Navigate down\";\n\t\t}\n\n\t\tthis.shortcuts[\"Alt + &#8592;/&#8593/&#8594;/&#8595;\"] =\n\t\t\t\"Navigate without fragments\";\n\t\tthis.shortcuts[\"Shift + &#8592;/&#8593/&#8594;/&#8595;\"] =\n\t\t\t\"Jump to first/last slide\";\n\t\tthis.shortcuts[\"B  ,  .\"] = \"Pause\";\n\t\tthis.shortcuts[\"F\"] = \"Fullscreen\";\n\t\tthis.shortcuts[\"G\"] = \"Jump to slide\";\n\t\tthis.shortcuts[\"ESC, O\"] = \"Slide overview\";\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\t\tdocument.addEventListener(\"keydown\", this.onDocumentKeyDown, false);\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\t\tdocument.removeEventListener(\"keydown\", this.onDocumentKeyDown, false);\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding(binding, callback) {\n\t\tif (typeof binding === \"object\" && binding.keyCode) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description,\n\t\t\t};\n\t\t} else {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding(keyCode) {\n\t\tdelete this.bindings[keyCode];\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey(keyCode) {\n\t\tthis.onDocumentKeyDown({ keyCode });\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut(key, value) {\n\t\tthis.shortcuts[key] = value;\n\t}\n\n\tgetShortcuts() {\n\t\treturn this.shortcuts;\n\t}\n\n\tgetBindings() {\n\t\treturn this.bindings;\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown(event) {\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif (\n\t\t\ttypeof config.keyboardCondition === \"function\" &&\n\t\t\tconfig.keyboardCondition(event) === false\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif (config.keyboardCondition === \"focused\" && !this.Reveal.isFocused()) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput(event);\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE =\n\t\t\tdocument.activeElement &&\n\t\t\tdocument.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput =\n\t\t\tdocument.activeElement &&\n\t\t\tdocument.activeElement.tagName &&\n\t\t\t/input|textarea/i.test(document.activeElement.tagName);\n\t\tlet activeElementIsNotes =\n\t\t\tdocument.activeElement &&\n\t\t\tdocument.activeElement.className &&\n\t\t\t/speaker-notes/i.test(document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier =\n\t\t\t[32, 37, 38, 39, 40, 78, 80, 191].indexOf(event.keyCode) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier =\n\t\t\t!((keyCodeUsesModifier && event.shiftKey) || event.altKey) &&\n\t\t\t(event.shiftKey || event.altKey || event.ctrlKey || event.metaKey);\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif (\n\t\t\tactiveElementIsCE ||\n\t\t\tactiveElementIsInput ||\n\t\t\tactiveElementIsNotes ||\n\t\t\tunusedModifier\n\t\t)\n\t\t\treturn;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66, 86, 190, 191, 112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif (typeof config.keyboard === \"object\") {\n\t\t\tfor (key in config.keyboard) {\n\t\t\t\tif (config.keyboard[key] === \"togglePause\") {\n\t\t\t\t\tresumeKeyCodes.push(parseInt(key, 10));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.Reveal.isPaused() && resumeKeyCodes.indexOf(keyCode) === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode =\n\t\t\tconfig.navigationMode === \"linear\" ||\n\t\t\t!this.Reveal.hasHorizontalSlides() ||\n\t\t\t!this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif (typeof config.keyboard === \"object\") {\n\t\t\tfor (key in config.keyboard) {\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif (parseInt(key, 10) === keyCode) {\n\t\t\t\t\tlet value = config.keyboard[key];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif (typeof value === \"function\") {\n\t\t\t\t\t\tvalue.apply(null, [event]);\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if (\n\t\t\t\t\t\ttypeof value === \"string\" &&\n\t\t\t\t\t\ttypeof this.Reveal[value] === \"function\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.Reveal[value].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif (triggered === false) {\n\t\t\tfor (key in this.bindings) {\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif (parseInt(key, 10) === keyCode) {\n\t\t\t\t\tlet action = this.bindings[key].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif (typeof action === \"function\") {\n\t\t\t\t\t\taction.apply(null, [event]);\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if (\n\t\t\t\t\t\ttypeof action === \"string\" &&\n\t\t\t\t\t\ttypeof this.Reveal[action] === \"function\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.Reveal[action].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif (triggered === false) {\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif (keyCode === 80 || keyCode === 33) {\n\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if (keyCode === 78 || keyCode === 34) {\n\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if (keyCode === 72 || keyCode === 37) {\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis.Reveal.slide(0);\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\n\t\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\n\t\t\t\t} else {\n\t\t\t\t\tthis.Reveal.left({ skipFragments: event.altKey });\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if (keyCode === 76 || keyCode === 39) {\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\n\t\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\n\t\t\t\t} else {\n\t\t\t\t\tthis.Reveal.right({ skipFragments: event.altKey });\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if (keyCode === 75 || keyCode === 38) {\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis.Reveal.slide(undefined, 0);\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\n\t\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\n\t\t\t\t} else {\n\t\t\t\t\tthis.Reveal.up({ skipFragments: event.altKey });\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if (keyCode === 74 || keyCode === 40) {\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis.Reveal.slide(undefined, Number.MAX_VALUE);\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\n\t\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\n\t\t\t\t} else {\n\t\t\t\t\tthis.Reveal.down({ skipFragments: event.altKey });\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if (keyCode === 36) {\n\t\t\t\tthis.Reveal.slide(0);\n\t\t\t}\n\t\t\t// END\n\t\t\telse if (keyCode === 35) {\n\t\t\t\tthis.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if (keyCode === 32) {\n\t\t\t\tif (this.Reveal.overview.isActive()) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\n\t\t\t\t} else {\n\t\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if (\n\t\t\t\t[58, 59, 66, 86, 190].includes(keyCode) ||\n\t\t\t\t(keyCode === 191 && !event.shiftKey)\n\t\t\t) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if (keyCode === 70) {\n\t\t\t\tenterFullscreen(\n\t\t\t\t\tconfig.embedded\n\t\t\t\t\t\t? this.Reveal.getViewportElement()\n\t\t\t\t\t\t: document.documentElement,\n\t\t\t\t);\n\t\t\t}\n\t\t\t// A\n\t\t\telse if (keyCode === 65) {\n\t\t\t\tif (config.autoSlideStoppable) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide(autoSlideWasPaused);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if (keyCode === 71) {\n\t\t\t\tif (config.jumpToSlide) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if (keyCode === 191 && event.shiftKey) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if (keyCode === 112) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t} else {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif (triggered) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if (keyCode === 27 || keyCode === 79) {\n\t\t\tif (this.Reveal.closeOverlay() === false) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\t}\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000;\n\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind(this);\n\t}\n\n\tbind() {\n\t\twindow.addEventListener(\"hashchange\", this.onWindowHashChange, false);\n\t}\n\n\tunbind() {\n\t\twindow.removeEventListener(\"hashchange\", this.onWindowHashChange, false);\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash(hash = window.location.hash, options = {}) {\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace(/^#\\/?/, \"\");\n\t\tlet bits = name.split(\"/\");\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif (!/^[0-9]*$/.test(bits[0]) && name.length) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif (/\\/[-\\d]+$/g.test(name)) {\n\t\t\t\tf = parseInt(name.split(\"/\").pop(), 10);\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split(\"/\").shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById(decodeURIComponent(name))\n\t\t\t\t\t.closest(\".slides section\");\n\t\t\t} catch (error) {}\n\n\t\t\tif (slide) {\n\t\t\t\treturn { ...this.Reveal.getIndices(slide), f };\n\t\t\t}\n\t\t} else {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase =\n\t\t\t\tconfig.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = parseInt(bits[0], 10) - hashIndexBase || 0,\n\t\t\t\tv = parseInt(bits[1], 10) - hashIndexBase || 0,\n\t\t\t\tf;\n\n\t\t\tif (config.fragmentInURL) {\n\t\t\t\tf = parseInt(bits[2], 10);\n\t\t\t\tif (isNaN(f)) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null;\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif (newIndices) {\n\t\t\tif (\n\t\t\t\tnewIndices.h !== currentIndices.h ||\n\t\t\t\tnewIndices.v !== currentIndices.v ||\n\t\t\t\tnewIndices.f !== undefined\n\t\t\t) {\n\t\t\t\tthis.Reveal.slide(newIndices.h, newIndices.v, newIndices.f);\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide(currentIndices.h || 0, currentIndices.v || 0);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL(delay) {\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout(this.writeURLTimeout);\n\n\t\t// If a delay is specified, timeout this call\n\t\tif (typeof delay === \"number\") {\n\t\t\tthis.writeURLTimeout = setTimeout(this.writeURL, delay);\n\t\t} else if (currentSlide) {\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif (config.history) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if (config.hash) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif (hash === \"/\") {\n\t\t\t\t\tthis.debouncedReplaceState(\n\t\t\t\t\t\twindow.location.pathname + window.location.search,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.debouncedReplaceState(\"#\" + hash);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\t\t}\n\t}\n\n\treplaceState(url) {\n\t\twindow.history.replaceState(null, null, url);\n\t\tthis.replaceStateTimestamp = Date.now();\n\t}\n\n\tdebouncedReplaceState(url) {\n\t\tclearTimeout(this.replaceStateTimeout);\n\n\t\tif (\n\t\t\tDate.now() - this.replaceStateTimestamp >\n\t\t\tthis.MAX_REPLACE_STATE_FREQUENCY\n\t\t) {\n\t\t\tthis.replaceState(url);\n\t\t} else {\n\t\t\tthis.replaceStateTimeout = setTimeout(\n\t\t\t\t() => this.replaceState(url),\n\t\t\t\tthis.MAX_REPLACE_STATE_FREQUENCY,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash(slide) {\n\t\tlet url = \"/\";\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute(\"id\") : null;\n\t\tif (id) {\n\t\t\tid = encodeURIComponent(id);\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices(slide);\n\t\tif (!this.Reveal.getConfig().fragmentInURL) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif (typeof id === \"string\" && id.length) {\n\t\t\turl = \"/\" + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif (index.f >= 0) url += \"/\" + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif (index.h > 0 || index.v > 0 || index.f >= 0)\n\t\t\t\turl += index.h + hashIndexBase;\n\t\t\tif (index.v > 0 || index.f >= 0) url += \"/\" + (index.v + hashIndexBase);\n\t\t\tif (index.f >= 0) url += \"/\" + index.f;\n\t\t}\n\n\t\treturn url;\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange(event) {\n\t\tthis.readURL();\n\t}\n}\n","import { queryAll } from \"../utils/util.js\";\nimport { isAndroid } from \"../utils/device.js\";\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind(this);\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind(this);\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind(this);\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind(this);\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind(this);\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind(this);\n\t}\n\n\trender() {\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement(\"aside\");\n\t\tthis.element.className = \"controls\";\n\t\tthis.element.innerHTML = `<button class=\"navigate-left\" aria-label=\"${\n\t\t\trtl ? \"next slide\" : \"previous slide\"\n\t\t}\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${\n\t\t\t\trtl ? \"previous slide\" : \"next slide\"\n\t\t\t}\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll(revealElement, \".navigate-left\");\n\t\tthis.controlsRight = queryAll(revealElement, \".navigate-right\");\n\t\tthis.controlsUp = queryAll(revealElement, \".navigate-up\");\n\t\tthis.controlsDown = queryAll(revealElement, \".navigate-down\");\n\t\tthis.controlsPrev = queryAll(revealElement, \".navigate-prev\");\n\t\tthis.controlsNext = queryAll(revealElement, \".navigate-next\");\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector(\".navigate-right\");\n\t\tthis.controlsLeftArrow = this.element.querySelector(\".navigate-left\");\n\t\tthis.controlsDownArrow = this.element.querySelector(\".navigate-down\");\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tthis.element.style.display = config.controls ? \"block\" : \"none\";\n\n\t\tthis.element.setAttribute(\"data-controls-layout\", config.controlsLayout);\n\t\tthis.element.setAttribute(\n\t\t\t\"data-controls-back-arrows\",\n\t\t\tconfig.controlsBackArrows,\n\t\t);\n\t}\n\n\tbind() {\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [\"touchstart\", \"click\"];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif (isAndroid) {\n\t\t\tpointerEvents = [\"touchstart\"];\n\t\t}\n\n\t\tpointerEvents.forEach((eventName) => {\n\t\t\tthis.controlsLeft.forEach((el) =>\n\t\t\t\tel.addEventListener(eventName, this.onNavigateLeftClicked, false),\n\t\t\t);\n\t\t\tthis.controlsRight.forEach((el) =>\n\t\t\t\tel.addEventListener(eventName, this.onNavigateRightClicked, false),\n\t\t\t);\n\t\t\tthis.controlsUp.forEach((el) =>\n\t\t\t\tel.addEventListener(eventName, this.onNavigateUpClicked, false),\n\t\t\t);\n\t\t\tthis.controlsDown.forEach((el) =>\n\t\t\t\tel.addEventListener(eventName, this.onNavigateDownClicked, false),\n\t\t\t);\n\t\t\tthis.controlsPrev.forEach((el) =>\n\t\t\t\tel.addEventListener(eventName, this.onNavigatePrevClicked, false),\n\t\t\t);\n\t\t\tthis.controlsNext.forEach((el) =>\n\t\t\t\tel.addEventListener(eventName, this.onNavigateNextClicked, false),\n\t\t\t);\n\t\t});\n\t}\n\n\tunbind() {\n\t\t[\"touchstart\", \"click\"].forEach((eventName) => {\n\t\t\tthis.controlsLeft.forEach((el) =>\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateLeftClicked, false),\n\t\t\t);\n\t\t\tthis.controlsRight.forEach((el) =>\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateRightClicked, false),\n\t\t\t);\n\t\t\tthis.controlsUp.forEach((el) =>\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateUpClicked, false),\n\t\t\t);\n\t\t\tthis.controlsDown.forEach((el) =>\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateDownClicked, false),\n\t\t\t);\n\t\t\tthis.controlsPrev.forEach((el) =>\n\t\t\t\tel.removeEventListener(eventName, this.onNavigatePrevClicked, false),\n\t\t\t);\n\t\t\tthis.controlsNext.forEach((el) =>\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateNextClicked, false),\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[\n\t\t\t...this.controlsLeft,\n\t\t\t...this.controlsRight,\n\t\t\t...this.controlsUp,\n\t\t\t...this.controlsDown,\n\t\t\t...this.controlsPrev,\n\t\t\t...this.controlsNext,\n\t\t].forEach((node) => {\n\t\t\tnode.classList.remove(\"enabled\", \"fragmented\");\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute(\"disabled\", \"disabled\");\n\t\t});\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif (routes.left)\n\t\t\tthis.controlsLeft.forEach((el) => {\n\t\t\t\tel.classList.add(\"enabled\");\n\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t});\n\t\tif (routes.right)\n\t\t\tthis.controlsRight.forEach((el) => {\n\t\t\t\tel.classList.add(\"enabled\");\n\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t});\n\t\tif (routes.up)\n\t\t\tthis.controlsUp.forEach((el) => {\n\t\t\t\tel.classList.add(\"enabled\");\n\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t});\n\t\tif (routes.down)\n\t\t\tthis.controlsDown.forEach((el) => {\n\t\t\t\tel.classList.add(\"enabled\");\n\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t});\n\n\t\t// Prev/next buttons\n\t\tif (routes.left || routes.up)\n\t\t\tthis.controlsPrev.forEach((el) => {\n\t\t\t\tel.classList.add(\"enabled\");\n\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t});\n\t\tif (routes.right || routes.down)\n\t\t\tthis.controlsNext.forEach((el) => {\n\t\t\t\tel.classList.add(\"enabled\");\n\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t});\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif (currentSlide) {\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif (fragmentsRoutes.prev)\n\t\t\t\tthis.controlsPrev.forEach((el) => {\n\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\n\t\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t\t});\n\t\t\tif (fragmentsRoutes.next)\n\t\t\t\tthis.controlsNext.forEach((el) => {\n\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\n\t\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t\t});\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif (this.Reveal.isVerticalSlide(currentSlide)) {\n\t\t\t\tif (fragmentsRoutes.prev)\n\t\t\t\t\tthis.controlsUp.forEach((el) => {\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t\t\t});\n\t\t\t\tif (fragmentsRoutes.next)\n\t\t\t\t\tthis.controlsDown.forEach((el) => {\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (fragmentsRoutes.prev)\n\t\t\t\t\tthis.controlsLeft.forEach((el) => {\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t\t\t});\n\t\t\t\tif (fragmentsRoutes.next)\n\t\t\t\t\tthis.controlsRight.forEach((el) => {\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.Reveal.getConfig().controlsTutorial) {\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif (!this.Reveal.hasNavigatedVertically() && routes.down) {\n\t\t\t\tthis.controlsDownArrow.classList.add(\"highlight\");\n\t\t\t} else {\n\t\t\t\tthis.controlsDownArrow.classList.remove(\"highlight\");\n\n\t\t\t\tif (this.Reveal.getConfig().rtl) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.Reveal.hasNavigatedHorizontally() &&\n\t\t\t\t\t\troutes.left &&\n\t\t\t\t\t\tindices.v === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add(\"highlight\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove(\"highlight\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.Reveal.hasNavigatedHorizontally() &&\n\t\t\t\t\t\troutes.right &&\n\t\t\t\t\t\tindices.v === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add(\"highlight\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove(\"highlight\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked(event) {\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif (this.Reveal.getConfig().navigationMode === \"linear\") {\n\t\t\tthis.Reveal.prev();\n\t\t} else {\n\t\t\tthis.Reveal.left();\n\t\t}\n\t}\n\n\tonNavigateRightClicked(event) {\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif (this.Reveal.getConfig().navigationMode === \"linear\") {\n\t\t\tthis.Reveal.next();\n\t\t} else {\n\t\t\tthis.Reveal.right();\n\t\t}\n\t}\n\n\tonNavigateUpClicked(event) {\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\t}\n\n\tonNavigateDownClicked(event) {\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\t}\n\n\tonNavigatePrevClicked(event) {\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\t}\n\n\tonNavigateNextClicked(event) {\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\t}\n}\n","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind(this);\n\t}\n\n\trender() {\n\t\tthis.element = document.createElement(\"div\");\n\t\tthis.element.className = \"progress\";\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\n\n\t\tthis.bar = document.createElement(\"span\");\n\t\tthis.element.appendChild(this.bar);\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tthis.element.style.display = config.progress ? \"block\" : \"none\";\n\t}\n\n\tbind() {\n\t\tif (this.Reveal.getConfig().progress && this.element) {\n\t\t\tthis.element.addEventListener(\"click\", this.onProgressClicked, false);\n\t\t}\n\t}\n\n\tunbind() {\n\t\tif (this.Reveal.getConfig().progress && this.element) {\n\t\t\tthis.element.removeEventListener(\"click\", this.onProgressClicked, false);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\t\t// Update progress if enabled\n\t\tif (this.Reveal.getConfig().progress && this.bar) {\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif (this.Reveal.getTotalSlides() < 2) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = \"scaleX(\" + scale + \")\";\n\t\t}\n\t}\n\n\tgetMaxWidth() {\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked(event) {\n\t\tthis.Reveal.onUserInput(event);\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor(\n\t\t\t(event.clientX / this.getMaxWidth()) * slidesTotal,\n\t\t);\n\n\t\tif (this.Reveal.getConfig().rtl) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide(targetIndices.h, targetIndices.v);\n\t}\n\n\tdestroy() {\n\t\tthis.element.remove();\n\t}\n}\n","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind(this);\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind(this);\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tif (config.mouseWheel) {\n\t\t\tdocument.addEventListener(\"wheel\", this.onDocumentMouseScroll, false);\n\t\t} else {\n\t\t\tdocument.removeEventListener(\"wheel\", this.onDocumentMouseScroll, false);\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif (config.hideInactiveCursor) {\n\t\t\tdocument.addEventListener(\n\t\t\t\t\"mousemove\",\n\t\t\t\tthis.onDocumentCursorActive,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\tdocument.addEventListener(\n\t\t\t\t\"mousedown\",\n\t\t\t\tthis.onDocumentCursorActive,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener(\n\t\t\t\t\"mousemove\",\n\t\t\t\tthis.onDocumentCursorActive,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\tdocument.removeEventListener(\n\t\t\t\t\"mousedown\",\n\t\t\t\tthis.onDocumentCursorActive,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\t\tif (this.cursorHidden) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = \"\";\n\t\t}\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\t\tif (this.cursorHidden === false) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = \"none\";\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener(\"wheel\", this.onDocumentMouseScroll, false);\n\t\tdocument.removeEventListener(\n\t\t\t\"mousemove\",\n\t\t\tthis.onDocumentCursorActive,\n\t\t\tfalse,\n\t\t);\n\t\tdocument.removeEventListener(\n\t\t\t\"mousedown\",\n\t\t\tthis.onDocumentCursorActive,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive(event) {\n\t\tthis.showCursor();\n\n\t\tclearTimeout(this.cursorInactiveTimeout);\n\n\t\tthis.cursorInactiveTimeout = setTimeout(\n\t\t\tthis.hideCursor.bind(this),\n\t\t\tthis.Reveal.getConfig().hideCursorTime,\n\t\t);\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll(event) {\n\t\tif (Date.now() - this.lastMouseWheelStep > 1000) {\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif (delta > 0) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t} else if (delta < 0) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = (url, callback) => {\n\tconst script = document.createElement(\"script\");\n\tscript.type = \"text/javascript\";\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif (typeof callback === \"function\") {\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = (event) => {\n\t\t\tif (event.type === \"load\" || /loaded|complete/.test(script.readyState)) {\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = (err) => {\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback(new Error(\"Failed loading script: \" + script.src + \"\\n\" + err));\n\t\t};\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector(\"head\");\n\thead.insertBefore(script, head.lastChild);\n};\n","import { loadScript } from \"../utils/loader.js\";\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\tconstructor(reveal) {\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = \"idle\";\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload(plugins, dependencies) {\n\t\tthis.state = \"loading\";\n\n\t\tplugins.forEach(this.registerPlugin.bind(this));\n\n\t\treturn new Promise((resolve) => {\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach((s) => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif (!s.condition || s.condition()) {\n\t\t\t\t\tif (s.async) {\n\t\t\t\t\t\tthis.asyncDependencies.push(s);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscripts.push(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scripts.length) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif (s && typeof s.callback === \"function\") s.callback();\n\n\t\t\t\t\tif (--scriptsToLoad === 0) {\n\t\t\t\t\t\tthis.initPlugins().then(resolve);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach((s) => {\n\t\t\t\t\tif (typeof s.id === \"string\") {\n\t\t\t\t\t\tthis.registerPlugin(s);\n\t\t\t\t\t\tscriptLoadedCallback(s);\n\t\t\t\t\t} else if (typeof s.src === \"string\") {\n\t\t\t\t\t\tloadScript(s.src, () => scriptLoadedCallback(s));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Unrecognized plugin format\", s);\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.initPlugins().then(resolve);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet pluginValues = Object.values(this.registeredPlugins);\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif (pluginsToInitialize === 0) {\n\t\t\t\tthis.loadAsync().then(resolve);\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif (--pluginsToInitialize === 0) {\n\t\t\t\t\t\tthis.loadAsync().then(resolve);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif (typeof plugin.init === \"function\") {\n\t\t\t\t\t\tlet promise = plugin.init(this.Reveal);\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif (promise && typeof promise.then === \"function\") {\n\t\t\t\t\t\t\tpromise.then(afterPlugInitialized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tinitNextPlugin();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\t\tthis.state = \"loaded\";\n\n\t\tif (this.asyncDependencies.length) {\n\t\t\tthis.asyncDependencies.forEach((s) => {\n\t\t\t\tloadScript(s.src, s.callback);\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin(plugin) {\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif (arguments.length === 2 && typeof arguments[0] === \"string\") {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if (typeof plugin === \"function\") {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif (typeof id !== \"string\") {\n\t\t\tconsole.warn(\"Unrecognized plugin format; can't find plugin.id\", plugin);\n\t\t} else if (this.registeredPlugins[id] === undefined) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif (this.state === \"loaded\" && typeof plugin.init === \"function\") {\n\t\t\t\tplugin.init(this.Reveal);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t'reveal.js: \"' + id + '\" plugin has already been registered',\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin(id) {\n\t\treturn !!this.registeredPlugins[id];\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin(id) {\n\t\treturn this.registeredPlugins[id];\n\t}\n\n\tgetRegisteredPlugins() {\n\t\treturn this.registeredPlugins;\n\t}\n\n\tdestroy() {\n\t\tObject.values(this.registeredPlugins).forEach((plugin) => {\n\t\t\tif (typeof plugin.destroy === \"function\") {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\t}\n}\n","import { isAndroid } from \"../utils/device.js\";\nimport { matches } from \"../utils/util.js\";\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind(this);\n\t\tthis.onPointerMove = this.onPointerMove.bind(this);\n\t\tthis.onPointerUp = this.onPointerUp.bind(this);\n\t\tthis.onTouchStart = this.onTouchStart.bind(this);\n\t\tthis.onTouchMove = this.onTouchMove.bind(this);\n\t\tthis.onTouchEnd = this.onTouchEnd.bind(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif (\"onpointerdown\" in window) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener(\"pointerdown\", this.onPointerDown, false);\n\t\t\trevealElement.addEventListener(\"pointermove\", this.onPointerMove, false);\n\t\t\trevealElement.addEventListener(\"pointerup\", this.onPointerUp, false);\n\t\t} else if (window.navigator.msPointerEnabled) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener(\n\t\t\t\t\"MSPointerDown\",\n\t\t\t\tthis.onPointerDown,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\trevealElement.addEventListener(\n\t\t\t\t\"MSPointerMove\",\n\t\t\t\tthis.onPointerMove,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\trevealElement.addEventListener(\"MSPointerUp\", this.onPointerUp, false);\n\t\t} else {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener(\"touchstart\", this.onTouchStart, false);\n\t\t\trevealElement.addEventListener(\"touchmove\", this.onTouchMove, false);\n\t\t\trevealElement.addEventListener(\"touchend\", this.onTouchEnd, false);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener(\"pointerdown\", this.onPointerDown, false);\n\t\trevealElement.removeEventListener(\"pointermove\", this.onPointerMove, false);\n\t\trevealElement.removeEventListener(\"pointerup\", this.onPointerUp, false);\n\n\t\trevealElement.removeEventListener(\n\t\t\t\"MSPointerDown\",\n\t\t\tthis.onPointerDown,\n\t\t\tfalse,\n\t\t);\n\t\trevealElement.removeEventListener(\n\t\t\t\"MSPointerMove\",\n\t\t\tthis.onPointerMove,\n\t\t\tfalse,\n\t\t);\n\t\trevealElement.removeEventListener(\"MSPointerUp\", this.onPointerUp, false);\n\n\t\trevealElement.removeEventListener(\"touchstart\", this.onTouchStart, false);\n\t\trevealElement.removeEventListener(\"touchmove\", this.onTouchMove, false);\n\t\trevealElement.removeEventListener(\"touchend\", this.onTouchEnd, false);\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented(target) {\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif (matches(target, \"video, audio\")) return true;\n\n\t\twhile (target && typeof target.hasAttribute === \"function\") {\n\t\t\tif (target.hasAttribute(\"data-prevent-swipe\")) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart(event) {\n\t\tif (this.isSwipePrevented(event.target)) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove(event) {\n\t\tif (this.isSwipePrevented(event.target)) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif (!this.touchCaptured) {\n\t\t\tthis.Reveal.onUserInput(event);\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif (event.touches.length === 1 && this.touchStartCount !== 2) {\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({\n\t\t\t\t\tincludeFragments: true,\n\t\t\t\t});\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif (deltaX > SWIPE_THRESHOLD && Math.abs(deltaX) > Math.abs(deltaY)) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\n\t\t\t\t\t\tif (config.rtl) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tdeltaX < -SWIPE_THRESHOLD &&\n\t\t\t\t\tMath.abs(deltaX) > Math.abs(deltaY)\n\t\t\t\t) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\n\t\t\t\t\t\tif (config.rtl) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t} else if (deltaY > SWIPE_THRESHOLD && availableRoutes.up) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t} else if (deltaY < -SWIPE_THRESHOLD && availableRoutes.down) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif (config.embedded) {\n\t\t\t\t\tif (this.touchCaptured || this.Reveal.isVerticalSlide()) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if (isAndroid) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd(event) {\n\t\tthis.touchCaptured = false;\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown(event) {\n\t\tif (\n\t\t\tevent.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n\t\t\tevent.pointerType === \"touch\"\n\t\t) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart(event);\n\t\t}\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove(event) {\n\t\tif (\n\t\t\tevent.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n\t\t\tevent.pointerType === \"touch\"\n\t\t) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove(event);\n\t\t}\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp(event) {\n\t\tif (\n\t\t\tevent.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n\t\t\tevent.pointerType === \"touch\"\n\t\t) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd(event);\n\t\t}\n\t}\n}\n","import { closest } from \"../utils/util.js\";\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = \"focus\";\nconst STATE_BLUR = \"blur\";\n\nexport default class Focus {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind(this);\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind(this);\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tif (config.embedded) {\n\t\t\tthis.blur();\n\t\t} else {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\t}\n\n\tbind() {\n\t\tif (this.Reveal.getConfig().embedded) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener(\n\t\t\t\t\"pointerdown\",\n\t\t\t\tthis.onRevealPointerDown,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t}\n\n\tunbind() {\n\t\tthis.Reveal.getRevealElement().removeEventListener(\n\t\t\t\"pointerdown\",\n\t\t\tthis.onRevealPointerDown,\n\t\t\tfalse,\n\t\t);\n\t\tdocument.removeEventListener(\n\t\t\t\"pointerdown\",\n\t\t\tthis.onDocumentPointerDown,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tfocus() {\n\t\tif (this.state !== STATE_FOCUS) {\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"focused\");\n\t\t\tdocument.addEventListener(\n\t\t\t\t\"pointerdown\",\n\t\t\t\tthis.onDocumentPointerDown,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\t}\n\n\tblur() {\n\t\tif (this.state !== STATE_BLUR) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\"focused\");\n\t\t\tdocument.removeEventListener(\n\t\t\t\t\"pointerdown\",\n\t\t\t\tthis.onDocumentPointerDown,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\t}\n\n\tisFocused() {\n\t\treturn this.state === STATE_FOCUS;\n\t}\n\n\tdestroy() {\n\t\tthis.Reveal.getRevealElement().classList.remove(\"focused\");\n\t}\n\n\tonRevealPointerDown(event) {\n\t\tthis.focus();\n\t}\n\n\tonDocumentPointerDown(event) {\n\t\tlet revealElement = closest(event.target, \".reveal\");\n\t\tif (!revealElement || revealElement !== this.Reveal.getRevealElement()) {\n\t\t\tthis.blur();\n\t\t}\n\t}\n}\n","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\tconstructor(Reveal) {\n\t\tthis.Reveal = Reveal;\n\t}\n\n\trender() {\n\t\tthis.element = document.createElement(\"div\");\n\t\tthis.element.className = \"speaker-notes\";\n\t\tthis.element.setAttribute(\"data-prevent-swipe\", \"\");\n\t\tthis.element.setAttribute(\"tabindex\", \"0\");\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure(config, oldConfig) {\n\t\tif (config.showNotes) {\n\t\t\tthis.element.setAttribute(\n\t\t\t\t\"data-layout\",\n\t\t\t\ttypeof config.showNotes === \"string\" ? config.showNotes : \"inline\",\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\t\tif (\n\t\t\tthis.Reveal.getConfig().showNotes &&\n\t\t\tthis.element &&\n\t\t\tthis.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML =\n\t\t\t\tthis.getSlideNotes() ||\n\t\t\t\t'<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\t\tif (\n\t\t\tthis.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"show-notes\");\n\t\t} else {\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\"show-notes\");\n\t\t}\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\t\treturn (\n\t\t\tthis.Reveal.getSlidesElement().querySelectorAll(\n\t\t\t\t\"[data-notes], aside.notes\",\n\t\t\t).length > 0\n\t\t);\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\t\treturn !!window.location.search.match(/receiver/gi);\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes(slide = this.Reveal.getCurrentSlide()) {\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif (slide.hasAttribute(\"data-notes\")) {\n\t\t\treturn slide.getAttribute(\"data-notes\");\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll(\"aside.notes\");\n\t\tif (notesElements) {\n\t\t\treturn Array.from(notesElements)\n\t\t\t\t.map((notesElement) => notesElement.innerHTML)\n\t\t\t\t.join(\"\\n\");\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tdestroy() {\n\t\tthis.element.remove();\n\t}\n}\n","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor(container, progressCheck) {\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter / 2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement(\"canvas\");\n\t\tthis.canvas.className = \"playback\";\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + \"px\";\n\t\tthis.canvas.style.height = this.diameter2 + \"px\";\n\t\tthis.context = this.canvas.getContext(\"2d\");\n\n\t\tthis.container.appendChild(this.canvas);\n\n\t\tthis.render();\n\t}\n\n\tsetPlaying(value) {\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif (!wasPlaying && this.playing) {\n\t\t\tthis.animate();\n\t\t} else {\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\tanimate() {\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif (progressBefore > 0.8 && this.progress < 0.2) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif (this.playing) {\n\t\t\trequestAnimationFrame(this.animate.bind(this));\n\t\t}\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = this.diameter2 - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += (1 - this.progressOffset) * 0.1;\n\n\t\tconst endAngle = -Math.PI / 2 + progress * (Math.PI * 2);\n\t\tconst startAngle = -Math.PI / 2 + this.progressOffset * (Math.PI * 2);\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect(0, 0, this.diameter, this.diameter);\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc(x, y, radius + 4, 0, Math.PI * 2, false);\n\t\tthis.context.fillStyle = \"rgba( 0, 0, 0, 0.4 )\";\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc(x, y, radius, 0, Math.PI * 2, false);\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = \"rgba( 255, 255, 255, 0.2 )\";\n\t\tthis.context.stroke();\n\n\t\tif (this.playing) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc(x, y, radius, startAngle, endAngle, false);\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = \"#fff\";\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate(x - iconSize / 2, y - iconSize / 2);\n\n\t\t// Draw play/pause icons\n\t\tif (this.playing) {\n\t\t\tthis.context.fillStyle = \"#fff\";\n\t\t\tthis.context.fillRect(0, 0, iconSize / 2 - 4, iconSize);\n\t\t\tthis.context.fillRect(iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize);\n\t\t} else {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate(4, 0);\n\t\t\tthis.context.moveTo(0, 0);\n\t\t\tthis.context.lineTo(iconSize - 4, iconSize / 2);\n\t\t\tthis.context.lineTo(0, iconSize);\n\t\t\tthis.context.fillStyle = \"#fff\";\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\t}\n\n\ton(type, listener) {\n\t\tthis.canvas.addEventListener(type, listener, false);\n\t}\n\n\toff(type, listener) {\n\t\tthis.canvas.removeEventListener(type, listener, false);\n\t}\n\n\tdestroy() {\n\t\tthis.playing = false;\n\n\t\tif (this.canvas.parentNode) {\n\t\t\tthis.container.removeChild(this.canvas);\n\t\t}\n\t}\n}\n","/**\n * The default reveal.js config object.\n */\nexport default {\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: \"bottom-right\",\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: \"faded\",\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: \"all\",\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: \"default\",\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: \"ease\",\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t\"opacity\",\n\t\t\"color\",\n\t\t\"background-color\",\n\t\t\"padding\",\n\t\t\"font-size\",\n\t\t\"line-height\",\n\t\t\"letter-spacing\",\n\t\t\"border-width\",\n\t\t\"border-color\",\n\t\t\"border-radius\",\n\t\t\"outline\",\n\t\t\"outline-offset\",\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: \"slide\", // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: \"default\", // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: \"fade\", // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: \"\", // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: \"\", // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: \"\", // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: \"\", // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: \"full\",\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: \"mandatory\",\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: \"auto\",\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: \"block\",\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: [],\n};\n","import SlideContent from \"./controllers/slidecontent.js\";\nimport SlideNumber from \"./controllers/slidenumber.js\";\nimport JumpToSlide from \"./controllers/jumptoslide.js\";\nimport Backgrounds from \"./controllers/backgrounds.js\";\nimport AutoAnimate from \"./controllers/autoanimate.js\";\nimport ScrollView from \"./controllers/scrollview.js\";\nimport PrintView from \"./controllers/printview.js\";\nimport Fragments from \"./controllers/fragments.js\";\nimport Overview from \"./controllers/overview.js\";\nimport Keyboard from \"./controllers/keyboard.js\";\nimport Location from \"./controllers/location.js\";\nimport Controls from \"./controllers/controls.js\";\nimport Progress from \"./controllers/progress.js\";\nimport Pointer from \"./controllers/pointer.js\";\nimport Plugins from \"./controllers/plugins.js\";\nimport Touch from \"./controllers/touch.js\";\nimport Focus from \"./controllers/focus.js\";\nimport Notes from \"./controllers/notes.js\";\nimport Playback from \"./components/playback.js\";\nimport defaultConfig from \"./config.js\";\nimport * as Util from \"./utils/util.js\";\nimport * as Device from \"./utils/device.js\";\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST,\n} from \"./utils/constants.js\";\n\n// The reveal.js version\nexport const VERSION = \"5.0.1\";\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function (revealElement, options) {\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif (arguments.length < 2) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector(\".reveal\");\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false,\n\t\t},\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: \"\", overview: \"\" },\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\t\t// The current slide transition state; idle or running\n\t\ttransition = \"idle\",\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent(Reveal),\n\t\tslideNumber = new SlideNumber(Reveal),\n\t\tjumpToSlide = new JumpToSlide(Reveal),\n\t\tautoAnimate = new AutoAnimate(Reveal),\n\t\tbackgrounds = new Backgrounds(Reveal),\n\t\tscrollView = new ScrollView(Reveal),\n\t\tprintView = new PrintView(Reveal),\n\t\tfragments = new Fragments(Reveal),\n\t\toverview = new Overview(Reveal),\n\t\tkeyboard = new Keyboard(Reveal),\n\t\tlocation = new Location(Reveal),\n\t\tcontrols = new Controls(Reveal),\n\t\tprogress = new Progress(Reveal),\n\t\tpointer = new Pointer(Reveal),\n\t\tplugins = new Plugins(Reveal),\n\t\tfocus = new Focus(Reveal),\n\t\ttouch = new Touch(Reveal),\n\t\tnotes = new Notes(Reveal);\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize(initOptions) {\n\t\tif (!revealElement)\n\t\t\tthrow 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector(\".slides\");\n\n\t\tif (!dom.slides)\n\t\t\tthrow 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = {\n\t\t\t...defaultConfig,\n\t\t\t...config,\n\t\t\t...options,\n\t\t\t...initOptions,\n\t\t\t...Util.getQueryHash(),\n\t\t};\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif (/print-pdf/gi.test(window.location.search)) {\n\t\t\tconfig.view = \"print\";\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener(\"load\", layout, false);\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load(config.plugins, config.dependencies).then(start);\n\n\t\treturn new Promise((resolve) => Reveal.on(\"ready\", resolve));\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif (config.embedded === true) {\n\t\t\tdom.viewport =\n\t\t\t\tUtil.closest(revealElement, \".reveal-viewport\") || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add(\"reveal-full-page\");\n\t\t}\n\n\t\tdom.viewport.classList.add(\"reveal-viewport\");\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update(true);\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout(() => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove(\"no-transition\");\n\n\t\t\tdom.wrapper.classList.add(\"ready\");\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: \"ready\",\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t},\n\t\t\t});\n\t\t}, 1);\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\t\tconst activatePrintView = config.view === \"print\";\n\t\tconst activateScrollView =\n\t\t\tconfig.view === \"scroll\" || config.view === \"reader\";\n\n\t\tif (activatePrintView || activateScrollView) {\n\t\t\tif (activatePrintView) {\n\t\t\t\tremoveEventListeners();\n\t\t\t} else {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add(\"loading-scroll-mode\");\n\n\t\t\tif (activatePrintView) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif (document.readyState === \"complete\") {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t} else {\n\t\t\t\t\twindow.addEventListener(\"load\", () => printView.activate());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\t\tif (!config.showHiddenSlides) {\n\t\t\tUtil.queryAll(dom.wrapper, 'section[data-visibility=\"hidden\"]').forEach(\n\t\t\t\t(slide) => {\n\t\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t\t// stack\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent.childElementCount === 1 &&\n\t\t\t\t\t\t/section/i.test(parent.nodeName)\n\t\t\t\t\t) {\n\t\t\t\t\t\tparent.remove();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tslide.remove();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add(\"no-transition\");\n\n\t\tif (Device.isMobile) {\n\t\t\tdom.wrapper.classList.add(\"no-hover\");\n\t\t} else {\n\t\t\tdom.wrapper.classList.remove(\"no-hover\");\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode(\n\t\t\tdom.wrapper,\n\t\t\t\"div\",\n\t\t\t\"pause-overlay\",\n\t\t\tconfig.controls\n\t\t\t\t? '<button class=\"resume-button\">Resume presentation</button>'\n\t\t\t\t: null,\n\t\t);\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute(\"role\", \"application\");\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\t\tlet statusElement = dom.wrapper.querySelector(\".aria-status\");\n\t\tif (!statusElement) {\n\t\t\tstatusElement = document.createElement(\"div\");\n\t\t\tstatusElement.style.position = \"absolute\";\n\t\t\tstatusElement.style.height = \"1px\";\n\t\t\tstatusElement.style.width = \"1px\";\n\t\t\tstatusElement.style.overflow = \"hidden\";\n\t\t\tstatusElement.style.clip = \"rect( 1px, 1px, 1px, 1px )\";\n\t\t\tstatusElement.classList.add(\"aria-status\");\n\t\t\tstatusElement.setAttribute(\"aria-live\", \"polite\");\n\t\t\tstatusElement.setAttribute(\"aria-atomic\", \"true\");\n\t\t\tdom.wrapper.appendChild(statusElement);\n\t\t}\n\t\treturn statusElement;\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus(value) {\n\t\tdom.statusElement.textContent = value;\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText(node) {\n\t\tlet text = \"\";\n\n\t\t// Text node\n\t\tif (node.nodeType === 3) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if (node.nodeType === 1) {\n\t\t\tlet isAriaHidden = node.getAttribute(\"aria-hidden\");\n\t\t\tlet isDisplayHidden = window.getComputedStyle(node)[\"display\"] === \"none\";\n\t\t\tif (isAriaHidden !== \"true\" && !isDisplayHidden) {\n\t\t\t\tArray.from(node.childNodes).forEach((child) => {\n\t\t\t\t\ttext += getStatusText(child);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === \"\" ? \"\" : text + \" \";\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\t\tsetInterval(() => {\n\t\t\tif (\n\t\t\t\t(!scrollView.isActive() && dom.wrapper.scrollTop !== 0) ||\n\t\t\t\tdom.wrapper.scrollLeft !== 0\n\t\t\t) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\t\tdocument.addEventListener(\"fullscreenchange\", onFullscreenChange);\n\t\tdocument.addEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\t\tif (config.postMessage) {\n\t\t\twindow.addEventListener(\"message\", onPostMessage, false);\n\t\t}\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure(options) {\n\t\tconst oldConfig = { ...config };\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif (typeof options === \"object\") Util.extend(config, options);\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif (Reveal.isReady() === false) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove(oldConfig.transition);\n\t\tdom.wrapper.classList.add(config.transition);\n\n\t\tdom.wrapper.setAttribute(\"data-transition-speed\", config.transitionSpeed);\n\t\tdom.wrapper.setAttribute(\n\t\t\t\"data-background-transition\",\n\t\t\tconfig.backgroundTransition,\n\t\t);\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty(\n\t\t\t\"--slide-width\",\n\t\t\ttypeof config.width === \"string\" ? config.width : config.width + \"px\",\n\t\t);\n\t\tdom.viewport.style.setProperty(\n\t\t\t\"--slide-height\",\n\t\t\ttypeof config.height === \"string\" ? config.height : config.height + \"px\",\n\t\t);\n\n\t\tif (config.shuffle) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass(dom.wrapper, \"embedded\", config.embedded);\n\t\tUtil.toggleClass(dom.wrapper, \"rtl\", config.rtl);\n\t\tUtil.toggleClass(dom.wrapper, \"center\", config.center);\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif (config.pause === false) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif (config.previewLinks) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks(\"[data-preview-link=false]\");\n\t\t} else {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks(\"[data-preview-link]:not([data-preview-link=false])\");\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif (autoSlidePlayer) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable) {\n\t\t\tautoSlidePlayer = new Playback(dom.wrapper, () => {\n\t\t\t\treturn Math.min(\n\t\t\t\t\tMath.max((Date.now() - autoSlideStartTime) / autoSlide, 0),\n\t\t\t\t\t1,\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tautoSlidePlayer.on(\"click\", onAutoSlidePlayerClick);\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif (config.navigationMode !== \"default\") {\n\t\t\tdom.wrapper.setAttribute(\"data-navigation-mode\", config.navigationMode);\n\t\t} else {\n\t\t\tdom.wrapper.removeAttribute(\"data-navigation-mode\");\n\t\t}\n\n\t\tnotes.configure(config, oldConfig);\n\t\tfocus.configure(config, oldConfig);\n\t\tpointer.configure(config, oldConfig);\n\t\tcontrols.configure(config, oldConfig);\n\t\tprogress.configure(config, oldConfig);\n\t\tkeyboard.configure(config, oldConfig);\n\t\tfragments.configure(config, oldConfig);\n\t\tslideNumber.configure(config, oldConfig);\n\n\t\tsync();\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener(\"resize\", onWindowResize, false);\n\n\t\tif (config.touch) touch.bind();\n\t\tif (config.keyboard) keyboard.bind();\n\t\tif (config.progress) progress.bind();\n\t\tif (config.respondToHashChanges) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener(\"click\", onSlidesClicked, false);\n\t\tdom.slides.addEventListener(\"transitionend\", onTransitionEnd, false);\n\t\tdom.pauseOverlay.addEventListener(\"click\", resume, false);\n\n\t\tif (config.focusBodyOnPageVisibilityChange) {\n\t\t\tdocument.addEventListener(\n\t\t\t\t\"visibilitychange\",\n\t\t\t\tonPageVisibilityChange,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener(\"resize\", onWindowResize, false);\n\n\t\tdom.slides.removeEventListener(\"click\", onSlidesClicked, false);\n\t\tdom.slides.removeEventListener(\"transitionend\", onTransitionEnd, false);\n\t\tdom.pauseOverlay.removeEventListener(\"click\", resume, false);\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener(\"fullscreenchange\", onFullscreenChange);\n\t\tdocument.removeEventListener(\"webkitfullscreenchange\", onFullscreenChange);\n\t\tdocument.removeEventListener(\n\t\t\t\"visibilitychange\",\n\t\t\tonPageVisibilityChange,\n\t\t\tfalse,\n\t\t);\n\t\twindow.removeEventListener(\"message\", onPostMessage, false);\n\t\twindow.removeEventListener(\"load\", layout, false);\n\n\t\t// Undo DOM changes\n\t\tif (dom.pauseOverlay) dom.pauseOverlay.remove();\n\t\tif (dom.statusElement) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove(\"reveal-full-page\");\n\n\t\tdom.wrapper.classList.remove(\n\t\t\t\"ready\",\n\t\t\t\"center\",\n\t\t\t\"has-horizontal-slides\",\n\t\t\t\"has-vertical-slides\",\n\t\t);\n\t\tdom.wrapper.removeAttribute(\"data-transition-speed\");\n\t\tdom.wrapper.removeAttribute(\"data-background-transition\");\n\n\t\tdom.viewport.classList.remove(\"reveal-viewport\");\n\t\tdom.viewport.style.removeProperty(\"--slide-width\");\n\t\tdom.viewport.style.removeProperty(\"--slide-height\");\n\n\t\tdom.slides.style.removeProperty(\"width\");\n\t\tdom.slides.style.removeProperty(\"height\");\n\t\tdom.slides.style.removeProperty(\"zoom\");\n\t\tdom.slides.style.removeProperty(\"left\");\n\t\tdom.slides.style.removeProperty(\"top\");\n\t\tdom.slides.style.removeProperty(\"bottom\");\n\t\tdom.slides.style.removeProperty(\"right\");\n\t\tdom.slides.style.removeProperty(\"transform\");\n\n\t\tArray.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(\n\t\t\t(slide) => {\n\t\t\t\tslide.style.removeProperty(\"display\");\n\t\t\t\tslide.style.removeProperty(\"top\");\n\t\t\t\tslide.removeAttribute(\"hidden\");\n\t\t\t\tslide.removeAttribute(\"aria-hidden\");\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on(type, listener, useCapture) {\n\t\trevealElement.addEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off(type, listener, useCapture) {\n\t\trevealElement.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides(transforms) {\n\t\t// Pick up new transforms from arguments\n\t\tif (typeof transforms.layout === \"string\")\n\t\t\tslidesTransform.layout = transforms.layout;\n\t\tif (typeof transforms.overview === \"string\")\n\t\t\tslidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif (slidesTransform.layout) {\n\t\t\tUtil.transformElement(\n\t\t\t\tdom.slides,\n\t\t\t\tslidesTransform.layout + \" \" + slidesTransform.overview,\n\t\t\t);\n\t\t} else {\n\t\t\tUtil.transformElement(dom.slides, slidesTransform.overview);\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target = dom.wrapper, type, data, bubbles = true }) {\n\t\tlet event = document.createEvent(\"HTMLEvents\", 1, 2);\n\t\tevent.initEvent(type, bubbles, true);\n\t\tUtil.extend(event, data);\n\t\ttarget.dispatchEvent(event);\n\n\t\tif (target === dom.wrapper) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage(type);\n\t\t}\n\n\t\treturn event;\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged(origin) {\n\t\tdispatchEvent({\n\t\t\ttype: \"slidechanged\",\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin,\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage(type, data) {\n\t\tif (config.postMessageEvents && window.parent !== window.self) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: \"reveal\",\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState(),\n\t\t\t};\n\n\t\t\tUtil.extend(message, data);\n\n\t\t\twindow.parent.postMessage(JSON.stringify(message), \"*\");\n\t\t}\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks(selector = \"a\") {\n\t\tArray.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n\t\t\tif (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n\t\t\t\telement.addEventListener(\"click\", onPreviewLinkClicked, false);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks(selector = \"a\") {\n\t\tArray.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n\t\t\tif (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n\t\t\t\telement.removeEventListener(\"click\", onPreviewLinkClicked, false);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview(url) {\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement(\"div\");\n\t\tdom.overlay.classList.add(\"overlay\");\n\t\tdom.overlay.classList.add(\"overlay-preview\");\n\t\tdom.wrapper.appendChild(dom.overlay);\n\n\t\tdom.overlay.innerHTML = `<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector(\"iframe\").addEventListener(\n\t\t\t\"load\",\n\t\t\t(event) => {\n\t\t\t\tdom.overlay.classList.add(\"loaded\");\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\n\t\tdom.overlay.querySelector(\".close\").addEventListener(\n\t\t\t\"click\",\n\t\t\t(event) => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\n\t\tdom.overlay.querySelector(\".external\").addEventListener(\n\t\t\t\"click\",\n\t\t\t(event) => {\n\t\t\t\tcloseOverlay();\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp(override) {\n\t\tif (typeof override === \"boolean\") {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t} else {\n\t\t\tif (dom.overlay) {\n\t\t\t\tcloseOverlay();\n\t\t\t} else {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\t\tif (config.help) {\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement(\"div\");\n\t\t\tdom.overlay.classList.add(\"overlay\");\n\t\t\tdom.overlay.classList.add(\"overlay-help\");\n\t\t\tdom.wrapper.appendChild(dom.overlay);\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += \"<table><th>KEY</th><th>ACTION</th>\";\n\t\t\tfor (let key in shortcuts) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[key]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor (let binding in bindings) {\n\t\t\t\tif (bindings[binding].key && bindings[binding].description) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += \"</table>\";\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector(\".close\").addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\t(event) => {\n\t\t\t\t\tcloseOverlay();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\t\tif (dom.overlay) {\n\t\t\tdom.overlay.parentNode.removeChild(dom.overlay);\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\t\tif (dom.wrapper && !printView.isActive()) {\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif (!config.disableLayout) {\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif (Device.isMobile && !config.embedded) {\n\t\t\t\t\tdocument.documentElement.style.setProperty(\n\t\t\t\t\t\t\"--vh\",\n\t\t\t\t\t\twindow.innerHeight * 0.01 + \"px\",\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive()\n\t\t\t\t\t? getComputedSlideSize(viewportWidth, viewportHeight)\n\t\t\t\t\t: getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents(config.width, config.height);\n\n\t\t\t\tdom.slides.style.width = size.width + \"px\";\n\t\t\t\tdom.slides.style.height = size.height + \"px\";\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min(\n\t\t\t\t\tsize.presentationWidth / size.width,\n\t\t\t\t\tsize.presentationHeight / size.height,\n\t\t\t\t);\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max(scale, config.minScale);\n\t\t\t\tscale = Math.min(scale, config.maxScale);\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif (scale === 1 || scrollView.isActive()) {\n\t\t\t\t\tdom.slides.style.zoom = \"\";\n\t\t\t\t\tdom.slides.style.left = \"\";\n\t\t\t\t\tdom.slides.style.top = \"\";\n\t\t\t\t\tdom.slides.style.bottom = \"\";\n\t\t\t\t\tdom.slides.style.right = \"\";\n\t\t\t\t\ttransformSlides({ layout: \"\" });\n\t\t\t\t} else {\n\t\t\t\t\tdom.slides.style.zoom = \"\";\n\t\t\t\t\tdom.slides.style.left = \"50%\";\n\t\t\t\t\tdom.slides.style.top = \"50%\";\n\t\t\t\t\tdom.slides.style.bottom = \"auto\";\n\t\t\t\t\tdom.slides.style.right = \"auto\";\n\t\t\t\t\ttransformSlides({\n\t\t\t\t\t\tlayout: \"translate(-50%, -50%) scale(\" + scale + \")\",\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from(\n\t\t\t\t\tdom.wrapper.querySelectorAll(SLIDES_SELECTOR),\n\t\t\t\t);\n\n\t\t\t\tfor (let i = 0, len = slides.length; i < len; i++) {\n\t\t\t\t\tconst slide = slides[i];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif (slide.style.display === \"none\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (config.center || slide.classList.contains(\"center\")) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif (slide.classList.contains(\"stack\")) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tslide.style.top =\n\t\t\t\t\t\t\t\tMath.max((size.height - slide.scrollHeight) / 2, 0) + \"px\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tslide.style.top = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (oldScale !== scale) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: \"resize\",\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty(\"--slide-scale\", scale);\n\t\t\tdom.viewport.style.setProperty(\"--viewport-width\", viewportWidth + \"px\");\n\t\t\tdom.viewport.style.setProperty(\n\t\t\t\t\"--viewport-height\",\n\t\t\t\tviewportHeight + \"px\",\n\t\t\t);\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif (overview.isActive()) {\n\t\t\t\toverview.update();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents(width, height) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll(\n\t\t\tdom.slides,\n\t\t\t\"section > .stretch, section > .r-stretch\",\n\t\t).forEach((element) => {\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight(element, height);\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif (/(img|video)/gi.test(element.nodeName)) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\tnh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min(width / nw, remainingHeight / nh);\n\n\t\t\t\telement.style.width = nw * es + \"px\";\n\t\t\t\telement.style.height = nh * es + \"px\";\n\t\t\t} else {\n\t\t\t\telement.style.width = width + \"px\";\n\t\t\t\telement.style.height = remainingHeight + \"px\";\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif (\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === \"number\" &&\n\t\t\tconfig.view !== \"scroll\"\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif (\n\t\t\t\tsize.presentationWidth > 0 &&\n\t\t\t\tsize.presentationWidth <= config.scrollActivationWidth\n\t\t\t) {\n\t\t\t\tif (!scrollView.isActive()) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (scrollView.isActive()) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize(presentationWidth, presentationHeight) {\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif (config.disableLayout) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight,\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= size.presentationWidth * config.margin;\n\t\tsize.presentationHeight -= size.presentationHeight * config.margin;\n\n\t\t// Slide width may be a percentage of available width\n\t\tif (typeof size.width === \"string\" && /%$/.test(size.width)) {\n\t\t\tsize.width = (parseInt(size.width, 10) / 100) * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif (typeof size.height === \"string\" && /%$/.test(size.height)) {\n\t\t\tsize.height = (parseInt(size.height, 10) / 100) * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex(stack, v) {\n\t\tif (typeof stack === \"object\" && typeof stack.setAttribute === \"function\") {\n\t\t\tstack.setAttribute(\"data-previous-indexv\", v || 0);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex(stack) {\n\t\tif (\n\t\t\ttypeof stack === \"object\" &&\n\t\t\ttypeof stack.setAttribute === \"function\" &&\n\t\t\tstack.classList.contains(\"stack\")\n\t\t) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute(\"data-start-indexv\")\n\t\t\t\t? \"data-start-indexv\"\n\t\t\t\t: \"data-previous-indexv\";\n\n\t\t\treturn parseInt(stack.getAttribute(attributeName) || 0, 10);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide(slide = currentSlide) {\n\t\treturn (\n\t\t\tslide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i)\n\t\t);\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack(slide = currentSlide) {\n\t\treturn (\n\t\t\tslide.classList.contains(\".stack\") ||\n\t\t\tslide.querySelector(\"section\") !== null\n\t\t);\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\t\tif (currentSlide && isVerticalSlide(currentSlide)) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif (currentSlide.nextElementSibling) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\t\treturn indexh === 0 && indexv === 0;\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\t\tif (currentSlide) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif (currentSlide.nextElementSibling) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif (\n\t\t\t\tisVerticalSlide(currentSlide) &&\n\t\t\t\tcurrentSlide.parentNode.nextElementSibling\n\t\t\t)\n\t\t\t\treturn false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\t\tif (config.pause) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains(\"paused\");\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add(\"paused\");\n\n\t\t\tif (wasPaused === false) {\n\t\t\t\tdispatchEvent({ type: \"paused\" });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\t\tconst wasPaused = dom.wrapper.classList.contains(\"paused\");\n\t\tdom.wrapper.classList.remove(\"paused\");\n\n\t\tcueAutoSlide();\n\n\t\tif (wasPaused) {\n\t\t\tdispatchEvent({ type: \"resumed\" });\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause(override) {\n\t\tif (typeof override === \"boolean\") {\n\t\t\toverride ? pause() : resume();\n\t\t} else {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\t\treturn dom.wrapper.classList.contains(\"paused\");\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide(override) {\n\t\tif (typeof override === \"boolean\") {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t} else {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide(override) {\n\t\tif (typeof override === \"boolean\") {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t} else {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\t\treturn !!(autoSlide && !autoSlidePaused);\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide(h, v, f, origin) {\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: \"beforeslidechange\",\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin,\n\t\t\t},\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif (slidechange.defaultPrevented) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll(\n\t\t\tHORIZONTAL_SLIDES_SELECTOR,\n\t\t);\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif (scrollView.isActive()) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices(h, v);\n\t\t\tif (scrollToSlide) scrollView.scrollToSlide(scrollToSlide);\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif (horizontalSlides.length === 0) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif (v === undefined && !overview.isActive()) {\n\t\t\tv = getPreviousVerticalIndex(horizontalSlides[h]);\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif (\n\t\t\tpreviousSlide &&\n\t\t\tpreviousSlide.parentNode &&\n\t\t\tpreviousSlide.parentNode.classList.contains(\"stack\")\n\t\t) {\n\t\t\tsetPreviousVerticalIndex(previousSlide.parentNode, indexv);\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides(\n\t\t\tHORIZONTAL_SLIDES_SELECTOR,\n\t\t\th === undefined ? indexh : h,\n\t\t);\n\t\tindexv = updateSlides(\n\t\t\tVERTICAL_SLIDES_SELECTOR,\n\t\t\tv === undefined ? indexv : v,\n\t\t);\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif (!slideChanged) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[indexh],\n\t\t\tcurrentVerticalSlides =\n\t\t\t\tcurrentHorizontalSlide.querySelectorAll(\"section\");\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif (slideChanged && previousSlide && currentSlide && !overview.isActive()) {\n\t\t\ttransition = \"running\";\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween(\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\tindexhBefore,\n\t\t\t\tindexvBefore,\n\t\t\t);\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif (autoAnimateTransition) {\n\t\t\t\tdom.slides.classList.add(\"disable-slide-transitions\");\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif (overview.isActive()) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif (typeof f !== \"undefined\") {\n\t\t\tfragments.goto(f);\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif (previousSlide && previousSlide !== currentSlide) {\n\t\t\tpreviousSlide.classList.remove(\"present\");\n\t\t\tpreviousSlide.setAttribute(\"aria-hidden\", \"true\");\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif (isFirstSlide()) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tgetVerticalStacks().forEach((slide) => {\n\t\t\t\t\t\tsetPreviousVerticalIndex(slide, 0);\n\t\t\t\t\t});\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for (let i = 0, len = state.length; i < len; i++) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor (let j = 0; j < stateBefore.length; j++) {\n\t\t\t\tif (stateBefore[j] === state[i]) {\n\t\t\t\t\tstateBefore.splice(j, 1);\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add(state[i]);\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile (stateBefore.length) {\n\t\t\tdom.viewport.classList.remove(stateBefore.pop());\n\t\t}\n\n\t\tif (slideChanged) {\n\t\t\tdispatchSlideChanged(origin);\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif (slideChanged || !previousSlide) {\n\t\t\tslideContent.stopEmbeddedContent(previousSlide);\n\t\t\tslideContent.startEmbeddedContent(currentSlide);\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame(() => {\n\t\t\tannounceStatus(getStatusText(currentSlide));\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif (autoAnimateTransition) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tdom.slides.classList.remove(\"disable-slide-transitions\");\n\t\t\t}, 0);\n\n\t\t\tif (config.autoAnimate) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run(previousSlide, currentSlide);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween(\n\t\tfromSlide,\n\t\ttoSlide,\n\t\tindexhBefore,\n\t\tindexvBefore,\n\t) {\n\t\treturn (\n\t\t\tfromSlide.hasAttribute(\"data-auto-animate\") &&\n\t\t\ttoSlide.hasAttribute(\"data-auto-animate\") &&\n\t\t\tfromSlide.getAttribute(\"data-auto-animate-id\") ===\n\t\t\t\ttoSlide.getAttribute(\"data-auto-animate-id\") &&\n\t\t\t!(\n\t\t\t\tindexh > indexhBefore || indexv > indexvBefore ? toSlide : fromSlide\n\t\t\t).hasAttribute(\"data-auto-animate-restart\")\n\t\t);\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage(slideElement, h, v) {\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif (currentSlide && previousSlide) {\n\t\t\tif (\n\t\t\t\tconfig.autoAnimate &&\n\t\t\t\tshouldAutoAnimateBetween(\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\tindexhBefore,\n\t\t\t\t\tindexv,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run(previousSlide, currentSlide);\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif (slideChanged) {\n\t\t\tif (previousSlide) {\n\t\t\t\tslideContent.stopEmbeddedContent(previousSlide);\n\t\t\t\tslideContent.stopEmbeddedContent(previousSlide.slideBackgroundElement);\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent(currentSlide);\n\t\t\tslideContent.startEmbeddedContent(currentSlide.slideBackgroundElement);\n\t\t}\n\n\t\trequestAnimationFrame(() => {\n\t\t\tannounceStatus(getStatusText(currentSlide));\n\t\t});\n\n\t\tdispatchSlideChanged();\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif (config.sortFragmentsOnSync === true) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update(true);\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif (config.autoPlayMedia === false) {\n\t\t\tslideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false });\n\t\t} else {\n\t\t\tslideContent.startEmbeddedContent(currentSlide);\n\t\t}\n\n\t\tif (overview.isActive()) {\n\t\t\toverview.layout();\n\t\t}\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide(slide = currentSlide) {\n\t\tbackgrounds.sync(slide);\n\t\tfragments.sync(slide);\n\n\t\tslideContent.load(slide);\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\t\tgetHorizontalSlides().forEach((horizontalSlide) => {\n\t\t\tUtil.queryAll(horizontalSlide, \"section\").forEach((verticalSlide, y) => {\n\t\t\t\tif (y > 0) {\n\t\t\t\t\tverticalSlide.classList.remove(\"present\");\n\t\t\t\t\tverticalSlide.classList.remove(\"past\");\n\t\t\t\t\tverticalSlide.classList.add(\"future\");\n\t\t\t\t\tverticalSlide.setAttribute(\"aria-hidden\", \"true\");\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle(slides = getHorizontalSlides()) {\n\t\tslides.forEach((slide, i) => {\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[Math.floor(Math.random() * slides.length)];\n\t\t\tif (beforeSlide.parentNode === slide.parentNode) {\n\t\t\t\tslide.parentNode.insertBefore(slide, beforeSlide);\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll(\"section\");\n\t\t\tif (verticalSlides.length) {\n\t\t\t\tshuffle(verticalSlides);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides(selector, index) {\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll(dom.wrapper, selector),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif (slidesLength) {\n\t\t\t// Should the index loop?\n\t\t\tif (config.loop) {\n\t\t\t\tif (index >= slidesLength) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max(Math.min(index, slidesLength - 1), 0);\n\n\t\t\tfor (let i = 0; i < slidesLength; i++) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide(element);\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove(\"past\");\n\t\t\t\telement.classList.remove(\"present\");\n\t\t\t\telement.classList.remove(\"future\");\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute(\"hidden\", \"\");\n\t\t\t\telement.setAttribute(\"aria-hidden\", \"true\");\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif (element.querySelector(\"section\")) {\n\t\t\t\t\telement.classList.add(\"stack\");\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif (printMode) {\n\t\t\t\t\telement.classList.add(\"present\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (i < index) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add(reverse ? \"future\" : \"past\");\n\n\t\t\t\t\tif (config.fragments) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn(element);\n\t\t\t\t\t}\n\t\t\t\t} else if (i > index) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add(reverse ? \"past\" : \"future\");\n\n\t\t\t\t\tif (config.fragments) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if (i === index && config.fragments) {\n\t\t\t\t\tif (loopedForwards) {\n\t\t\t\t\t\thideFragmentsIn(element);\n\t\t\t\t\t} else if (loopedBackwards) {\n\t\t\t\t\t\tshowFragmentsIn(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains(\"present\");\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add(\"present\");\n\t\t\tslide.removeAttribute(\"hidden\");\n\t\t\tslide.removeAttribute(\"aria-hidden\");\n\n\t\t\tif (!wasPresent) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: \"visible\",\n\t\t\t\t\tbubbles: false,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute(\"data-state\");\n\t\t\tif (slideState) {\n\t\t\t\tstate = state.concat(slideState.split(\" \"));\n\t\t\t}\n\t\t} else {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn(container) {\n\t\tUtil.queryAll(container, \".fragment\").forEach((fragment) => {\n\t\t\tfragment.classList.add(\"visible\");\n\t\t\tfragment.classList.remove(\"current-fragment\");\n\t\t});\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn(container) {\n\t\tUtil.queryAll(container, \".fragment.visible\").forEach((fragment) => {\n\t\t\tfragment.classList.remove(\"visible\", \"current-fragment\");\n\t\t});\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif (horizontalSlidesLength && typeof indexh !== \"undefined\") {\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif (Device.isMobile) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif (printView.isActive()) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor (let x = 0; x < horizontalSlidesLength; x++) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll(horizontalSlide, \"section\"),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs((indexh || 0) - x) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif (config.loop) {\n\t\t\t\t\tdistanceX =\n\t\t\t\t\t\tMath.abs(\n\t\t\t\t\t\t\t((indexh || 0) - x) % (horizontalSlidesLength - viewDistance),\n\t\t\t\t\t\t) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif (distanceX < viewDistance) {\n\t\t\t\t\tslideContent.load(horizontalSlide);\n\t\t\t\t} else {\n\t\t\t\t\tslideContent.unload(horizontalSlide);\n\t\t\t\t}\n\n\t\t\t\tif (verticalSlidesLength) {\n\t\t\t\t\tlet oy = getPreviousVerticalIndex(horizontalSlide);\n\n\t\t\t\t\tfor (let y = 0; y < verticalSlidesLength; y++) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY =\n\t\t\t\t\t\t\tx === (indexh || 0)\n\t\t\t\t\t\t\t\t? Math.abs((indexv || 0) - y)\n\t\t\t\t\t\t\t\t: Math.abs(y - oy);\n\n\t\t\t\t\t\tif (distanceX + distanceY < viewDistance) {\n\t\t\t\t\t\t\tslideContent.load(verticalSlide);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tslideContent.unload(verticalSlide);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif (hasVerticalSlides()) {\n\t\t\t\tdom.wrapper.classList.add(\"has-vertical-slides\");\n\t\t\t} else {\n\t\t\t\tdom.wrapper.classList.remove(\"has-vertical-slides\");\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif (hasHorizontalSlides()) {\n\t\t\t\tdom.wrapper.classList.add(\"has-horizontal-slides\");\n\t\t\t} else {\n\t\t\t\tdom.wrapper.classList.remove(\"has-horizontal-slides\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll(\n\t\t\t\tHORIZONTAL_SLIDES_SELECTOR,\n\t\t\t),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1,\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif (config.loop) {\n\t\t\tif (horizontalSlides.length > 1) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif (verticalSlides.length > 1) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif (horizontalSlides.length > 1 && config.navigationMode === \"linear\") {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif (includeFragments === true) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif (config.rtl) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount(slide = currentSlide) {\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for (let i = 0; i < horizontalSlides.length; i++) {\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll(\"section\");\n\n\t\t\tfor (let j = 0; j < verticalSlides.length; j++) {\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif (verticalSlides[j] === slide) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif (verticalSlides[j].dataset.visibility !== \"uncounted\") {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif (horizontalSlide === slide) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif (\n\t\t\t\thorizontalSlide.classList.contains(\"stack\") === false &&\n\t\t\t\thorizontalSlide.dataset.visibility !== \"uncounted\"\n\t\t\t) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\t\t}\n\n\t\treturn pastCount;\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif (currentSlide) {\n\t\t\tlet allFragments = currentSlide.querySelectorAll(\".fragment\");\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif (allFragments.length > 0) {\n\t\t\t\tlet visibleFragments =\n\t\t\t\t\tcurrentSlide.querySelectorAll(\".fragment.visible\");\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount +=\n\t\t\t\t\t(visibleFragments.length / allFragments.length) * fragmentWeight;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(pastCount / (totalCount - 1), 1);\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices(slide) {\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif (slide) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif (scrollView.isActive()) {\n\t\t\t\th = parseInt(slide.getAttribute(\"data-index-h\"), 10);\n\n\t\t\t\tif (slide.getAttribute(\"data-index-v\")) {\n\t\t\t\t\tv = parseInt(slide.getAttribute(\"data-index-v\"), 10);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet isVertical = isVerticalSlide(slide);\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max(horizontalSlides.indexOf(slideh), 0);\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif (isVertical) {\n\t\t\t\t\tv = Math.max(\n\t\t\t\t\t\tUtil.queryAll(slide.parentNode, \"section\").indexOf(slide),\n\t\t\t\t\t\t0,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!slide && currentSlide) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll(\".fragment\").length > 0;\n\t\t\tif (hasFragments) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector(\".current-fragment\");\n\t\t\t\tif (\n\t\t\t\t\tcurrentFragment &&\n\t\t\t\t\tcurrentFragment.hasAttribute(\"data-fragment-index\")\n\t\t\t\t) {\n\t\t\t\t\tf = parseInt(currentFragment.getAttribute(\"data-fragment-index\"), 10);\n\t\t\t\t} else {\n\t\t\t\t\tf = currentSlide.querySelectorAll(\".fragment.visible\").length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\t\treturn Util.queryAll(\n\t\t\tdom.wrapper,\n\t\t\tSLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])',\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\t\treturn Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR);\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\t\treturn Util.queryAll(dom.wrapper, \".slides>section>section\");\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\t\treturn Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + \".stack\");\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\t\treturn getVerticalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\t\treturn getSlides().map((slide) => {\n\t\t\tlet attributes = {};\n\t\t\tfor (let i = 0; i < slide.attributes.length; i++) {\n\t\t\t\tlet attribute = slide.attributes[i];\n\t\t\t\tattributes[attribute.name] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\t\treturn getSlides().length;\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide(x, y) {\n\t\tlet horizontalSlide = getHorizontalSlides()[x];\n\t\tlet verticalSlides =\n\t\t\thorizontalSlide && horizontalSlide.querySelectorAll(\"section\");\n\n\t\tif (verticalSlides && verticalSlides.length && typeof y === \"number\") {\n\t\t\treturn verticalSlides ? verticalSlides[y] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground(x, y) {\n\t\tlet slide = typeof x === \"number\" ? getSlide(x, y) : x;\n\t\tif (slide) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive(),\n\t\t};\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState(state) {\n\t\tif (typeof state === \"object\") {\n\t\t\tslide(\n\t\t\t\tUtil.deserialize(state.indexh),\n\t\t\t\tUtil.deserialize(state.indexv),\n\t\t\t\tUtil.deserialize(state.indexf),\n\t\t\t);\n\n\t\t\tlet pausedFlag = Util.deserialize(state.paused),\n\t\t\t\toverviewFlag = Util.deserialize(state.overview);\n\n\t\t\tif (typeof pausedFlag === \"boolean\" && pausedFlag !== isPaused()) {\n\t\t\t\ttogglePause(pausedFlag);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof overviewFlag === \"boolean\" &&\n\t\t\t\toverviewFlag !== overview.isActive()\n\t\t\t) {\n\t\t\t\toverview.toggle(overviewFlag);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\t\tcancelAutoSlide();\n\n\t\tif (currentSlide && config.autoSlide !== false) {\n\t\t\tlet fragment = currentSlide.querySelector(\n\t\t\t\t\".current-fragment[data-autoslide]\",\n\t\t\t);\n\n\t\t\tlet fragmentAutoSlide = fragment\n\t\t\t\t? fragment.getAttribute(\"data-autoslide\")\n\t\t\t\t: null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode\n\t\t\t\t? currentSlide.parentNode.getAttribute(\"data-autoslide\")\n\t\t\t\t: null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute(\"data-autoslide\");\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif (fragmentAutoSlide) {\n\t\t\t\tautoSlide = parseInt(fragmentAutoSlide, 10);\n\t\t\t} else if (slideAutoSlide) {\n\t\t\t\tautoSlide = parseInt(slideAutoSlide, 10);\n\t\t\t} else if (parentAutoSlide) {\n\t\t\t\tautoSlide = parseInt(parentAutoSlide, 10);\n\t\t\t} else {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif (currentSlide.querySelectorAll(\".fragment\").length === 0) {\n\t\t\t\t\tUtil.queryAll(currentSlide, \"video, audio\").forEach((el) => {\n\t\t\t\t\t\tif (el.hasAttribute(\"data-autoplay\")) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tautoSlide &&\n\t\t\t\t\t\t\t\t(el.duration * 1000) / el.playbackRate > autoSlide\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tautoSlide = (el.duration * 1000) / el.playbackRate + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif (\n\t\t\t\tautoSlide &&\n\t\t\t\t!autoSlidePaused &&\n\t\t\t\t!isPaused() &&\n\t\t\t\t!overview.isActive() &&\n\t\t\t\t(!isLastSlide() ||\n\t\t\t\t\tfragments.availableRoutes().next ||\n\t\t\t\t\tconfig.loop === true)\n\t\t\t) {\n\t\t\t\tautoSlideTimeout = setTimeout(() => {\n\t\t\t\t\tif (typeof config.autoSlideMethod === \"function\") {\n\t\t\t\t\t\tconfig.autoSlideMethod();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide);\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif (autoSlidePlayer) {\n\t\t\t\tautoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\t\tclearTimeout(autoSlideTimeout);\n\t\tautoSlideTimeout = -1;\n\t}\n\n\tfunction pauseAutoSlide() {\n\t\tif (autoSlide && !autoSlidePaused) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: \"autoslidepaused\" });\n\t\t\tclearTimeout(autoSlideTimeout);\n\n\t\t\tif (autoSlidePlayer) {\n\t\t\t\tautoSlidePlayer.setPlaying(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction resumeAutoSlide() {\n\t\tif (autoSlide && autoSlidePaused) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: \"autoslideresumed\" });\n\t\t\tcueAutoSlide();\n\t\t}\n\t}\n\n\tfunction navigateLeft({ skipFragments = false } = {}) {\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif (scrollView.isActive()) return scrollView.prev();\n\n\t\t// Reverse for RTL\n\t\tif (config.rtl) {\n\t\t\tif (\n\t\t\t\t(overview.isActive() || skipFragments || fragments.next() === false) &&\n\t\t\t\tavailableRoutes().left\n\t\t\t) {\n\t\t\t\tslide(\n\t\t\t\t\tindexh + 1,\n\t\t\t\t\tconfig.navigationMode === \"grid\" ? indexv : undefined,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if (\n\t\t\t(overview.isActive() || skipFragments || fragments.prev() === false) &&\n\t\t\tavailableRoutes().left\n\t\t) {\n\t\t\tslide(indexh - 1, config.navigationMode === \"grid\" ? indexv : undefined);\n\t\t}\n\t}\n\n\tfunction navigateRight({ skipFragments = false } = {}) {\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif (scrollView.isActive()) return scrollView.next();\n\n\t\t// Reverse for RTL\n\t\tif (config.rtl) {\n\t\t\tif (\n\t\t\t\t(overview.isActive() || skipFragments || fragments.prev() === false) &&\n\t\t\t\tavailableRoutes().right\n\t\t\t) {\n\t\t\t\tslide(\n\t\t\t\t\tindexh - 1,\n\t\t\t\t\tconfig.navigationMode === \"grid\" ? indexv : undefined,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if (\n\t\t\t(overview.isActive() || skipFragments || fragments.next() === false) &&\n\t\t\tavailableRoutes().right\n\t\t) {\n\t\t\tslide(indexh + 1, config.navigationMode === \"grid\" ? indexv : undefined);\n\t\t}\n\t}\n\n\tfunction navigateUp({ skipFragments = false } = {}) {\n\t\t// Scroll view navigation is handled independently\n\t\tif (scrollView.isActive()) return scrollView.prev();\n\n\t\t// Prioritize hiding fragments\n\t\tif (\n\t\t\t(overview.isActive() || skipFragments || fragments.prev() === false) &&\n\t\t\tavailableRoutes().up\n\t\t) {\n\t\t\tslide(indexh, indexv - 1);\n\t\t}\n\t}\n\n\tfunction navigateDown({ skipFragments = false } = {}) {\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif (scrollView.isActive()) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif (\n\t\t\t(overview.isActive() || skipFragments || fragments.next() === false) &&\n\t\t\tavailableRoutes().down\n\t\t) {\n\t\t\tslide(indexh, indexv + 1);\n\t\t}\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({ skipFragments = false } = {}) {\n\t\t// Scroll view navigation is handled independently\n\t\tif (scrollView.isActive()) return scrollView.prev();\n\n\t\t// Prioritize revealing fragments\n\t\tif (skipFragments || fragments.prev() === false) {\n\t\t\tif (availableRoutes().up) {\n\t\t\t\tnavigateUp({ skipFragments });\n\t\t\t} else {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif (config.rtl) {\n\t\t\t\t\tpreviousSlide = Util.queryAll(\n\t\t\t\t\t\tdom.wrapper,\n\t\t\t\t\t\tHORIZONTAL_SLIDES_SELECTOR + \".future\",\n\t\t\t\t\t).pop();\n\t\t\t\t} else {\n\t\t\t\t\tpreviousSlide = Util.queryAll(\n\t\t\t\t\t\tdom.wrapper,\n\t\t\t\t\t\tHORIZONTAL_SLIDES_SELECTOR + \".past\",\n\t\t\t\t\t).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif (previousSlide && previousSlide.classList.contains(\"stack\")) {\n\t\t\t\t\tlet v =\n\t\t\t\t\t\tpreviousSlide.querySelectorAll(\"section\").length - 1 || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide(h, v);\n\t\t\t\t} else {\n\t\t\t\t\tnavigateLeft({ skipFragments });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({ skipFragments = false } = {}) {\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif (scrollView.isActive()) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif (skipFragments || fragments.next() === false) {\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif (routes.down && routes.right && config.loop && isLastVerticalSlide()) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif (routes.down) {\n\t\t\t\tnavigateDown({ skipFragments });\n\t\t\t} else if (config.rtl) {\n\t\t\t\tnavigateLeft({ skipFragments });\n\t\t\t} else {\n\t\t\t\tnavigateRight({ skipFragments });\n\t\t\t}\n\t\t}\n\t}\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput(event) {\n\t\tif (config.autoSlideStoppable) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\t}\n\n\t/**\n\t * Listener for post message events posted to this window.\n\t */\n\tfunction onPostMessage(event) {\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif (\n\t\t\ttypeof data === \"string\" &&\n\t\t\tdata.charAt(0) === \"{\" &&\n\t\t\tdata.charAt(data.length - 1) === \"}\"\n\t\t) {\n\t\t\tdata = JSON.parse(data);\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif (data.method && typeof Reveal[data.method] === \"function\") {\n\t\t\t\tif (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n\t\t\t\t\tconst result = Reveal[data.method].apply(Reveal, data.args);\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage(\"callback\", {\n\t\t\t\t\t\tmethod: data.method,\n\t\t\t\t\t\tresult: result,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'reveal.js: \"' +\n\t\t\t\t\t\t\tdata.method +\n\t\t\t\t\t\t\t'\" is is blacklisted from the postMessage API',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd(event) {\n\t\tif (transition === \"running\" && /section/gi.test(event.target.nodeName)) {\n\t\t\ttransition = \"idle\";\n\t\t\tdispatchEvent({\n\t\t\t\ttype: \"slidetransitionend\",\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide },\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked(event) {\n\t\tconst anchor = Util.closest(event.target, 'a[href^=\"#\"]');\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif (anchor) {\n\t\t\tconst hash = anchor.getAttribute(\"href\");\n\t\t\tconst indices = location.getIndicesFromHash(hash);\n\n\t\t\tif (indices) {\n\t\t\t\tReveal.slide(indices.h, indices.v, indices.f);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize(event) {\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange(event) {\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif (document.hidden === false && document.activeElement !== document.body) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif (typeof document.activeElement.blur === \"function\") {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange(event) {\n\t\tlet element =\n\t\t\tdocument.fullscreenElement || document.webkitFullscreenElement;\n\t\tif (element === dom.wrapper) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout(() => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked(event) {\n\t\tif (event.currentTarget && event.currentTarget.hasAttribute(\"href\")) {\n\t\t\tlet url = event.currentTarget.getAttribute(\"href\");\n\t\t\tif (url) {\n\t\t\t\tshowPreview(url);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick(event) {\n\t\t// Replay\n\t\tif (isLastSlide() && config.loop === false) {\n\t\t\tslide(0, 0);\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if (autoSlidePaused) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\t}\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind(fragments),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft,\n\t\tnavigateRight,\n\t\tnavigateUp,\n\t\tnavigateDown,\n\t\tnavigatePrev,\n\t\tnavigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind(fragments),\n\t\tprevFragment: fragments.prev.bind(fragments),\n\t\tnextFragment: fragments.next.bind(fragments),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind(fragments),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind(overview),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind(scrollView),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind(notes),\n\t\tisOverview: overview.isActive.bind(overview),\n\t\tisFocused: focus.isFocused.bind(focus),\n\n\t\tisScrollView: scrollView.isActive.bind(scrollView),\n\t\tisPrintView: printView.isActive.bind(printView),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind(slideContent),\n\t\tunloadSlide: slideContent.unload.bind(slideContent),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent(currentSlide),\n\t\tstopEmbeddedContent: () =>\n\t\t\tslideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false }),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind(notes),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind(keyboard),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind(keyboard),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind(keyboard),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind(keyboard),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind(location),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind(plugins),\n\t\thasPlugin: plugins.hasPlugin.bind(plugins),\n\t\tgetPlugin: plugins.getPlugin.bind(plugins),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind(plugins),\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend(Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide,\n\t});\n\n\treturn API;\n}\n","import Deck, { VERSION } from \"./reveal.js\";\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = (options) => {\n\t// Create our singleton reveal.js instance\n\tObject.assign(Reveal, new Deck(document.querySelector(\".reveal\"), options));\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map((method) => method(Reveal));\n\n\treturn Reveal.initialize();\n};\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[\n\t\"configure\",\n\t\"on\",\n\t\"off\",\n\t\"addEventListener\",\n\t\"removeEventListener\",\n\t\"registerPlugin\",\n].forEach((method) => {\n\tReveal[method] = (...args) => {\n\t\tenqueuedAPICalls.push((deck) => deck[method].call(null, ...args));\n\t};\n});\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;\n"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","isSpeakerNotes","video","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","documentElement","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","includes","togglePause","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","viewport","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}
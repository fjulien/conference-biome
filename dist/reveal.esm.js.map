{"version":3,"file":"reveal.esm.js","sources":["../js/components/playback.js","../js/config.js","../js/utils/constants.js","../js/utils/util.js","../js/controllers/autoanimate.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/device.js","../js/controllers/controls.js","../js/controllers/focus.js","../js/controllers/fragments.js","../js/controllers/jumptoslide.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/notes.js","../js/controllers/overview.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/pointer.js","../js/controllers/printview.js","../js/controllers/progress.js","../js/controllers/scrollview.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/touch.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\r\n * UI component that lets the use control auto-slide\r\n * playback via play/pause.\r\n */\r\nexport default class Playback {\r\n\t/**\r\n\t * @param {HTMLElement} container The component will append\r\n\t * itself to this\r\n\t * @param {function} progressCheck A method which will be\r\n\t * called frequently to get the current playback progress on\r\n\t * a range of 0-1\r\n\t */\r\n\tconstructor(container, progressCheck) {\r\n\t\t// Cosmetics\r\n\t\tthis.diameter = 100;\r\n\t\tthis.diameter2 = this.diameter / 2;\r\n\t\tthis.thickness = 6;\r\n\r\n\t\t// Flags if we are currently playing\r\n\t\tthis.playing = false;\r\n\r\n\t\t// Current progress on a 0-1 range\r\n\t\tthis.progress = 0;\r\n\r\n\t\t// Used to loop the animation smoothly\r\n\t\tthis.progressOffset = 1;\r\n\r\n\t\tthis.container = container;\r\n\t\tthis.progressCheck = progressCheck;\r\n\r\n\t\tthis.canvas = document.createElement(\"canvas\");\r\n\t\tthis.canvas.className = \"playback\";\r\n\t\tthis.canvas.width = this.diameter;\r\n\t\tthis.canvas.height = this.diameter;\r\n\t\tthis.canvas.style.width = `${this.diameter2}px`;\r\n\t\tthis.canvas.style.height = `${this.diameter2}px`;\r\n\t\tthis.context = this.canvas.getContext(\"2d\");\r\n\r\n\t\tthis.container.appendChild(this.canvas);\r\n\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tsetPlaying(value) {\r\n\t\tconst wasPlaying = this.playing;\r\n\r\n\t\tthis.playing = value;\r\n\r\n\t\t// Start repainting if we weren't already\r\n\t\tif (!wasPlaying && this.playing) {\r\n\t\t\tthis.animate();\r\n\t\t} else {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t}\r\n\r\n\tanimate() {\r\n\t\tconst progressBefore = this.progress;\r\n\r\n\t\tthis.progress = this.progressCheck();\r\n\r\n\t\t// When we loop, offset the progress so that it eases\r\n\t\t// smoothly rather than immediately resetting\r\n\t\tif (progressBefore > 0.8 && this.progress < 0.2) {\r\n\t\t\tthis.progressOffset = this.progress;\r\n\t\t}\r\n\r\n\t\tthis.render();\r\n\r\n\t\tif (this.playing) {\r\n\t\t\trequestAnimationFrame(this.animate.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current progress and playback state.\r\n\t */\r\n\trender() {\r\n\t\tconst progress = this.playing ? this.progress : 0;\r\n\t\tconst radius = this.diameter2 - this.thickness;\r\n\t\tconst x = this.diameter2;\r\n\t\tconst y = this.diameter2;\r\n\t\tconst iconSize = 28;\r\n\r\n\t\t// Ease towards 1\r\n\t\tthis.progressOffset += (1 - this.progressOffset) * 0.1;\r\n\r\n\t\tconst endAngle = -Math.PI / 2 + progress * (Math.PI * 2);\r\n\t\tconst startAngle = -Math.PI / 2 + this.progressOffset * (Math.PI * 2);\r\n\r\n\t\tthis.context.save();\r\n\t\tthis.context.clearRect(0, 0, this.diameter, this.diameter);\r\n\r\n\t\t// Solid background color\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc(x, y, radius + 4, 0, Math.PI * 2, false);\r\n\t\tthis.context.fillStyle = \"rgba( 0, 0, 0, 0.4 )\";\r\n\t\tthis.context.fill();\r\n\r\n\t\t// Draw progress track\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc(x, y, radius, 0, Math.PI * 2, false);\r\n\t\tthis.context.lineWidth = this.thickness;\r\n\t\tthis.context.strokeStyle = \"rgba( 255, 255, 255, 0.2 )\";\r\n\t\tthis.context.stroke();\r\n\r\n\t\tif (this.playing) {\r\n\t\t\t// Draw progress on top of track\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.arc(x, y, radius, startAngle, endAngle, false);\r\n\t\t\tthis.context.lineWidth = this.thickness;\r\n\t\t\tthis.context.strokeStyle = \"#fff\";\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.context.translate(x - iconSize / 2, y - iconSize / 2);\r\n\r\n\t\t// Draw play/pause icons\r\n\t\tif (this.playing) {\r\n\t\t\tthis.context.fillStyle = \"#fff\";\r\n\t\t\tthis.context.fillRect(0, 0, iconSize / 2 - 4, iconSize);\r\n\t\t\tthis.context.fillRect(iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize);\r\n\t\t} else {\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.translate(4, 0);\r\n\t\t\tthis.context.moveTo(0, 0);\r\n\t\t\tthis.context.lineTo(iconSize - 4, iconSize / 2);\r\n\t\t\tthis.context.lineTo(0, iconSize);\r\n\t\t\tthis.context.fillStyle = \"#fff\";\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\r\n\t\tthis.context.restore();\r\n\t}\r\n\r\n\ton(type, listener) {\r\n\t\tthis.canvas.addEventListener(type, listener, false);\r\n\t}\r\n\r\n\toff(type, listener) {\r\n\t\tthis.canvas.removeEventListener(type, listener, false);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.playing = false;\r\n\r\n\t\tif (this.canvas.parentNode) {\r\n\t\t\tthis.container.removeChild(this.canvas);\r\n\t\t}\r\n\t}\r\n}\r\n","/**\n * The default reveal.js config object.\n */\nexport default {\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: \"bottom-right\",\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: \"faded\",\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: \"all\",\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: \"default\",\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: \"ease\",\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t\"opacity\",\n\t\t\"color\",\n\t\t\"background-color\",\n\t\t\"padding\",\n\t\t\"font-size\",\n\t\t\"line-height\",\n\t\t\"letter-spacing\",\n\t\t\"border-width\",\n\t\t\"border-color\",\n\t\t\"border-radius\",\n\t\t\"outline\",\n\t\t\"outline-offset\",\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: \"slide\", // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: \"default\", // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: \"fade\", // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: \"\", // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: \"\", // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: \"\", // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: \"\", // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: \"full\",\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: \"mandatory\",\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: \"auto\",\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: \"block\",\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: [],\n};\n","export const SLIDES_SELECTOR = \".slides section\";\nexport const HORIZONTAL_SLIDES_SELECTOR = \".slides>section\";\nexport const VERTICAL_SLIDES_SELECTOR = \".slides>section.present>section\";\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = \".backgrounds>.slide-background\";\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST =\n\t/registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX =\n\t/fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = \"h.v\";\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = \"h/v\";\nexport const SLIDE_NUMBER_FORMAT_CURRENT = \"c\";\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = \"c/t\";\n","/**\r\n * Extend object a with the properties of object b.\r\n * If there's a conflict, object b takes precedence.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n */\r\nexport const extend = (a, b) => {\r\n\tfor (const i in b) {\r\n\t\ta[i] = b[i];\r\n\t}\r\n\r\n\treturn a;\r\n};\r\n\r\n/**\r\n * querySelectorAll but returns an Array.\r\n */\r\nexport const queryAll = (el, selector) => {\r\n\treturn Array.from(el.querySelectorAll(selector));\r\n};\r\n\r\n/**\r\n * classList.toggle() with cross browser support\r\n */\r\nexport const toggleClass = (el, className, value) => {\r\n\tif (value) {\r\n\t\tel.classList.add(className);\r\n\t} else {\r\n\t\tel.classList.remove(className);\r\n\t}\r\n};\r\n\r\n/**\r\n * Utility for deserializing a value.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nexport const deserialize = (value) => {\r\n\tif (typeof value === \"string\") {\r\n\t\tif (value === \"null\") return null;\r\n\t\tif (value === \"true\") return true;\r\n\t\tif (value === \"false\") return false;\r\n\t\tif (value.match(/^-?[\\d\\.]+$/)) return Number.parseFloat(value);\r\n\t}\r\n\r\n\treturn value;\r\n};\r\n\r\n/**\r\n * Measures the distance in pixels between point a\r\n * and point b.\r\n *\r\n * @param {object} a point with x/y properties\r\n * @param {object} b point with x/y properties\r\n *\r\n * @return {number}\r\n */\r\nexport const distanceBetween = (a, b) => {\r\n\tconst dx = a.x - b.x;\r\n\tconst dy = a.y - b.y;\r\n\r\n\treturn Math.sqrt(dx * dx + dy * dy);\r\n};\r\n\r\n/**\r\n * Applies a CSS transform to the target element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} transform\r\n */\r\nexport const transformElement = (element, transform) => {\r\n\telement.style.transform = transform;\r\n};\r\n\r\n/**\r\n * Element.matches with IE support.\r\n *\r\n * @param {HTMLElement} target The element to match\r\n * @param {String} selector The CSS selector to match\r\n * the element against\r\n *\r\n * @return {Boolean}\r\n */\r\nexport const matches = (target, selector) => {\r\n\tconst matchesMethod =\r\n\t\ttarget.matches || target.matchesSelector || target.msMatchesSelector;\r\n\r\n\treturn !!matchesMethod?.call(target, selector);\r\n};\r\n\r\n/**\r\n * Find the closest parent that matches the given\r\n * selector.\r\n *\r\n * @param {HTMLElement} target The child element\r\n * @param {String} selector The CSS selector to match\r\n * the parents against\r\n *\r\n * @return {HTMLElement} The matched parent or null\r\n * if no matching parent was found\r\n */\r\nexport const closest = (target, selector) => {\r\n\t// Native Element.closest\r\n\tif (typeof target.closest === \"function\") {\r\n\t\treturn target.closest(selector);\r\n\t}\r\n\r\n\t// Polyfill\r\n\twhile (target) {\r\n\t\tif (matches(target, selector)) {\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\t// Keep searching\r\n\t\ttarget = target.parentNode;\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Handling the fullscreen functionality via the fullscreen API\r\n *\r\n * @see http://fullscreen.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n */\r\nexport const enterFullscreen = (element) => {\r\n\telement = element || document.documentElement;\r\n\r\n\t// Check which implementation is available\r\n\tconst requestMethod =\r\n\t\telement.requestFullscreen ||\r\n\t\telement.webkitRequestFullscreen ||\r\n\t\telement.webkitRequestFullScreen ||\r\n\t\telement.mozRequestFullScreen ||\r\n\t\telement.msRequestFullscreen;\r\n\r\n\tif (requestMethod) {\r\n\t\trequestMethod.apply(element);\r\n\t}\r\n};\r\n\r\n/**\r\n * Creates an HTML element and returns a reference to it.\r\n * If the element already exists the existing instance will\r\n * be returned.\r\n *\r\n * @param {HTMLElement} container\r\n * @param {string} tagname\r\n * @param {string} classname\r\n * @param {string} innerHTML\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport const createSingletonNode = (\r\n\tcontainer,\r\n\ttagname,\r\n\tclassname,\r\n\tinnerHTML = \"\",\r\n) => {\r\n\t// Find all nodes matching the description\r\n\tconst nodes = container.querySelectorAll(`.${classname}`);\r\n\r\n\t// Check all matches to find one which is a direct child of\r\n\t// the specified container\r\n\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\tconst testNode = nodes[i];\r\n\t\tif (testNode.parentNode === container) {\r\n\t\t\treturn testNode;\r\n\t\t}\r\n\t}\r\n\r\n\t// If no node was found, create it now\r\n\tconst node = document.createElement(tagname);\r\n\tnode.className = classname;\r\n\tnode.innerHTML = innerHTML;\r\n\tcontainer.appendChild(node);\r\n\r\n\treturn node;\r\n};\r\n\r\n/**\r\n * Injects the given CSS styles into the DOM.\r\n *\r\n * @param {string} value\r\n */\r\nexport const createStyleSheet = (value) => {\r\n\tconst tag = document.createElement(\"style\");\r\n\ttag.type = \"text/css\";\r\n\r\n\tif (value && value.length > 0) {\r\n\t\tif (tag.styleSheet) {\r\n\t\t\ttag.styleSheet.cssText = value;\r\n\t\t} else {\r\n\t\t\ttag.appendChild(document.createTextNode(value));\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.head.appendChild(tag);\r\n\r\n\treturn tag;\r\n};\r\n\r\n/**\r\n * Returns a key:value hash of all query params.\r\n */\r\nexport const getQueryHash = () => {\r\n\tconst query = {};\r\n\r\n\tlocation.search.replace(/[A-Z0-9]+?=([\\w\\.%-]*)/gi, (a) => {\r\n\t\tquery[a.split(\"=\").shift()] = a.split(\"=\").pop();\r\n\t});\r\n\r\n\t// Basic deserialization\r\n\tfor (const i in query) {\r\n\t\tconst value = query[i];\r\n\r\n\t\tquery[i] = deserialize(unescape(value));\r\n\t}\r\n\r\n\t// Do not accept new dependencies via query config to avoid\r\n\t// the potential of malicious script injection\r\n\tif (typeof query.dependencies !== \"undefined\") query.dependencies = undefined;\r\n\r\n\treturn query;\r\n};\r\n\r\n/**\r\n * Returns the remaining height within the parent of the\r\n * target element.\r\n *\r\n * remaining height = [ configured parent height ] - [ current parent height ]\r\n *\r\n * @param {HTMLElement} element\r\n * @param {number} [height]\r\n */\r\nexport const getRemainingHeight = (element, height = 0) => {\r\n\tif (element) {\r\n\t\tlet newHeight;\r\n\t\tconst oldHeight = element.style.height;\r\n\r\n\t\t// Change the .stretch element height to 0 in order find the height of all\r\n\t\t// the other elements\r\n\t\telement.style.height = \"0px\";\r\n\r\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\r\n\t\t// Restore it temporarily to its natural height.\r\n\t\telement.parentNode.style.height = \"auto\";\r\n\r\n\t\tnewHeight = height - element.parentNode.offsetHeight;\r\n\r\n\t\t// Restore the old height, just in case\r\n\t\telement.style.height = `${oldHeight}px`;\r\n\r\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\r\n\t\telement.parentNode.style.removeProperty(\"height\");\r\n\r\n\t\treturn newHeight;\r\n\t}\r\n\r\n\treturn height;\r\n};\r\n\r\nconst fileExtensionToMimeMap = {\r\n\tmp4: \"video/mp4\",\r\n\tm4a: \"video/mp4\",\r\n\togv: \"video/ogg\",\r\n\tmpeg: \"video/mpeg\",\r\n\twebm: \"video/webm\",\r\n};\r\n\r\n/**\r\n * Guess the MIME type for common file formats.\r\n */\r\nexport const getMimeTypeFromFile = (filename = \"\") => {\r\n\treturn fileExtensionToMimeMap[filename.split(\".\").pop()];\r\n};\r\n\r\n/**\r\n * Encodes a string for RFC3986-compliant URL format.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\r\n *\r\n * @param {string} url\r\n */\r\nexport const encodeRFC3986URI = (url = \"\") => {\r\n\treturn encodeURI(url)\r\n\t\t.replace(/%5B/g, \"[\")\r\n\t\t.replace(/%5D/g, \"]\")\r\n\t\t.replace(\r\n\t\t\t/[!'()*]/g,\r\n\t\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`,\r\n\t\t);\r\n};\r\n","import { FRAGMENT_STYLE_REGEX } from \"../utils/constants.js\";\r\nimport {\r\n\tclosest,\r\n\tcreateStyleSheet,\r\n\textend,\r\n\tmatches,\r\n\tqueryAll,\r\n} from \"../utils/util.js\";\r\n\r\n// Counter used to generate unique IDs for auto-animated elements\r\nlet autoAnimateCounter = 0;\r\n\r\n/**\r\n * Automatically animates matching elements across\r\n * slides with the [data-auto-animate] attribute.\r\n */\r\nexport default class AutoAnimate {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\t}\r\n\r\n\t/**\r\n\t * Runs an auto-animation between the given slides.\r\n\t *\r\n\t * @param  {HTMLElement} fromSlide\r\n\t * @param  {HTMLElement} toSlide\r\n\t */\r\n\trun(fromSlide, toSlide) {\r\n\t\t// Clean up after prior animations\r\n\t\tthis.reset();\r\n\r\n\t\tconst allSlides = this.Reveal.getSlides();\r\n\t\tconst toSlideIndex = allSlides.indexOf(toSlide);\r\n\t\tconst fromSlideIndex = allSlides.indexOf(fromSlide);\r\n\r\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\r\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\r\n\t\t// physically latter slide (independent of slide direction)\r\n\t\tif (\r\n\t\t\tfromSlide.hasAttribute(\"data-auto-animate\") &&\r\n\t\t\ttoSlide.hasAttribute(\"data-auto-animate\") &&\r\n\t\t\tfromSlide.getAttribute(\"data-auto-animate-id\") ===\r\n\t\t\t\ttoSlide.getAttribute(\"data-auto-animate-id\") &&\r\n\t\t\t!(toSlideIndex > fromSlideIndex ? toSlide : fromSlide).hasAttribute(\r\n\t\t\t\t\"data-auto-animate-restart\",\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\t// Create a new auto-animate sheet\r\n\t\t\tthis.autoAnimateStyleSheet =\r\n\t\t\t\tthis.autoAnimateStyleSheet || createStyleSheet();\r\n\r\n\t\t\tconst animationOptions = this.getAutoAnimateOptions(toSlide);\r\n\r\n\t\t\t// Set our starting state\r\n\t\t\tfromSlide.dataset.autoAnimate = \"pending\";\r\n\t\t\ttoSlide.dataset.autoAnimate = \"pending\";\r\n\r\n\t\t\t// Flag the navigation direction, needed for fragment buildup\r\n\t\t\tanimationOptions.slideDirection =\r\n\t\t\t\ttoSlideIndex > fromSlideIndex ? \"forward\" : \"backward\";\r\n\r\n\t\t\t// If the from-slide is hidden because it has moved outside\r\n\t\t\t// the view distance, we need to temporarily show it while\r\n\t\t\t// measuring\r\n\t\t\tconst fromSlideIsHidden = fromSlide.style.display === \"none\";\r\n\t\t\tif (fromSlideIsHidden)\r\n\t\t\t\tfromSlide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t\t// Inject our auto-animate styles for this transition\r\n\t\t\tconst css = this.getAutoAnimatableElements(fromSlide, toSlide).map(\r\n\t\t\t\t(elements) => {\r\n\t\t\t\t\treturn this.autoAnimateElements(\r\n\t\t\t\t\t\telements.from,\r\n\t\t\t\t\t\telements.to,\r\n\t\t\t\t\t\telements.options || {},\r\n\t\t\t\t\t\tanimationOptions,\r\n\t\t\t\t\t\tautoAnimateCounter++,\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\r\n\t\t\tif (fromSlideIsHidden) fromSlide.style.display = \"none\";\r\n\r\n\t\t\t// Animate unmatched elements, if enabled\r\n\t\t\tif (\r\n\t\t\t\ttoSlide.dataset.autoAnimateUnmatched !== \"false\" &&\r\n\t\t\t\tthis.Reveal.getConfig().autoAnimateUnmatched === true\r\n\t\t\t) {\r\n\t\t\t\t// Our default timings for unmatched elements\r\n\t\t\t\tconst defaultUnmatchedDuration = animationOptions.duration * 0.8;\r\n\t\t\t\tconst defaultUnmatchedDelay = animationOptions.duration * 0.2;\r\n\r\n\t\t\t\tthis.getUnmatchedAutoAnimateElements(toSlide).forEach(\r\n\t\t\t\t\t(unmatchedElement) => {\r\n\t\t\t\t\t\tconst unmatchedOptions = this.getAutoAnimateOptions(\r\n\t\t\t\t\t\t\tunmatchedElement,\r\n\t\t\t\t\t\t\tanimationOptions,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tlet id = \"unmatched\";\r\n\r\n\t\t\t\t\t\t// If there is a duration or delay set specifically for this\r\n\t\t\t\t\t\t// element our unmatched elements should adhere to those\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tunmatchedOptions.duration !== animationOptions.duration ||\r\n\t\t\t\t\t\t\tunmatchedOptions.delay !== animationOptions.delay\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tid = `unmatched-${autoAnimateCounter++}`;\r\n\t\t\t\t\t\t\tcss.push(\r\n\t\t\t\t\t\t\t\t`[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }`,\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthis,\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Our default transition for unmatched elements\r\n\t\t\t\tcss.push(\r\n\t\t\t\t\t`[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }`,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Setting the whole chunk of CSS at once is the most\r\n\t\t\t// efficient way to do this. Using sheet.insertRule\r\n\t\t\t// is multiple factors slower.\r\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join(\"\");\r\n\r\n\t\t\t// Start the animation next cycle\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tif (this.autoAnimateStyleSheet) {\r\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\r\n\t\t\t\t\tgetComputedStyle(this.autoAnimateStyleSheet).fontWeight;\r\n\r\n\t\t\t\t\ttoSlide.dataset.autoAnimate = \"running\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: \"autoanimate\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfromSlide,\r\n\t\t\t\t\ttoSlide,\r\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Rolls back all changes that we've made to the DOM so\r\n\t * that as part of animating.\r\n\t */\r\n\treset() {\r\n\t\t// Reset slides\r\n\t\tqueryAll(\r\n\t\t\tthis.Reveal.getRevealElement(),\r\n\t\t\t'[data-auto-animate]:not([data-auto-animate=\"\"])',\r\n\t\t).forEach((element) => {\r\n\t\t\telement.dataset.autoAnimate = \"\";\r\n\t\t});\r\n\r\n\t\t// Reset elements\r\n\t\tqueryAll(\r\n\t\t\tthis.Reveal.getRevealElement(),\r\n\t\t\t\"[data-auto-animate-target]\",\r\n\t\t).forEach((element) => {\r\n\t\t\tdelete element.dataset.autoAnimateTarget;\r\n\t\t});\r\n\r\n\t\t// Remove the animation sheet\r\n\t\tif (this.autoAnimateStyleSheet?.parentNode) {\r\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild(\r\n\t\t\t\tthis.autoAnimateStyleSheet,\r\n\t\t\t);\r\n\t\t\tthis.autoAnimateStyleSheet = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a FLIP animation where the `to` element starts out\r\n\t * in the `from` element position and animates to its original\r\n\t * state.\r\n\t *\r\n\t * @param {HTMLElement} from\r\n\t * @param {HTMLElement} to\r\n\t * @param {Object} elementOptions Options for this element pair\r\n\t * @param {Object} animationOptions Options set at the slide level\r\n\t * @param {String} id Unique ID that we can use to identify this\r\n\t * auto-animate element in the DOM\r\n\t */\r\n\tautoAnimateElements(from, to, elementOptions, animationOptions, id) {\r\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\r\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\r\n\t\tfrom.dataset.autoAnimateTarget = \"\";\r\n\t\tto.dataset.autoAnimateTarget = id;\r\n\r\n\t\t// Each element may override any of the auto-animate options\r\n\t\t// like transition easing, duration and delay via data-attributes\r\n\t\tconst options = this.getAutoAnimateOptions(to, animationOptions);\r\n\r\n\t\t// If we're using a custom element matcher the element options\r\n\t\t// may contain additional transition overrides\r\n\t\tif (typeof elementOptions.delay !== \"undefined\")\r\n\t\t\toptions.delay = elementOptions.delay;\r\n\t\tif (typeof elementOptions.duration !== \"undefined\")\r\n\t\t\toptions.duration = elementOptions.duration;\r\n\t\tif (typeof elementOptions.easing !== \"undefined\")\r\n\t\t\toptions.easing = elementOptions.easing;\r\n\r\n\t\tconst fromProps = this.getAutoAnimatableProperties(\r\n\t\t\t\"from\",\r\n\t\t\tfrom,\r\n\t\t\telementOptions,\r\n\t\t);\r\n\t\tconst toProps = this.getAutoAnimatableProperties(\"to\", to, elementOptions);\r\n\r\n\t\t// Maintain fragment visibility for matching elements when\r\n\t\t// we're navigating forwards, this way the viewer won't need\r\n\t\t// to step through the same fragments twice\r\n\t\tif (to.classList.contains(\"fragment\")) {\r\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\r\n\t\t\t// conflicts with fragment animations\r\n\t\t\ttoProps.styles.opacity = undefined;\r\n\r\n\t\t\tif (from.classList.contains(\"fragment\")) {\r\n\t\t\t\tconst fromFragmentStyle = (from.className.match(\r\n\t\t\t\t\tFRAGMENT_STYLE_REGEX,\r\n\t\t\t\t) || [\"\"])[0];\r\n\t\t\t\tconst toFragmentStyle = (to.className.match(FRAGMENT_STYLE_REGEX) || [\r\n\t\t\t\t\t\"\",\r\n\t\t\t\t])[0];\r\n\r\n\t\t\t\t// Only skip the fragment if the fragment animation style\r\n\t\t\t\t// remains unchanged\r\n\t\t\t\tif (\r\n\t\t\t\t\tfromFragmentStyle === toFragmentStyle &&\r\n\t\t\t\t\tanimationOptions.slideDirection === \"forward\"\r\n\t\t\t\t) {\r\n\t\t\t\t\tto.classList.add(\"visible\", \"disabled\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If translation and/or scaling are enabled, css transform\r\n\t\t// the 'to' element so that it matches the position and size\r\n\t\t// of the 'from' element\r\n\t\tif (elementOptions.translate !== false || elementOptions.scale !== false) {\r\n\t\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\t\tconst delta = {\r\n\t\t\t\tx: (fromProps.x - toProps.x) / presentationScale,\r\n\t\t\t\ty: (fromProps.y - toProps.y) / presentationScale,\r\n\t\t\t\tscaleX: fromProps.width / toProps.width,\r\n\t\t\t\tscaleY: fromProps.height / toProps.height,\r\n\t\t\t};\r\n\r\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\r\n\t\t\tdelta.x = Math.round(delta.x * 1000) / 1000;\r\n\t\t\tdelta.y = Math.round(delta.y * 1000) / 1000;\r\n\t\t\tdelta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\r\n\t\t\tdelta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\r\n\r\n\t\t\tconst translate =\r\n\t\t\t\telementOptions.translate !== false && (delta.x !== 0 || delta.y !== 0);\r\n\t\t\tconst scale =\r\n\t\t\t\telementOptions.scale !== false &&\r\n\t\t\t\t(delta.scaleX !== 0 || delta.scaleY !== 0);\r\n\r\n\t\t\t// No need to transform if nothing's changed\r\n\t\t\tif (translate || scale) {\r\n\t\t\t\tconst transform = [];\r\n\r\n\t\t\t\tif (translate) transform.push(`translate(${delta.x}px, ${delta.y}px)`);\r\n\t\t\t\tif (scale) transform.push(`scale(${delta.scaleX}, ${delta.scaleY})`);\r\n\r\n\t\t\t\tfromProps.styles.transform = transform.join(\" \");\r\n\t\t\t\tfromProps.styles[\"transform-origin\"] = \"top left\";\r\n\r\n\t\t\t\ttoProps.styles.transform = \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Delete all unchanged 'to' styles\r\n\t\tfor (const propertyName in toProps.styles) {\r\n\t\t\tconst toValue = toProps.styles[propertyName];\r\n\t\t\tconst fromValue = fromProps.styles[propertyName];\r\n\r\n\t\t\tif (toValue === fromValue) {\r\n\t\t\t\tdelete toProps.styles[propertyName];\r\n\t\t\t} else {\r\n\t\t\t\t// If these property values were set via a custom matcher providing\r\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\r\n\t\t\t\tif (toValue.explicitValue === true) {\r\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (fromValue.explicitValue === true) {\r\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet css = \"\";\r\n\r\n\t\tconst toStyleProperties = Object.keys(toProps.styles);\r\n\r\n\t\t// Only create animate this element IF at least one style\r\n\t\t// property has changed\r\n\t\tif (toStyleProperties.length > 0) {\r\n\t\t\t// Instantly move to the 'from' state\r\n\t\t\tfromProps.styles.transition = \"none\";\r\n\r\n\t\t\t// Animate towards the 'to' state\r\n\t\t\ttoProps.styles.transition = `all ${options.duration}s ${options.easing} ${options.delay}s`;\r\n\t\t\ttoProps.styles[\"transition-property\"] = toStyleProperties.join(\", \");\r\n\t\t\ttoProps.styles[\"will-change\"] = toStyleProperties.join(\", \");\r\n\r\n\t\t\t// Build up our custom CSS. We need to override inline styles\r\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\r\n\t\t\tconst fromCSS = Object.keys(fromProps.styles)\r\n\t\t\t\t.map((propertyName) => {\r\n\t\t\t\t\treturn `${propertyName}: ${fromProps.styles[propertyName]} !important;`;\r\n\t\t\t\t})\r\n\t\t\t\t.join(\"\");\r\n\r\n\t\t\tconst toCSS = Object.keys(toProps.styles)\r\n\t\t\t\t.map((propertyName) => {\r\n\t\t\t\t\treturn `${propertyName}: ${toProps.styles[propertyName]} !important;`;\r\n\t\t\t\t})\r\n\t\t\t\t.join(\"\");\r\n\r\n\t\t\tcss = `[data-auto-animate-target=\"${id}\"] {${fromCSS}}[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] {${toCSS}}`;\r\n\t\t}\r\n\r\n\t\treturn css;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the auto-animate options for the given element.\r\n\t *\r\n\t * @param {HTMLElement} element Element to pick up options\r\n\t * from, either a slide or an animation target\r\n\t * @param {Object} [inheritedOptions] Optional set of existing\r\n\t * options\r\n\t */\r\n\tgetAutoAnimateOptions(element, inheritedOptions) {\r\n\t\tlet options = {\r\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\r\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\r\n\t\t\tdelay: 0,\r\n\t\t};\r\n\r\n\t\toptions = extend(options, inheritedOptions);\r\n\r\n\t\t// Inherit options from parent elements\r\n\t\tif (element.parentNode) {\r\n\t\t\tconst autoAnimatedParent = closest(\r\n\t\t\t\telement.parentNode,\r\n\t\t\t\t\"[data-auto-animate-target]\",\r\n\t\t\t);\r\n\t\t\tif (autoAnimatedParent) {\r\n\t\t\t\toptions = this.getAutoAnimateOptions(autoAnimatedParent, options);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (element.dataset.autoAnimateEasing) {\r\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\r\n\t\t}\r\n\r\n\t\tif (element.dataset.autoAnimateDuration) {\r\n\t\t\toptions.duration = Number.parseFloat(element.dataset.autoAnimateDuration);\r\n\t\t}\r\n\r\n\t\tif (element.dataset.autoAnimateDelay) {\r\n\t\t\toptions.delay = Number.parseFloat(element.dataset.autoAnimateDelay);\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing all of the properties\r\n\t * that can be auto-animated for the given element and\r\n\t * their current computed values.\r\n\t *\r\n\t * @param {String} direction 'from' or 'to'\r\n\t */\r\n\tgetAutoAnimatableProperties(direction, element, elementOptions) {\r\n\t\tconst config = this.Reveal.getConfig();\r\n\r\n\t\tconst properties = { styles: [] };\r\n\r\n\t\t// Position and size\r\n\t\tif (elementOptions.translate !== false || elementOptions.scale !== false) {\r\n\t\t\tlet bounds;\r\n\r\n\t\t\t// Custom auto-animate may optionally return a custom tailored\r\n\t\t\t// measurement function\r\n\t\t\tif (typeof elementOptions.measure === \"function\") {\r\n\t\t\t\tbounds = elementOptions.measure(element);\r\n\t\t\t} else {\r\n\t\t\t\tif (config.center) {\r\n\t\t\t\t\t// More precise, but breaks when used in combination\r\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\r\n\t\t\t\t\tbounds = element.getBoundingClientRect();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst scale = this.Reveal.getScale();\r\n\t\t\t\t\tbounds = {\r\n\t\t\t\t\t\tx: element.offsetLeft * scale,\r\n\t\t\t\t\t\ty: element.offsetTop * scale,\r\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\r\n\t\t\t\t\t\theight: element.offsetHeight * scale,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.x = bounds.x;\r\n\t\t\tproperties.y = bounds.y;\r\n\t\t\tproperties.width = bounds.width;\r\n\t\t\tproperties.height = bounds.height;\r\n\t\t}\r\n\r\n\t\tconst computedStyles = getComputedStyle(element);\r\n\r\n\t\t// CSS styles\r\n\t\t(elementOptions.styles || config.autoAnimateStyles).forEach((style) => {\r\n\t\t\tlet value;\r\n\r\n\t\t\t// `style` is either the property name directly, or an object\r\n\t\t\t// definition of a style property\r\n\t\t\tif (typeof style === \"string\") style = { property: style };\r\n\r\n\t\t\tif (typeof style.from !== \"undefined\" && direction === \"from\") {\r\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\r\n\t\t\t} else if (typeof style.to !== \"undefined\" && direction === \"to\") {\r\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\r\n\t\t\t} else {\r\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\r\n\t\t\t\tif (style.property === \"line-height\") {\r\n\t\t\t\t\tvalue =\r\n\t\t\t\t\t\tNumber.parseFloat(computedStyles[\"line-height\"]) /\r\n\t\t\t\t\t\tNumber.parseFloat(computedStyles[\"font-size\"]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Number.isNaN(value)) {\r\n\t\t\t\t\tvalue = computedStyles[style.property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (value !== \"\") {\r\n\t\t\t\tproperties.styles[style.property] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn properties;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all element pairs that we can animate\r\n\t * between the given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t *\r\n\t * @return {Array} Each value is an array where [0] is\r\n\t * the element we're animating from and [1] is the\r\n\t * element we're animating to\r\n\t */\r\n\tgetAutoAnimatableElements(fromSlide, toSlide) {\r\n\t\tconst matcher =\r\n\t\t\ttypeof this.Reveal.getConfig().autoAnimateMatcher === \"function\"\r\n\t\t\t\t? this.Reveal.getConfig().autoAnimateMatcher\r\n\t\t\t\t: this.getAutoAnimatePairs;\r\n\r\n\t\tconst pairs = matcher.call(this, fromSlide, toSlide);\r\n\r\n\t\tconst reserved = [];\r\n\r\n\t\t// Remove duplicate pairs\r\n\t\treturn pairs.filter((pair, index) => {\r\n\t\t\tif (reserved.indexOf(pair.to) === -1) {\r\n\t\t\t\treserved.push(pair.to);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Identifies matching elements between slides.\r\n\t *\r\n\t * You can specify a custom matcher function by using\r\n\t * the `autoAnimateMatcher` config option.\r\n\t */\r\n\tgetAutoAnimatePairs(fromSlide, toSlide) {\r\n\t\tconst pairs = [];\r\n\r\n\t\tconst codeNodes = \"pre\";\r\n\t\tconst textNodes = \"h1, h2, h3, h4, h5, h6, p, li\";\r\n\t\tconst mediaNodes = \"img, video, iframe\";\r\n\r\n\t\t// Explicit matches via data-id\r\n\t\tthis.findAutoAnimateMatches(\r\n\t\t\tpairs,\r\n\t\t\tfromSlide,\r\n\t\t\ttoSlide,\r\n\t\t\t\"[data-id]\",\r\n\t\t\t(node) => {\r\n\t\t\t\treturn `${node.nodeName}:::${node.getAttribute(\"data-id\")}`;\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\t// Text\r\n\t\tthis.findAutoAnimateMatches(\r\n\t\t\tpairs,\r\n\t\t\tfromSlide,\r\n\t\t\ttoSlide,\r\n\t\t\ttextNodes,\r\n\t\t\t(node) => {\r\n\t\t\t\treturn `${node.nodeName}:::${node.innerText}`;\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\t// Media\r\n\t\tthis.findAutoAnimateMatches(\r\n\t\t\tpairs,\r\n\t\t\tfromSlide,\r\n\t\t\ttoSlide,\r\n\t\t\tmediaNodes,\r\n\t\t\t(node) => {\r\n\t\t\t\treturn `${node.nodeName}:::${\r\n\t\t\t\t\tnode.getAttribute(\"src\") || node.getAttribute(\"data-src\")\r\n\t\t\t\t}`;\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\t// Code\r\n\t\tthis.findAutoAnimateMatches(\r\n\t\t\tpairs,\r\n\t\t\tfromSlide,\r\n\t\t\ttoSlide,\r\n\t\t\tcodeNodes,\r\n\t\t\t(node) => {\r\n\t\t\t\treturn `${node.nodeName}:::${node.innerText}`;\r\n\t\t\t},\r\n\t\t);\r\n\r\n\t\tpairs.forEach((pair) => {\r\n\t\t\t// Disable scale transformations on text nodes, we transition\r\n\t\t\t// each individual text property instead\r\n\t\t\tif (matches(pair.from, textNodes)) {\r\n\t\t\t\tpair.options = { scale: false };\r\n\t\t\t}\r\n\t\t\t// Animate individual lines of code\r\n\t\t\telse if (matches(pair.from, codeNodes)) {\r\n\t\t\t\t// Transition the code block's width and height instead of scaling\r\n\t\t\t\t// to prevent its content from being squished\r\n\t\t\t\tpair.options = { scale: false, styles: [\"width\", \"height\"] };\r\n\r\n\t\t\t\t// Lines of code\r\n\t\t\t\tthis.findAutoAnimateMatches(\r\n\t\t\t\t\tpairs,\r\n\t\t\t\t\tpair.from,\r\n\t\t\t\t\tpair.to,\r\n\t\t\t\t\t\".hljs .hljs-ln-code\",\r\n\t\t\t\t\t(node) => {\r\n\t\t\t\t\t\treturn node.textContent;\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tscale: false,\r\n\t\t\t\t\t\tstyles: [],\r\n\t\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind(this),\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Line numbers\r\n\t\t\t\tthis.findAutoAnimateMatches(\r\n\t\t\t\t\tpairs,\r\n\t\t\t\t\tpair.from,\r\n\t\t\t\t\tpair.to,\r\n\t\t\t\t\t\".hljs .hljs-ln-numbers[data-line-number]\",\r\n\t\t\t\t\t(node) => {\r\n\t\t\t\t\t\treturn node.getAttribute(\"data-line-number\");\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tscale: false,\r\n\t\t\t\t\t\tstyles: [\"width\"],\r\n\t\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind(this),\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\treturn pairs;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method which returns a bounding box based on\r\n\t * the given elements offset coordinates.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {Object} x, y, width, height\r\n\t */\r\n\tgetLocalBoundingBox(element) {\r\n\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round(element.offsetLeft * presentationScale * 100) / 100,\r\n\t\t\ty: Math.round(element.offsetTop * presentationScale * 100) / 100,\r\n\t\t\twidth: Math.round(element.offsetWidth * presentationScale * 100) / 100,\r\n\t\t\theight: Math.round(element.offsetHeight * presentationScale * 100) / 100,\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Finds matching elements between two slides.\r\n\t *\r\n\t * @param {Array} pairs            \tList of pairs to push matches to\r\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\r\n\t * @param {HTMLElement} toScope     Scope within the to element exists\r\n\t * @param {String} selector         CSS selector of the element to match\r\n\t * @param {Function} serializer     A function that accepts an element and returns\r\n\t *                                  a stringified ID based on its contents\r\n\t * @param {Object} animationOptions Optional config options for this pair\r\n\t */\r\n\tfindAutoAnimateMatches(\r\n\t\tpairs,\r\n\t\tfromScope,\r\n\t\ttoScope,\r\n\t\tselector,\r\n\t\tserializer,\r\n\t\tanimationOptions,\r\n\t) {\r\n\t\tconst fromMatches = {};\r\n\t\tconst toMatches = {};\r\n\r\n\t\t[].slice\r\n\t\t\t.call(fromScope.querySelectorAll(selector))\r\n\t\t\t.forEach((element, i) => {\r\n\t\t\t\tconst key = serializer(element);\r\n\t\t\t\tif (typeof key === \"string\" && key.length) {\r\n\t\t\t\t\tfromMatches[key] = fromMatches[key] || [];\r\n\t\t\t\t\tfromMatches[key].push(element);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t[].slice.call(toScope.querySelectorAll(selector)).forEach((element, i) => {\r\n\t\t\tconst key = serializer(element);\r\n\t\t\ttoMatches[key] = toMatches[key] || [];\r\n\t\t\ttoMatches[key].push(element);\r\n\r\n\t\t\tlet fromElement;\r\n\r\n\t\t\t// Retrieve the 'from' element\r\n\t\t\tif (fromMatches[key]) {\r\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\r\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\r\n\r\n\t\t\t\t// If there are multiple identical from elements, retrieve\r\n\t\t\t\t// the one at the same index as our to-element.\r\n\t\t\t\tif (fromMatches[key][primaryIndex]) {\r\n\t\t\t\t\tfromElement = fromMatches[key][primaryIndex];\r\n\t\t\t\t\tfromMatches[key][primaryIndex] = null;\r\n\t\t\t\t}\r\n\t\t\t\t// If there are no matching from-elements at the same index,\r\n\t\t\t\t// use the last one.\r\n\t\t\t\telse if (fromMatches[key][secondaryIndex]) {\r\n\t\t\t\t\tfromElement = fromMatches[key][secondaryIndex];\r\n\t\t\t\t\tfromMatches[key][secondaryIndex] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we've got a matching pair, push it to the list of pairs\r\n\t\t\tif (fromElement) {\r\n\t\t\t\tpairs.push({\r\n\t\t\t\t\tfrom: fromElement,\r\n\t\t\t\t\tto: element,\r\n\t\t\t\t\toptions: animationOptions,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a all elements within the given scope that should\r\n\t * be considered unmatched in an auto-animate transition. If\r\n\t * fading of unmatched elements is turned on, these elements\r\n\t * will fade when going between auto-animate slides.\r\n\t *\r\n\t * Note that parents of auto-animate targets are NOT considered\r\n\t * unmatched since fading them would break the auto-animation.\r\n\t *\r\n\t * @param {HTMLElement} rootElement\r\n\t * @return {Array}\r\n\t */\r\n\tgetUnmatchedAutoAnimateElements(rootElement) {\r\n\t\treturn [].slice.call(rootElement.children).reduce((result, element) => {\r\n\t\t\tconst containsAnimatedElements = element.querySelector(\r\n\t\t\t\t\"[data-auto-animate-target]\",\r\n\t\t\t);\r\n\r\n\t\t\t// The element is unmatched if\r\n\t\t\t// - It is not an auto-animate target\r\n\t\t\t// - It does not contain any auto-animate targets\r\n\t\t\tif (\r\n\t\t\t\t!element.hasAttribute(\"data-auto-animate-target\") &&\r\n\t\t\t\t!containsAnimatedElements\r\n\t\t\t) {\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif (element.querySelector(\"[data-auto-animate-target]\")) {\r\n\t\t\t\tresult = result.concat(this.getUnmatchedAutoAnimateElements(element));\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}, []);\r\n\t}\r\n}\r\n","/**\r\n * Converts various color input formats to an {r:0,g:0,b:0} object.\r\n *\r\n * @param {string} color The string representation of a color\r\n * @example\r\n * colorToRgb('#000');\r\n * @example\r\n * colorToRgb('#000000');\r\n * @example\r\n * colorToRgb('rgb(0,0,0)');\r\n * @example\r\n * colorToRgb('rgba(0,0,0)');\r\n *\r\n * @return {{r: number, g: number, b: number, [a]: number}|null}\r\n */\r\nexport const colorToRgb = (color) => {\r\n\tlet hex3 = color.match(/^#([0-9a-f]{3})$/i);\r\n\tif (hex3?.[1]) {\r\n\t\thex3 = hex3[1];\r\n\t\treturn {\r\n\t\t\tr: Number.parseInt(hex3.charAt(0), 16) * 0x11,\r\n\t\t\tg: Number.parseInt(hex3.charAt(1), 16) * 0x11,\r\n\t\t\tb: Number.parseInt(hex3.charAt(2), 16) * 0x11,\r\n\t\t};\r\n\t}\r\n\r\n\tlet hex6 = color.match(/^#([0-9a-f]{6})$/i);\r\n\tif (hex6?.[1]) {\r\n\t\thex6 = hex6[1];\r\n\t\treturn {\r\n\t\t\tr: Number.parseInt(hex6.slice(0, 2), 16),\r\n\t\t\tg: Number.parseInt(hex6.slice(2, 4), 16),\r\n\t\t\tb: Number.parseInt(hex6.slice(4, 6), 16),\r\n\t\t};\r\n\t}\r\n\r\n\tconst rgb = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n\tif (rgb) {\r\n\t\treturn {\r\n\t\t\tr: Number.parseInt(rgb[1], 10),\r\n\t\t\tg: Number.parseInt(rgb[2], 10),\r\n\t\t\tb: Number.parseInt(rgb[3], 10),\r\n\t\t};\r\n\t}\r\n\r\n\tconst rgba = color.match(\r\n\t\t/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i,\r\n\t);\r\n\tif (rgba) {\r\n\t\treturn {\r\n\t\t\tr: Number.parseInt(rgba[1], 10),\r\n\t\t\tg: Number.parseInt(rgba[2], 10),\r\n\t\t\tb: Number.parseInt(rgba[3], 10),\r\n\t\t\ta: Number.parseFloat(rgba[4]),\r\n\t\t};\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Calculates brightness on a scale of 0-255.\r\n *\r\n * @param {string} color See colorToRgb for supported formats.\r\n * @see {@link colorToRgb}\r\n */\r\nexport const colorBrightness = (color) => {\r\n\tif (typeof color === \"string\") color = colorToRgb(color);\r\n\r\n\tif (color) {\r\n\t\treturn (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n","import { colorBrightness, colorToRgb } from \"../utils/color.js\";\r\nimport { queryAll } from \"../utils/util.js\";\r\n\r\n/**\r\n * Creates and updates slide backgrounds.\r\n */\r\nexport default class Backgrounds {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.className = \"backgrounds\";\r\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the slide background elements and appends them\r\n\t * to the background container. One element is created per\r\n\t * slide no matter if the given slide has visible background.\r\n\t */\r\n\tcreate() {\r\n\t\t// Clear prior backgrounds\r\n\t\tthis.element.innerHTML = \"\";\r\n\t\tthis.element.classList.add(\"no-transition\");\r\n\r\n\t\t// Iterate over all horizontal slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach((slideh) => {\r\n\t\t\tconst backgroundStack = this.createBackground(slideh, this.element);\r\n\r\n\t\t\t// Iterate over all vertical slides\r\n\t\t\tqueryAll(slideh, \"section\").forEach((slidev) => {\r\n\t\t\t\tthis.createBackground(slidev, backgroundStack);\r\n\r\n\t\t\t\tbackgroundStack.classList.add(\"stack\");\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Add parallax background if specified\r\n\t\tif (this.Reveal.getConfig().parallaxBackgroundImage) {\r\n\t\t\tthis.element.style.backgroundImage = `url(\"${\r\n\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundImage\r\n\t\t\t}\")`;\r\n\t\t\tthis.element.style.backgroundSize =\r\n\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundSize;\r\n\t\t\tthis.element.style.backgroundRepeat =\r\n\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundRepeat;\r\n\t\t\tthis.element.style.backgroundPosition =\r\n\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundPosition;\r\n\r\n\t\t\t// Make sure the below properties are set on the element - these properties are\r\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\r\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\r\n\t\t\t// these properties after short time delay\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.add(\"has-parallax-background\");\r\n\t\t\t}, 1);\r\n\t\t} else {\r\n\t\t\tthis.element.style.backgroundImage = \"\";\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\r\n\t\t\t\t\"has-parallax-background\",\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background for the given slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @param {HTMLElement} container The element that the background\r\n\t * should be appended to\r\n\t * @return {HTMLElement} New background div\r\n\t */\r\n\tcreateBackground(slide, container) {\r\n\t\t// Main slide background element\r\n\t\tconst element = document.createElement(\"div\");\r\n\t\telement.className = `slide-background ${slide.className.replace(\r\n\t\t\t/present|past|future/,\r\n\t\t\t\"\",\r\n\t\t)}`;\r\n\r\n\t\t// Inner background element that wraps images/videos/iframes\r\n\t\tconst contentElement = document.createElement(\"div\");\r\n\t\tcontentElement.className = \"slide-background-content\";\r\n\r\n\t\telement.appendChild(contentElement);\r\n\t\tcontainer.appendChild(element);\r\n\r\n\t\tslide.slideBackgroundElement = element;\r\n\t\tslide.slideBackgroundContentElement = contentElement;\r\n\r\n\t\t// Syncs the background to reflect all current background settings\r\n\t\tthis.sync(slide);\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all of the visual properties of a slide background\r\n\t * based on the various background attributes.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tsync(slide) {\r\n\t\tconst element = slide.slideBackgroundElement;\r\n\t\tconst contentElement = slide.slideBackgroundContentElement;\r\n\r\n\t\tconst data = {\r\n\t\t\tbackground: slide.getAttribute(\"data-background\"),\r\n\t\t\tbackgroundSize: slide.getAttribute(\"data-background-size\"),\r\n\t\t\tbackgroundImage: slide.getAttribute(\"data-background-image\"),\r\n\t\t\tbackgroundVideo: slide.getAttribute(\"data-background-video\"),\r\n\t\t\tbackgroundIframe: slide.getAttribute(\"data-background-iframe\"),\r\n\t\t\tbackgroundColor: slide.getAttribute(\"data-background-color\"),\r\n\t\t\tbackgroundGradient: slide.getAttribute(\"data-background-gradient\"),\r\n\t\t\tbackgroundRepeat: slide.getAttribute(\"data-background-repeat\"),\r\n\t\t\tbackgroundPosition: slide.getAttribute(\"data-background-position\"),\r\n\t\t\tbackgroundTransition: slide.getAttribute(\"data-background-transition\"),\r\n\t\t\tbackgroundOpacity: slide.getAttribute(\"data-background-opacity\"),\r\n\t\t};\r\n\r\n\t\tconst dataPreload = slide.hasAttribute(\"data-preload\");\r\n\r\n\t\t// Reset the prior background state in case this is not the\r\n\t\t// initial sync\r\n\t\tslide.classList.remove(\"has-dark-background\");\r\n\t\tslide.classList.remove(\"has-light-background\");\r\n\r\n\t\telement.removeAttribute(\"data-loaded\");\r\n\t\telement.removeAttribute(\"data-background-hash\");\r\n\t\telement.removeAttribute(\"data-background-size\");\r\n\t\telement.removeAttribute(\"data-background-transition\");\r\n\t\telement.style.backgroundColor = \"\";\r\n\r\n\t\tcontentElement.style.backgroundSize = \"\";\r\n\t\tcontentElement.style.backgroundRepeat = \"\";\r\n\t\tcontentElement.style.backgroundPosition = \"\";\r\n\t\tcontentElement.style.backgroundImage = \"\";\r\n\t\tcontentElement.style.opacity = \"\";\r\n\t\tcontentElement.innerHTML = \"\";\r\n\r\n\t\tif (data.background) {\r\n\t\t\t// Auto-wrap image urls in url(...)\r\n\t\t\tif (\r\n\t\t\t\t/^(http|file|\\/\\/)/gi.test(data.background) ||\r\n\t\t\t\t/\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test(data.background)\r\n\t\t\t) {\r\n\t\t\t\tslide.setAttribute(\"data-background-image\", data.background);\r\n\t\t\t} else {\r\n\t\t\t\telement.style.background = data.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create a hash for this combination of background settings.\r\n\t\t// This is used to determine when two slide backgrounds are\r\n\t\t// the same.\r\n\t\tif (\r\n\t\t\tdata.background ||\r\n\t\t\tdata.backgroundColor ||\r\n\t\t\tdata.backgroundGradient ||\r\n\t\t\tdata.backgroundImage ||\r\n\t\t\tdata.backgroundVideo ||\r\n\t\t\tdata.backgroundIframe\r\n\t\t) {\r\n\t\t\telement.setAttribute(\r\n\t\t\t\t\"data-background-hash\",\r\n\t\t\t\tdata.background +\r\n\t\t\t\t\tdata.backgroundSize +\r\n\t\t\t\t\tdata.backgroundImage +\r\n\t\t\t\t\tdata.backgroundVideo +\r\n\t\t\t\t\tdata.backgroundIframe +\r\n\t\t\t\t\tdata.backgroundColor +\r\n\t\t\t\t\tdata.backgroundGradient +\r\n\t\t\t\t\tdata.backgroundRepeat +\r\n\t\t\t\t\tdata.backgroundPosition +\r\n\t\t\t\t\tdata.backgroundTransition +\r\n\t\t\t\t\tdata.backgroundOpacity,\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Additional and optional background properties\r\n\t\tif (data.backgroundSize)\r\n\t\t\telement.setAttribute(\"data-background-size\", data.backgroundSize);\r\n\t\tif (data.backgroundColor)\r\n\t\t\telement.style.backgroundColor = data.backgroundColor;\r\n\t\tif (data.backgroundGradient)\r\n\t\t\telement.style.backgroundImage = data.backgroundGradient;\r\n\t\tif (data.backgroundTransition)\r\n\t\t\telement.setAttribute(\r\n\t\t\t\t\"data-background-transition\",\r\n\t\t\t\tdata.backgroundTransition,\r\n\t\t\t);\r\n\r\n\t\tif (dataPreload) element.setAttribute(\"data-preload\", \"\");\r\n\r\n\t\t// Background image options are set on the content wrapper\r\n\t\tif (data.backgroundSize)\r\n\t\t\tcontentElement.style.backgroundSize = data.backgroundSize;\r\n\t\tif (data.backgroundRepeat)\r\n\t\t\tcontentElement.style.backgroundRepeat = data.backgroundRepeat;\r\n\t\tif (data.backgroundPosition)\r\n\t\t\tcontentElement.style.backgroundPosition = data.backgroundPosition;\r\n\t\tif (data.backgroundOpacity)\r\n\t\t\tcontentElement.style.opacity = data.backgroundOpacity;\r\n\r\n\t\tconst contrastClass = this.getContrastClass(slide);\r\n\r\n\t\tif (typeof contrastClass === \"string\") {\r\n\t\t\tslide.classList.add(contrastClass);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a class name that can be applied to a slide to indicate\r\n\t * if it has a light or dark background.\r\n\t *\r\n\t * @param {*} slide\r\n\t *\r\n\t * @returns {string|null}\r\n\t */\r\n\tgetContrastClass(slide) {\r\n\t\tconst element = slide.slideBackgroundElement;\r\n\r\n\t\t// If this slide has a background color, we add a class that\r\n\t\t// signals if it is light or dark. If the slide has no background\r\n\t\t// color, no class will be added\r\n\t\tlet contrastColor = slide.getAttribute(\"data-background-color\");\r\n\r\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\r\n\t\tif (!contrastColor || !colorToRgb(contrastColor)) {\r\n\t\t\tconst computedBackgroundStyle = window.getComputedStyle(element);\r\n\t\t\tif (computedBackgroundStyle?.backgroundColor) {\r\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (contrastColor) {\r\n\t\t\tconst rgb = colorToRgb(contrastColor);\r\n\r\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\r\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\r\n\t\t\t// an element with no background\r\n\t\t\tif (rgb && rgb.a !== 0) {\r\n\t\t\t\tif (colorBrightness(contrastColor) < 128) {\r\n\t\t\t\t\treturn \"has-dark-background\";\r\n\t\t\t\t}\r\n\t\t\t\treturn \"has-light-background\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\r\n\t */\r\n\tbubbleSlideContrastClassToElement(slide, target) {\r\n\t\t[\"has-light-background\", \"has-dark-background\"].forEach((classToBubble) => {\r\n\t\t\tif (slide.classList.contains(classToBubble)) {\r\n\t\t\t\ttarget.classList.add(classToBubble);\r\n\t\t\t} else {\r\n\t\t\t\ttarget.classList.remove(classToBubble);\r\n\t\t\t}\r\n\t\t}, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the background elements to reflect the current\r\n\t * slide.\r\n\t *\r\n\t * @param {boolean} includeAll If true, the backgrounds of\r\n\t * all vertical slides (not just the present) will be updated.\r\n\t */\r\n\tupdate(includeAll = false) {\r\n\t\tconst currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tlet currentBackground = null;\r\n\r\n\t\t// Reverse past/future classes when in RTL mode\r\n\t\tconst horizontalPast = this.Reveal.getConfig().rtl ? \"future\" : \"past\";\r\n\t\tconst horizontalFuture = this.Reveal.getConfig().rtl ? \"past\" : \"future\";\r\n\r\n\t\t// Update the classes of all backgrounds to match the\r\n\t\t// states of their slides (past/present/future)\r\n\t\tArray.from(this.element.childNodes).forEach((backgroundh, h) => {\r\n\t\t\tbackgroundh.classList.remove(\"past\", \"present\", \"future\");\r\n\r\n\t\t\tif (h < indices.h) {\r\n\t\t\t\tbackgroundh.classList.add(horizontalPast);\r\n\t\t\t} else if (h > indices.h) {\r\n\t\t\t\tbackgroundh.classList.add(horizontalFuture);\r\n\t\t\t} else {\r\n\t\t\t\tbackgroundh.classList.add(\"present\");\r\n\r\n\t\t\t\t// Store a reference to the current background element\r\n\t\t\t\tcurrentBackground = backgroundh;\r\n\t\t\t}\r\n\r\n\t\t\tif (includeAll || h === indices.h) {\r\n\t\t\t\tqueryAll(backgroundh, \".slide-background\").forEach((backgroundv, v) => {\r\n\t\t\t\t\tbackgroundv.classList.remove(\"past\", \"present\", \"future\");\r\n\r\n\t\t\t\t\tconst indexv = typeof indices.v === \"number\" ? indices.v : 0;\r\n\r\n\t\t\t\t\tif (v < indexv) {\r\n\t\t\t\t\t\tbackgroundv.classList.add(\"past\");\r\n\t\t\t\t\t} else if (v > indexv) {\r\n\t\t\t\t\t\tbackgroundv.classList.add(\"future\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackgroundv.classList.add(\"present\");\r\n\r\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\r\n\t\t\t\t\t\tif (h === indices.h) currentBackground = backgroundv;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Stop content inside of previous backgrounds\r\n\t\tif (this.previousBackground) {\r\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent(this.previousBackground, {\r\n\t\t\t\tunloadIframes: !this.Reveal.slideContent.shouldPreload(\r\n\t\t\t\t\tthis.previousBackground,\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Start content in the current background\r\n\t\tif (currentBackground) {\r\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent(currentBackground);\r\n\r\n\t\t\tconst currentBackgroundContent = currentBackground.querySelector(\r\n\t\t\t\t\".slide-background-content\",\r\n\t\t\t);\r\n\t\t\tif (currentBackgroundContent) {\r\n\t\t\t\tconst backgroundImageURL =\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage || \"\";\r\n\r\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\r\n\t\t\t\tif (/\\.gif/i.test(backgroundImageURL)) {\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = \"\";\r\n\t\t\t\t\twindow.getComputedStyle(currentBackgroundContent).opacity;\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Don't transition between identical backgrounds. This\r\n\t\t\t// prevents unwanted flicker.\r\n\t\t\tconst previousBackgroundHash = this.previousBackground\r\n\t\t\t\t? this.previousBackground.getAttribute(\"data-background-hash\")\r\n\t\t\t\t: null;\r\n\t\t\tconst currentBackgroundHash = currentBackground.getAttribute(\r\n\t\t\t\t\"data-background-hash\",\r\n\t\t\t);\r\n\t\t\tif (\r\n\t\t\t\tcurrentBackgroundHash &&\r\n\t\t\t\tcurrentBackgroundHash === previousBackgroundHash &&\r\n\t\t\t\tcurrentBackground !== this.previousBackground\r\n\t\t\t) {\r\n\t\t\t\tthis.element.classList.add(\"no-transition\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousBackground = currentBackground;\r\n\t\t}\r\n\r\n\t\t// If there's a background brightness flag for this slide,\r\n\t\t// bubble it to the .reveal container\r\n\t\tif (currentSlide) {\r\n\t\t\tthis.bubbleSlideContrastClassToElement(\r\n\t\t\t\tcurrentSlide,\r\n\t\t\t\tthis.Reveal.getRevealElement(),\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Allow the first background to apply without transition\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.element.classList.remove(\"no-transition\");\r\n\t\t}, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the position of the parallax background based\r\n\t * on the current slide index.\r\n\t */\r\n\tupdateParallax() {\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tif (this.Reveal.getConfig().parallaxBackgroundImage) {\r\n\t\t\tconst horizontalSlides = this.Reveal.getHorizontalSlides();\r\n\t\t\tconst verticalSlides = this.Reveal.getVerticalSlides();\r\n\r\n\t\t\tconst backgroundSize = this.element.style.backgroundSize.split(\" \");\r\n\t\t\tlet backgroundWidth;\r\n\t\t\tlet backgroundHeight;\r\n\r\n\t\t\tif (backgroundSize.length === 1) {\r\n\t\t\t\tbackgroundWidth = backgroundHeight = Number.parseInt(\r\n\t\t\t\t\tbackgroundSize[0],\r\n\t\t\t\t\t10,\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tbackgroundWidth = Number.parseInt(backgroundSize[0], 10);\r\n\t\t\t\tbackgroundHeight = Number.parseInt(backgroundSize[1], 10);\r\n\t\t\t}\r\n\r\n\t\t\tconst slideWidth = this.element.offsetWidth;\r\n\t\t\tconst horizontalSlideCount = horizontalSlides.length;\r\n\t\t\tlet horizontalOffsetMultiplier;\r\n\t\t\tlet horizontalOffset;\r\n\r\n\t\t\tif (\r\n\t\t\t\ttypeof this.Reveal.getConfig().parallaxBackgroundHorizontal === \"number\"\r\n\t\t\t) {\r\n\t\t\t\thorizontalOffsetMultiplier =\r\n\t\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundHorizontal;\r\n\t\t\t} else {\r\n\t\t\t\thorizontalOffsetMultiplier =\r\n\t\t\t\t\thorizontalSlideCount > 1\r\n\t\t\t\t\t\t? (backgroundWidth - slideWidth) / (horizontalSlideCount - 1)\r\n\t\t\t\t\t\t: 0;\r\n\t\t\t}\r\n\r\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\r\n\r\n\t\t\tconst slideHeight = this.element.offsetHeight;\r\n\t\t\tconst verticalSlideCount = verticalSlides.length;\r\n\t\t\tlet verticalOffsetMultiplier;\r\n\t\t\tlet verticalOffset;\r\n\r\n\t\t\tif (\r\n\t\t\t\ttypeof this.Reveal.getConfig().parallaxBackgroundVertical === \"number\"\r\n\t\t\t) {\r\n\t\t\t\tverticalOffsetMultiplier =\r\n\t\t\t\t\tthis.Reveal.getConfig().parallaxBackgroundVertical;\r\n\t\t\t} else {\r\n\t\t\t\tverticalOffsetMultiplier =\r\n\t\t\t\t\t(backgroundHeight - slideHeight) / (verticalSlideCount - 1);\r\n\t\t\t}\r\n\r\n\t\t\tverticalOffset =\r\n\t\t\t\tverticalSlideCount > 0 ? verticalOffsetMultiplier * indices.v : 0;\r\n\r\n\t\t\tthis.element.style.backgroundPosition = `${horizontalOffset}px ${-verticalOffset}px`;\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.element.remove();\r\n\t}\r\n}\r\n","const UA = navigator.userAgent;\n\nexport const isMobile =\n\t/(iphone|ipod|ipad|android)/gi.test(UA) ||\n\t(navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1); // iPadOS\n\nexport const isChrome = /chrome/i.test(UA) && !/edge/i.test(UA);\n\nexport const isAndroid = /android/gi.test(UA);\n","import { isAndroid } from \"../utils/device.js\";\r\nimport { queryAll } from \"../utils/util.js\";\r\n\r\n/**\r\n * Manages our presentation controls. This includes both\r\n * the built-in control arrows as well as event monitoring\r\n * of any elements within the presentation with either of the\r\n * following helper classes:\r\n * - .navigate-up\r\n * - .navigate-right\r\n * - .navigate-down\r\n * - .navigate-left\r\n * - .navigate-next\r\n * - .navigate-prev\r\n */\r\nexport default class Controls {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind(this);\r\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind(this);\r\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind(this);\r\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind(this);\r\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind(this);\r\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind(this);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst rtl = this.Reveal.getConfig().rtl;\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tthis.element = document.createElement(\"aside\");\r\n\t\tthis.element.className = \"controls\";\r\n\t\tthis.element.innerHTML = `<button class=\"navigate-left\" aria-label=\"${\r\n\t\t\trtl ? \"next slide\" : \"previous slide\"\r\n\t\t}\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-right\" aria-label=\"${\r\n\t\t\t\trtl ? \"previous slide\" : \"next slide\"\r\n\t\t\t}\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\r\n\r\n\t\t// There can be multiple instances of controls throughout the page\r\n\t\tthis.controlsLeft = queryAll(revealElement, \".navigate-left\");\r\n\t\tthis.controlsRight = queryAll(revealElement, \".navigate-right\");\r\n\t\tthis.controlsUp = queryAll(revealElement, \".navigate-up\");\r\n\t\tthis.controlsDown = queryAll(revealElement, \".navigate-down\");\r\n\t\tthis.controlsPrev = queryAll(revealElement, \".navigate-prev\");\r\n\t\tthis.controlsNext = queryAll(revealElement, \".navigate-next\");\r\n\r\n\t\t// The left, right and down arrows in the standard reveal.js controls\r\n\t\tthis.controlsRightArrow = this.element.querySelector(\".navigate-right\");\r\n\t\tthis.controlsLeftArrow = this.element.querySelector(\".navigate-left\");\r\n\t\tthis.controlsDownArrow = this.element.querySelector(\".navigate-down\");\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tthis.element.style.display = config.controls ? \"block\" : \"none\";\r\n\r\n\t\tthis.element.setAttribute(\"data-controls-layout\", config.controlsLayout);\r\n\t\tthis.element.setAttribute(\r\n\t\t\t\"data-controls-back-arrows\",\r\n\t\t\tconfig.controlsBackArrows,\r\n\t\t);\r\n\t}\r\n\r\n\tbind() {\r\n\t\t// Listen to both touch and click events, in case the device\r\n\t\t// supports both\r\n\t\tlet pointerEvents = [\"touchstart\", \"click\"];\r\n\r\n\t\t// Only support touch for Android, fixes double navigations in\r\n\t\t// stock browser\r\n\t\tif (isAndroid) {\r\n\t\t\tpointerEvents = [\"touchstart\"];\r\n\t\t}\r\n\r\n\t\tpointerEvents.forEach((eventName) => {\r\n\t\t\tthis.controlsLeft.forEach((el) =>\r\n\t\t\t\tel.addEventListener(eventName, this.onNavigateLeftClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsRight.forEach((el) =>\r\n\t\t\t\tel.addEventListener(eventName, this.onNavigateRightClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsUp.forEach((el) =>\r\n\t\t\t\tel.addEventListener(eventName, this.onNavigateUpClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsDown.forEach((el) =>\r\n\t\t\t\tel.addEventListener(eventName, this.onNavigateDownClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsPrev.forEach((el) =>\r\n\t\t\t\tel.addEventListener(eventName, this.onNavigatePrevClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsNext.forEach((el) =>\r\n\t\t\t\tel.addEventListener(eventName, this.onNavigateNextClicked, false),\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tunbind() {\r\n\t\t[\"touchstart\", \"click\"].forEach((eventName) => {\r\n\t\t\tthis.controlsLeft.forEach((el) =>\r\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateLeftClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsRight.forEach((el) =>\r\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateRightClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsUp.forEach((el) =>\r\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateUpClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsDown.forEach((el) =>\r\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateDownClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsPrev.forEach((el) =>\r\n\t\t\t\tel.removeEventListener(eventName, this.onNavigatePrevClicked, false),\r\n\t\t\t);\r\n\t\t\tthis.controlsNext.forEach((el) =>\r\n\t\t\t\tel.removeEventListener(eventName, this.onNavigateNextClicked, false),\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of all control/navigation arrows.\r\n\t */\r\n\tupdate() {\r\n\t\tconst routes = this.Reveal.availableRoutes();\r\n\r\n\t\t// Remove the 'enabled' class from all directions\r\n\t\t[\r\n\t\t\t...this.controlsLeft,\r\n\t\t\t...this.controlsRight,\r\n\t\t\t...this.controlsUp,\r\n\t\t\t...this.controlsDown,\r\n\t\t\t...this.controlsPrev,\r\n\t\t\t...this.controlsNext,\r\n\t\t].forEach((node) => {\r\n\t\t\tnode.classList.remove(\"enabled\", \"fragmented\");\r\n\r\n\t\t\t// Set 'disabled' attribute on all directions\r\n\t\t\tnode.setAttribute(\"disabled\", \"disabled\");\r\n\t\t});\r\n\r\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\r\n\t\tif (routes.left)\r\n\t\t\tthis.controlsLeft.forEach((el) => {\r\n\t\t\t\tel.classList.add(\"enabled\");\r\n\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t});\r\n\t\tif (routes.right)\r\n\t\t\tthis.controlsRight.forEach((el) => {\r\n\t\t\t\tel.classList.add(\"enabled\");\r\n\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t});\r\n\t\tif (routes.up)\r\n\t\t\tthis.controlsUp.forEach((el) => {\r\n\t\t\t\tel.classList.add(\"enabled\");\r\n\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t});\r\n\t\tif (routes.down)\r\n\t\t\tthis.controlsDown.forEach((el) => {\r\n\t\t\t\tel.classList.add(\"enabled\");\r\n\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t});\r\n\r\n\t\t// Prev/next buttons\r\n\t\tif (routes.left || routes.up)\r\n\t\t\tthis.controlsPrev.forEach((el) => {\r\n\t\t\t\tel.classList.add(\"enabled\");\r\n\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t});\r\n\t\tif (routes.right || routes.down)\r\n\t\t\tthis.controlsNext.forEach((el) => {\r\n\t\t\t\tel.classList.add(\"enabled\");\r\n\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t});\r\n\r\n\t\t// Highlight fragment directions\r\n\t\tconst currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif (currentSlide) {\r\n\t\t\tconst fragmentsRoutes = this.Reveal.fragments.availableRoutes();\r\n\r\n\t\t\t// Always apply fragment decorator to prev/next buttons\r\n\t\t\tif (fragmentsRoutes.prev)\r\n\t\t\t\tthis.controlsPrev.forEach((el) => {\r\n\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\r\n\t\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t\t});\r\n\t\t\tif (fragmentsRoutes.next)\r\n\t\t\t\tthis.controlsNext.forEach((el) => {\r\n\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\r\n\t\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t\t});\r\n\r\n\t\t\t// Apply fragment decorators to directional buttons based on\r\n\t\t\t// what slide axis they are in\r\n\t\t\tif (this.Reveal.isVerticalSlide(currentSlide)) {\r\n\t\t\t\tif (fragmentsRoutes.prev)\r\n\t\t\t\t\tthis.controlsUp.forEach((el) => {\r\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\r\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t\t\t});\r\n\t\t\t\tif (fragmentsRoutes.next)\r\n\t\t\t\t\tthis.controlsDown.forEach((el) => {\r\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\r\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (fragmentsRoutes.prev)\r\n\t\t\t\t\tthis.controlsLeft.forEach((el) => {\r\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\r\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t\t\t});\r\n\t\t\t\tif (fragmentsRoutes.next)\r\n\t\t\t\t\tthis.controlsRight.forEach((el) => {\r\n\t\t\t\t\t\tel.classList.add(\"fragmented\", \"enabled\");\r\n\t\t\t\t\t\tel.removeAttribute(\"disabled\");\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.Reveal.getConfig().controlsTutorial) {\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Highlight control arrows with an animation to ensure\r\n\t\t\t// that the viewer knows how to navigate\r\n\t\t\tif (!this.Reveal.hasNavigatedVertically() && routes.down) {\r\n\t\t\t\tthis.controlsDownArrow.classList.add(\"highlight\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.controlsDownArrow.classList.remove(\"highlight\");\r\n\r\n\t\t\t\tif (this.Reveal.getConfig().rtl) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!this.Reveal.hasNavigatedHorizontally() &&\r\n\t\t\t\t\t\troutes.left &&\r\n\t\t\t\t\t\tindices.v === 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add(\"highlight\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove(\"highlight\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!this.Reveal.hasNavigatedHorizontally() &&\r\n\t\t\t\t\t\troutes.right &&\r\n\t\t\t\t\t\tindices.v === 0\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add(\"highlight\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove(\"highlight\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.unbind();\r\n\t\tthis.element.remove();\r\n\t}\r\n\r\n\t/**\r\n\t * Event handlers for navigation control buttons.\r\n\t */\r\n\tonNavigateLeftClicked(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif (this.Reveal.getConfig().navigationMode === \"linear\") {\r\n\t\t\tthis.Reveal.prev();\r\n\t\t} else {\r\n\t\t\tthis.Reveal.left();\r\n\t\t}\r\n\t}\r\n\r\n\tonNavigateRightClicked(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif (this.Reveal.getConfig().navigationMode === \"linear\") {\r\n\t\t\tthis.Reveal.next();\r\n\t\t} else {\r\n\t\t\tthis.Reveal.right();\r\n\t\t}\r\n\t}\r\n\r\n\tonNavigateUpClicked(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.up();\r\n\t}\r\n\r\n\tonNavigateDownClicked(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.down();\r\n\t}\r\n\r\n\tonNavigatePrevClicked(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.prev();\r\n\t}\r\n\r\n\tonNavigateNextClicked(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.next();\r\n\t}\r\n}\r\n","import { closest } from \"../utils/util.js\";\r\n\r\n/**\r\n * Manages focus when a presentation is embedded. This\r\n * helps us only capture keyboard from the presentation\r\n * a user is currently interacting with in a page where\r\n * multiple presentations are embedded.\r\n */\r\n\r\nconst STATE_FOCUS = \"focus\";\r\nconst STATE_BLUR = \"blur\";\r\n\r\nexport default class Focus {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind(this);\r\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tif (config.embedded) {\r\n\t\t\tthis.blur();\r\n\t\t} else {\r\n\t\t\tthis.focus();\r\n\t\t\tthis.unbind();\r\n\t\t}\r\n\t}\r\n\r\n\tbind() {\r\n\t\tif (this.Reveal.getConfig().embedded) {\r\n\t\t\tthis.Reveal.getRevealElement().addEventListener(\r\n\t\t\t\t\"pointerdown\",\r\n\t\t\t\tthis.onRevealPointerDown,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tunbind() {\r\n\t\tthis.Reveal.getRevealElement().removeEventListener(\r\n\t\t\t\"pointerdown\",\r\n\t\t\tthis.onRevealPointerDown,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t\tdocument.removeEventListener(\r\n\t\t\t\"pointerdown\",\r\n\t\t\tthis.onDocumentPointerDown,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t}\r\n\r\n\tfocus() {\r\n\t\tif (this.state !== STATE_FOCUS) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"focused\");\r\n\t\t\tdocument.addEventListener(\r\n\t\t\t\t\"pointerdown\",\r\n\t\t\t\tthis.onDocumentPointerDown,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_FOCUS;\r\n\t}\r\n\r\n\tblur() {\r\n\t\tif (this.state !== STATE_BLUR) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\"focused\");\r\n\t\t\tdocument.removeEventListener(\r\n\t\t\t\t\"pointerdown\",\r\n\t\t\t\tthis.onDocumentPointerDown,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_BLUR;\r\n\t}\r\n\r\n\tisFocused() {\r\n\t\treturn this.state === STATE_FOCUS;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.Reveal.getRevealElement().classList.remove(\"focused\");\r\n\t}\r\n\r\n\tonRevealPointerDown(event) {\r\n\t\tthis.focus();\r\n\t}\r\n\r\n\tonDocumentPointerDown(event) {\r\n\t\tconst revealElement = closest(event.target, \".reveal\");\r\n\t\tif (!revealElement || revealElement !== this.Reveal.getRevealElement()) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t}\r\n}\r\n","import { extend, queryAll } from \"../utils/util.js\";\r\n\r\n/**\r\n * Handles sorting and navigation of slide fragments.\r\n * Fragments are elements within a slide that are\r\n * revealed/animated incrementally.\r\n */\r\nexport default class Fragments {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tif (config.fragments === false) {\r\n\t\t\tthis.disable();\r\n\t\t} else if (oldConfig.fragments === false) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If fragments are disabled in the deck, they should all be\r\n\t * visible rather than stepped through.\r\n\t */\r\n\tdisable() {\r\n\t\tqueryAll(this.Reveal.getSlidesElement(), \".fragment\").forEach((element) => {\r\n\t\t\telement.classList.add(\"visible\");\r\n\t\t\telement.classList.remove(\"current-fragment\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse of #disable(). Only called if fragments have\r\n\t * previously been disabled.\r\n\t */\r\n\tenable() {\r\n\t\tqueryAll(this.Reveal.getSlidesElement(), \".fragment\").forEach((element) => {\r\n\t\t\telement.classList.remove(\"visible\");\r\n\t\t\telement.classList.remove(\"current-fragment\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object describing the available fragment\r\n\t * directions.\r\n\t *\r\n\t * @return {{prev: boolean, next: boolean}}\r\n\t */\r\n\tavailableRoutes() {\r\n\t\tconst currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif (currentSlide && this.Reveal.getConfig().fragments) {\r\n\t\t\tconst fragments = currentSlide.querySelectorAll(\r\n\t\t\t\t\".fragment:not(.disabled)\",\r\n\t\t\t);\r\n\t\t\tconst hiddenFragments = currentSlide.querySelectorAll(\r\n\t\t\t\t\".fragment:not(.disabled):not(.visible)\",\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\r\n\t\t\t\tnext: !!hiddenFragments.length,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn { prev: false, next: false };\r\n\t}\r\n\r\n\t/**\r\n\t * Return a sorted fragments list, ordered by an increasing\r\n\t * \"data-fragment-index\" attribute.\r\n\t *\r\n\t * Fragments will be revealed in the order that they are returned by\r\n\t * this function, so you can use the index attributes to control the\r\n\t * order of fragment appearance.\r\n\t *\r\n\t * To maintain a sensible default fragment order, fragments are presumed\r\n\t * to be passed in document order. This function adds a \"fragment-index\"\r\n\t * attribute to each node if such an attribute is not already present,\r\n\t * and sets that attribute to an integer value which is the position of\r\n\t * the fragment within the fragments list.\r\n\t *\r\n\t * @param {object[]|*} fragments\r\n\t * @param {boolean} grouped If true the returned array will contain\r\n\t * nested arrays for all fragments with the same index\r\n\t * @return {object[]} sorted Sorted array of fragments\r\n\t */\r\n\tsort(fragments, grouped = false) {\r\n\t\tfragments = Array.from(fragments);\r\n\r\n\t\tlet ordered = [];\r\n\t\tconst unordered = [];\r\n\t\tconst sorted = [];\r\n\r\n\t\t// Group ordered and unordered elements\r\n\t\tfragments.forEach((fragment) => {\r\n\t\t\tif (fragment.hasAttribute(\"data-fragment-index\")) {\r\n\t\t\t\tconst index = Number.parseInt(\r\n\t\t\t\t\tfragment.getAttribute(\"data-fragment-index\"),\r\n\t\t\t\t\t10,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (!ordered[index]) {\r\n\t\t\t\t\tordered[index] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tordered[index].push(fragment);\r\n\t\t\t} else {\r\n\t\t\t\tunordered.push([fragment]);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Append fragments without explicit indices in their\r\n\t\t// DOM order\r\n\t\tordered = ordered.concat(unordered);\r\n\r\n\t\t// Manually count the index up per group to ensure there\r\n\t\t// are no gaps\r\n\t\tlet index = 0;\r\n\r\n\t\t// Push all fragments in their sorted order to an array,\r\n\t\t// this flattens the groups\r\n\t\tordered.forEach((group) => {\r\n\t\t\tgroup.forEach((fragment) => {\r\n\t\t\t\tsorted.push(fragment);\r\n\t\t\t\tfragment.setAttribute(\"data-fragment-index\", index);\r\n\t\t\t});\r\n\r\n\t\t\tindex++;\r\n\t\t});\r\n\r\n\t\treturn grouped === true ? ordered : sorted;\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts and formats all of fragments in the\r\n\t * presentation.\r\n\t */\r\n\tsortAll() {\r\n\t\tthis.Reveal.getHorizontalSlides().forEach((horizontalSlide) => {\r\n\t\t\tconst verticalSlides = queryAll(horizontalSlide, \"section\");\r\n\t\t\tverticalSlides.forEach((verticalSlide, y) => {\r\n\t\t\t\tthis.sort(verticalSlide.querySelectorAll(\".fragment\"));\r\n\t\t\t}, this);\r\n\r\n\t\t\tif (verticalSlides.length === 0)\r\n\t\t\t\tthis.sort(horizontalSlide.querySelectorAll(\".fragment\"));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the fragments on the current slide so that they\r\n\t * have the appropriate classes (.visible + .current-fragment).\r\n\t *\r\n\t * @param {number} [index] The index of the current fragment\r\n\t * @param {array} [fragments] Array containing all fragments\r\n\t * in the current slide\r\n\t *\r\n\t * @return {{shown: array, hidden: array}}\r\n\t */\r\n\tupdate(index, fragments, slide = this.Reveal.getCurrentSlide()) {\r\n\t\tconst changedFragments = {\r\n\t\t\tshown: [],\r\n\t\t\thidden: [],\r\n\t\t};\r\n\r\n\t\tif (slide && this.Reveal.getConfig().fragments) {\r\n\t\t\tfragments = fragments || this.sort(slide.querySelectorAll(\".fragment\"));\r\n\r\n\t\t\tif (fragments.length) {\r\n\t\t\t\tlet maxIndex = 0;\r\n\r\n\t\t\t\tif (typeof index !== \"number\") {\r\n\t\t\t\t\tconst currentFragment = this.sort(\r\n\t\t\t\t\t\tslide.querySelectorAll(\".fragment.visible\"),\r\n\t\t\t\t\t).pop();\r\n\t\t\t\t\tif (currentFragment) {\r\n\t\t\t\t\t\tindex = Number.parseInt(\r\n\t\t\t\t\t\t\tcurrentFragment.getAttribute(\"data-fragment-index\") || 0,\r\n\t\t\t\t\t\t\t10,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.from(fragments).forEach((el, i) => {\r\n\t\t\t\t\tif (el.hasAttribute(\"data-fragment-index\")) {\r\n\t\t\t\t\t\ti = Number.parseInt(el.getAttribute(\"data-fragment-index\"), 10);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxIndex = Math.max(maxIndex, i);\r\n\r\n\t\t\t\t\t// Visible fragments\r\n\t\t\t\t\tif (i <= index) {\r\n\t\t\t\t\t\tconst wasVisible = el.classList.contains(\"visible\");\r\n\t\t\t\t\t\tel.classList.add(\"visible\");\r\n\t\t\t\t\t\tel.classList.remove(\"current-fragment\");\r\n\r\n\t\t\t\t\t\tif (i === index) {\r\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\r\n\t\t\t\t\t\t\tthis.Reveal.announceStatus(this.Reveal.getStatusText(el));\r\n\r\n\t\t\t\t\t\t\tel.classList.add(\"current-fragment\");\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent(el);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!wasVisible) {\r\n\t\t\t\t\t\t\tchangedFragments.shown.push(el);\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: \"visible\",\r\n\t\t\t\t\t\t\t\tbubbles: false,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Hidden fragments\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst wasVisible = el.classList.contains(\"visible\");\r\n\t\t\t\t\t\tel.classList.remove(\"visible\");\r\n\t\t\t\t\t\tel.classList.remove(\"current-fragment\");\r\n\r\n\t\t\t\t\t\tif (wasVisible) {\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent(el);\r\n\t\t\t\t\t\t\tchangedFragments.hidden.push(el);\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: \"hidden\",\r\n\t\t\t\t\t\t\t\tbubbles: false,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Write the current fragment index to the slide <section>.\r\n\t\t\t\t// This can be used by end users to apply styles based on\r\n\t\t\t\t// the current fragment index.\r\n\t\t\t\tindex = typeof index === \"number\" ? index : -1;\r\n\t\t\t\tindex = Math.max(Math.min(index, maxIndex), -1);\r\n\t\t\t\tslide.setAttribute(\"data-fragment\", index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changedFragments;\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the fragments on the given slide so that they have\r\n\t * valid indices. Call this if fragments are changed in the DOM\r\n\t * after reveal.js has already initialized.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @return {Array} a list of the HTML fragments that were synced\r\n\t */\r\n\tsync(slide = this.Reveal.getCurrentSlide()) {\r\n\t\treturn this.sort(slide.querySelectorAll(\".fragment\"));\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the specified slide fragment.\r\n\t *\r\n\t * @param {?number} index The index of the fragment that\r\n\t * should be shown, -1 means all are invisible\r\n\t * @param {number} offset Integer offset to apply to the\r\n\t * fragment index\r\n\t *\r\n\t * @return {boolean} true if a change was made in any\r\n\t * fragments visibility as part of this call\r\n\t */\r\n\tgoto(index, offset = 0) {\r\n\t\tconst currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif (currentSlide && this.Reveal.getConfig().fragments) {\r\n\t\t\tconst fragments = this.sort(\r\n\t\t\t\tcurrentSlide.querySelectorAll(\".fragment:not(.disabled)\"),\r\n\t\t\t);\r\n\t\t\tif (fragments.length) {\r\n\t\t\t\t// If no index is specified, find the current\r\n\t\t\t\tif (typeof index !== \"number\") {\r\n\t\t\t\t\tconst lastVisibleFragment = this.sort(\r\n\t\t\t\t\t\tcurrentSlide.querySelectorAll(\".fragment:not(.disabled).visible\"),\r\n\t\t\t\t\t).pop();\r\n\r\n\t\t\t\t\tif (lastVisibleFragment) {\r\n\t\t\t\t\t\tindex = Number.parseInt(\r\n\t\t\t\t\t\t\tlastVisibleFragment.getAttribute(\"data-fragment-index\") || 0,\r\n\t\t\t\t\t\t\t10,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply the offset if there is one\r\n\t\t\t\tindex += offset;\r\n\r\n\t\t\t\tconst changedFragments = this.update(index, fragments);\r\n\r\n\t\t\t\tif (changedFragments.hidden.length) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: \"fragmenthidden\",\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.hidden,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changedFragments.shown.length) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: \"fragmentshown\",\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.shown,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.Reveal.controls.update();\r\n\t\t\t\tthis.Reveal.progress.update();\r\n\r\n\t\t\t\tif (this.Reveal.getConfig().fragmentInURL) {\r\n\t\t\t\t\tthis.Reveal.location.writeURL();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn !!(\r\n\t\t\t\t\tchangedFragments.shown.length || changedFragments.hidden.length\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the next slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a next fragment,\r\n\t * false otherwise\r\n\t */\r\n\tnext() {\r\n\t\treturn this.goto(null, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the previous slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a previous fragment,\r\n\t * false otherwise\r\n\t */\r\n\tprev() {\r\n\t\treturn this.goto(null, -1);\r\n\t}\r\n}\r\n","import {\r\n\tSLIDE_NUMBER_FORMAT_CURRENT,\r\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\r\n} from \"../utils/constants\";\r\n\r\n/**\r\n * Makes it possible to jump to a slide by entering its\r\n * slide number or id.\r\n */\r\nexport default class JumpToSlide {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onInput = this.onInput.bind(this);\r\n\t\tthis.onBlur = this.onBlur.bind(this);\r\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.className = \"jump-to-slide\";\r\n\r\n\t\tthis.jumpInput = document.createElement(\"input\");\r\n\t\tthis.jumpInput.type = \"text\";\r\n\t\tthis.jumpInput.className = \"jump-to-slide-input\";\r\n\t\tthis.jumpInput.placeholder = \"Jump to slide\";\r\n\t\tthis.jumpInput.addEventListener(\"input\", this.onInput);\r\n\t\tthis.jumpInput.addEventListener(\"keydown\", this.onKeyDown);\r\n\t\tthis.jumpInput.addEventListener(\"blur\", this.onBlur);\r\n\r\n\t\tthis.element.appendChild(this.jumpInput);\r\n\t}\r\n\r\n\tshow() {\r\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\r\n\t\tthis.jumpInput.focus();\r\n\t}\r\n\r\n\thide() {\r\n\t\tif (this.isVisible()) {\r\n\t\t\tthis.element.remove();\r\n\t\t\tthis.jumpInput.value = \"\";\r\n\r\n\t\t\tclearTimeout(this.jumpTimeout);\r\n\t\t\tthis.jumpTimeout = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tisVisible() {\r\n\t\treturn !!this.element.parentNode;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the current input and jumps to the given slide.\r\n\t */\r\n\tjump() {\r\n\t\tclearTimeout(this.jumpTimeout);\r\n\t\tthis.jumpTimeout = undefined;\r\n\r\n\t\tlet query = this.jumpInput.value.trim(\"\");\r\n\t\tlet indices;\r\n\r\n\t\t// When slide numbers are formatted to be a single linear mumber\r\n\t\t// (instead of showing a separate horizontal/vertical index) we\r\n\t\t// use the same format for slide jumps\r\n\t\tif (/^\\d+$/.test(query)) {\r\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\r\n\t\t\tif (\r\n\t\t\t\tslideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT ||\r\n\t\t\t\tslideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\r\n\t\t\t) {\r\n\t\t\t\tconst slide = this.Reveal.getSlides()[Number.parseInt(query, 10) - 1];\r\n\t\t\t\tif (slide) {\r\n\t\t\t\t\tindices = this.Reveal.getIndices(slide);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!indices) {\r\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\r\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\r\n\t\t\tif (/^\\d+\\.\\d+$/.test(query)) {\r\n\t\t\t\tquery = query.replace(\".\", \"/\");\r\n\t\t\t}\r\n\r\n\t\t\tindices = this.Reveal.location.getIndicesFromHash(query, {\r\n\t\t\t\toneBasedIndex: true,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Still no valid index? Fall back on a text search\r\n\t\tif (!indices && /\\S+/i.test(query) && query.length > 1) {\r\n\t\t\tindices = this.search(query);\r\n\t\t}\r\n\r\n\t\tif (indices && query !== \"\") {\r\n\t\t\tthis.Reveal.slide(indices.h, indices.v, indices.f);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis.Reveal.slide(\r\n\t\t\tthis.indicesOnShow.h,\r\n\t\t\tthis.indicesOnShow.v,\r\n\t\t\tthis.indicesOnShow.f,\r\n\t\t);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tjumpAfter(delay) {\r\n\t\tclearTimeout(this.jumpTimeout);\r\n\t\tthis.jumpTimeout = setTimeout(() => this.jump(), delay);\r\n\t}\r\n\r\n\t/**\r\n\t * A lofi search that looks for the given query in all\r\n\t * of our slides and returns the first match.\r\n\t */\r\n\tsearch(query) {\r\n\t\tconst regex = new RegExp(`\\\\b${query.trim()}\\\\b`, \"i\");\r\n\r\n\t\tconst slide = this.Reveal.getSlides().find((slide) => {\r\n\t\t\treturn regex.test(slide.innerText);\r\n\t\t});\r\n\r\n\t\tif (slide) {\r\n\t\t\treturn this.Reveal.getIndices(slide);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Reverts back to the slide we were on when jump to slide was\r\n\t * invoked.\r\n\t */\r\n\tcancel() {\r\n\t\tthis.Reveal.slide(\r\n\t\t\tthis.indicesOnShow.h,\r\n\t\t\tthis.indicesOnShow.v,\r\n\t\t\tthis.indicesOnShow.f,\r\n\t\t);\r\n\t\tthis.hide();\r\n\t}\r\n\r\n\tconfirm() {\r\n\t\tthis.jump();\r\n\t\tthis.hide();\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.jumpInput.removeEventListener(\"input\", this.onInput);\r\n\t\tthis.jumpInput.removeEventListener(\"keydown\", this.onKeyDown);\r\n\t\tthis.jumpInput.removeEventListener(\"blur\", this.onBlur);\r\n\r\n\t\tthis.element.remove();\r\n\t}\r\n\r\n\tonKeyDown(event) {\r\n\t\tif (event.keyCode === 13) {\r\n\t\t\tthis.confirm();\r\n\t\t} else if (event.keyCode === 27) {\r\n\t\t\tthis.cancel();\r\n\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tonInput(event) {\r\n\t\tthis.jumpAfter(200);\r\n\t}\r\n\r\n\tonBlur() {\r\n\t\tsetTimeout(() => this.hide(), 1);\r\n\t}\r\n}\r\n","import { enterFullscreen } from \"../utils/util.js\";\r\n\r\n/**\r\n * Handles all reveal.js keyboard interactions.\r\n */\r\nexport default class Keyboard {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// A key:value map of keyboard keys and descriptions of\r\n\t\t// the actions they trigger\r\n\t\tthis.shortcuts = {};\r\n\r\n\t\t// Holds custom key code mappings\r\n\t\tthis.bindings = {};\r\n\r\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tif (config.navigationMode === \"linear\") {\r\n\t\t\tthis.shortcuts[\"&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J\"] =\r\n\t\t\t\t\"Next slide\";\r\n\t\t\tthis.shortcuts[\"&#8592;  ,  &#8593;  ,  P  ,  H  ,  K\"] =\r\n\t\t\t\t\"Previous slide\";\r\n\t\t} else {\r\n\t\t\tthis.shortcuts[\"N  ,  SPACE\"] = \"Next slide\";\r\n\t\t\tthis.shortcuts[\"P  ,  Shift SPACE\"] = \"Previous slide\";\r\n\t\t\tthis.shortcuts[\"&#8592;  ,  H\"] = \"Navigate left\";\r\n\t\t\tthis.shortcuts[\"&#8594;  ,  L\"] = \"Navigate right\";\r\n\t\t\tthis.shortcuts[\"&#8593;  ,  K\"] = \"Navigate up\";\r\n\t\t\tthis.shortcuts[\"&#8595;  ,  J\"] = \"Navigate down\";\r\n\t\t}\r\n\r\n\t\tthis.shortcuts[\"Alt + &#8592;/&#8593/&#8594;/&#8595;\"] =\r\n\t\t\t\"Navigate without fragments\";\r\n\t\tthis.shortcuts[\"Shift + &#8592;/&#8593/&#8594;/&#8595;\"] =\r\n\t\t\t\"Jump to first/last slide\";\r\n\t\tthis.shortcuts[\"B  ,  .\"] = \"Pause\";\r\n\t\tthis.shortcuts.F = \"Fullscreen\";\r\n\t\tthis.shortcuts.G = \"Jump to slide\";\r\n\t\tthis.shortcuts[\"ESC, O\"] = \"Slide overview\";\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for keyboard events.\r\n\t */\r\n\tbind() {\r\n\t\tdocument.addEventListener(\"keydown\", this.onDocumentKeyDown, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Stops listening for keyboard events.\r\n\t */\r\n\tunbind() {\r\n\t\tdocument.removeEventListener(\"keydown\", this.onDocumentKeyDown, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Add a custom key binding with optional description to\r\n\t * be added to the help screen.\r\n\t */\r\n\taddKeyBinding(binding, callback) {\r\n\t\tif (typeof binding === \"object\" && binding.keyCode) {\r\n\t\t\tthis.bindings[binding.keyCode] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: binding.key,\r\n\t\t\t\tdescription: binding.description,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.bindings[binding] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: null,\r\n\t\t\t\tdescription: null,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified custom key binding.\r\n\t */\r\n\tremoveKeyBinding(keyCode) {\r\n\t\tdelete this.bindings[keyCode];\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically triggers a keyboard event\r\n\t *\r\n\t * @param {int} keyCode\r\n\t */\r\n\ttriggerKey(keyCode) {\r\n\t\tthis.onDocumentKeyDown({ keyCode });\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new shortcut to include in the help overlay\r\n\t *\r\n\t * @param {String} key\r\n\t * @param {String} value\r\n\t */\r\n\tregisterKeyboardShortcut(key, value) {\r\n\t\tthis.shortcuts[key] = value;\r\n\t}\r\n\r\n\tgetShortcuts() {\r\n\t\treturn this.shortcuts;\r\n\t}\r\n\r\n\tgetBindings() {\r\n\t\treturn this.bindings;\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keydown' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyDown(event) {\r\n\t\tconst config = this.Reveal.getConfig();\r\n\r\n\t\t// If there's a condition specified and it returns false,\r\n\t\t// ignore this event\r\n\t\tif (\r\n\t\t\ttypeof config.keyboardCondition === \"function\" &&\r\n\t\t\tconfig.keyboardCondition(event) === false\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If keyboardCondition is set, only capture keyboard events\r\n\t\t// for embedded decks when they are focused\r\n\t\tif (config.keyboardCondition === \"focused\" && !this.Reveal.isFocused()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Shorthand\r\n\t\tconst keyCode = event.keyCode;\r\n\r\n\t\t// Remember if auto-sliding was paused so we can toggle it\r\n\t\tconst autoSlideWasPaused = !this.Reveal.isAutoSliding();\r\n\r\n\t\tthis.Reveal.onUserInput(event);\r\n\r\n\t\t// Is there a focused element that could be using the keyboard?\r\n\t\tconst activeElementIsCE =\r\n\t\t\tdocument.activeElement &&\r\n\t\t\tdocument.activeElement.isContentEditable === true;\r\n\t\tconst activeElementIsInput =\r\n\t\t\tdocument.activeElement?.tagName &&\r\n\t\t\t/input|textarea/i.test(document.activeElement.tagName);\r\n\t\tconst activeElementIsNotes =\r\n\t\t\tdocument.activeElement?.className &&\r\n\t\t\t/speaker-notes/i.test(document.activeElement.className);\r\n\r\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\r\n\t\tconst keyCodeUsesModifier =\r\n\t\t\t[32, 37, 38, 39, 40, 78, 80, 191].indexOf(event.keyCode) !== -1;\r\n\r\n\t\t// Prevent all other events when a modifier is pressed\r\n\t\tconst unusedModifier =\r\n\t\t\t!((keyCodeUsesModifier && event.shiftKey) || event.altKey) &&\r\n\t\t\t(event.shiftKey || event.altKey || event.ctrlKey || event.metaKey);\r\n\r\n\t\t// Disregard the event if there's a focused element or a\r\n\t\t// keyboard modifier key is present\r\n\t\tif (\r\n\t\t\tactiveElementIsCE ||\r\n\t\t\tactiveElementIsInput ||\r\n\t\t\tactiveElementIsNotes ||\r\n\t\t\tunusedModifier\r\n\t\t)\r\n\t\t\treturn;\r\n\r\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\r\n\t\tconst resumeKeyCodes = [66, 86, 190, 191, 112];\r\n\t\tlet key;\r\n\r\n\t\t// Custom key bindings for togglePause should be able to resume\r\n\t\tif (typeof config.keyboard === \"object\") {\r\n\t\t\tfor (key in config.keyboard) {\r\n\t\t\t\tif (config.keyboard[key] === \"togglePause\") {\r\n\t\t\t\t\tresumeKeyCodes.push(Number.parseInt(key, 10));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.Reveal.isPaused() && resumeKeyCodes.indexOf(keyCode) === -1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use linear navigation if we're configured to OR if\r\n\t\t// the presentation is one-dimensional\r\n\t\tconst useLinearMode =\r\n\t\t\tconfig.navigationMode === \"linear\" ||\r\n\t\t\t!this.Reveal.hasHorizontalSlides() ||\r\n\t\t\t!this.Reveal.hasVerticalSlides();\r\n\r\n\t\tlet triggered = false;\r\n\r\n\t\t// 1. User defined key bindings\r\n\t\tif (typeof config.keyboard === \"object\") {\r\n\t\t\tfor (key in config.keyboard) {\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif (Number.parseInt(key, 10) === keyCode) {\r\n\t\t\t\t\tconst value = config.keyboard[key];\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif (typeof value === \"function\") {\r\n\t\t\t\t\t\tvalue.apply(null, [event]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if (\r\n\t\t\t\t\t\ttypeof value === \"string\" &&\r\n\t\t\t\t\t\ttypeof this.Reveal[value] === \"function\"\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.Reveal[value].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 2. Registered custom key bindings\r\n\t\tif (triggered === false) {\r\n\t\t\tfor (key in this.bindings) {\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif (Number.parseInt(key, 10) === keyCode) {\r\n\t\t\t\t\tconst action = this.bindings[key].callback;\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif (typeof action === \"function\") {\r\n\t\t\t\t\t\taction.apply(null, [event]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if (\r\n\t\t\t\t\t\ttypeof action === \"string\" &&\r\n\t\t\t\t\t\ttypeof this.Reveal[action] === \"function\"\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tthis.Reveal[action].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. System defined key bindings\r\n\t\tif (triggered === false) {\r\n\t\t\t// Assume true and try to prove false\r\n\t\t\ttriggered = true;\r\n\r\n\t\t\t// P, PAGE UP\r\n\t\t\tif (keyCode === 80 || keyCode === 33) {\r\n\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\r\n\t\t\t}\r\n\t\t\t// N, PAGE DOWN\r\n\t\t\telse if (keyCode === 78 || keyCode === 34) {\r\n\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\r\n\t\t\t}\r\n\t\t\t// H, LEFT\r\n\t\t\telse if (keyCode === 72 || keyCode === 37) {\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis.Reveal.slide(0);\r\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\r\n\t\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.Reveal.left({ skipFragments: event.altKey });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// L, RIGHT\r\n\t\t\telse if (keyCode === 76 || keyCode === 39) {\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\r\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\r\n\t\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.Reveal.right({ skipFragments: event.altKey });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// K, UP\r\n\t\t\telse if (keyCode === 75 || keyCode === 38) {\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis.Reveal.slide(undefined, 0);\r\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\r\n\t\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.Reveal.up({ skipFragments: event.altKey });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// J, DOWN\r\n\t\t\telse if (keyCode === 74 || keyCode === 40) {\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis.Reveal.slide(undefined, Number.MAX_VALUE);\r\n\t\t\t\t} else if (!this.Reveal.overview.isActive() && useLinearMode) {\r\n\t\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.Reveal.down({ skipFragments: event.altKey });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// HOME\r\n\t\t\telse if (keyCode === 36) {\r\n\t\t\t\tthis.Reveal.slide(0);\r\n\t\t\t}\r\n\t\t\t// END\r\n\t\t\telse if (keyCode === 35) {\r\n\t\t\t\tthis.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\r\n\t\t\t}\r\n\t\t\t// SPACE\r\n\t\t\telse if (keyCode === 32) {\r\n\t\t\t\tif (this.Reveal.overview.isActive()) {\r\n\t\t\t\t\tthis.Reveal.overview.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis.Reveal.prev({ skipFragments: event.altKey });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.Reveal.next({ skipFragments: event.altKey });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\r\n\t\t\telse if (\r\n\t\t\t\t[58, 59, 66, 86, 190].includes(keyCode) ||\r\n\t\t\t\t(keyCode === 191 && !event.shiftKey)\r\n\t\t\t) {\r\n\t\t\t\tthis.Reveal.togglePause();\r\n\t\t\t}\r\n\t\t\t// F\r\n\t\t\telse if (keyCode === 70) {\r\n\t\t\t\tenterFullscreen(\r\n\t\t\t\t\tconfig.embedded\r\n\t\t\t\t\t\t? this.Reveal.getViewportElement()\r\n\t\t\t\t\t\t: document.documentElement,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// A\r\n\t\t\telse if (keyCode === 65) {\r\n\t\t\t\tif (config.autoSlideStoppable) {\r\n\t\t\t\t\tthis.Reveal.toggleAutoSlide(autoSlideWasPaused);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// G\r\n\t\t\telse if (keyCode === 71) {\r\n\t\t\t\tif (config.jumpToSlide) {\r\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ?\r\n\t\t\telse if (keyCode === 191 && event.shiftKey) {\r\n\t\t\t\tthis.Reveal.toggleHelp();\r\n\t\t\t}\r\n\t\t\t// F1\r\n\t\t\telse if (keyCode === 112) {\r\n\t\t\t\tthis.Reveal.toggleHelp();\r\n\t\t\t} else {\r\n\t\t\t\ttriggered = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the input resulted in a triggered action we should prevent\r\n\t\t// the browsers default behavior\r\n\t\tif (triggered) {\r\n\t\t\tevent.preventDefault?.();\r\n\t\t}\r\n\t\t// ESC or O key\r\n\t\telse if (keyCode === 27 || keyCode === 79) {\r\n\t\t\tif (this.Reveal.closeOverlay() === false) {\r\n\t\t\t\tthis.Reveal.overview.toggle();\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault?.();\r\n\t\t}\r\n\r\n\t\t// If auto-sliding is enabled we need to cue up\r\n\t\t// another timeout\r\n\t\tthis.Reveal.cueAutoSlide();\r\n\t}\r\n}\r\n","/**\r\n * Reads and writes the URL based on reveal.js' current state.\r\n */\r\nexport default class Location {\r\n\t// The minimum number of milliseconds that must pass between\r\n\t// calls to history.replaceState\r\n\tMAX_REPLACE_STATE_FREQUENCY = 1000;\r\n\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\r\n\t\tthis.writeURLTimeout = 0;\r\n\r\n\t\tthis.replaceStateTimestamp = 0;\r\n\r\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind(this);\r\n\t}\r\n\r\n\tbind() {\r\n\t\twindow.addEventListener(\"hashchange\", this.onWindowHashChange, false);\r\n\t}\r\n\r\n\tunbind() {\r\n\t\twindow.removeEventListener(\"hashchange\", this.onWindowHashChange, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide indices for the given hash link.\r\n\t *\r\n\t * @param {string} [hash] the hash string that we want to\r\n\t * find the indices for\r\n\t *\r\n\t * @returns slide indices or null\r\n\t */\r\n\tgetIndicesFromHash(hash = window.location.hash, options = {}) {\r\n\t\t// Attempt to parse the hash as either an index or name\r\n\t\tlet name = hash.replace(/^#\\/?/, \"\");\r\n\t\tconst bits = name.split(\"/\");\r\n\r\n\t\t// If the first bit is not fully numeric and there is a name we\r\n\t\t// can assume that this is a named link\r\n\t\tif (!/^[0-9]*$/.test(bits[0]) && name.length) {\r\n\t\t\tlet slide;\r\n\r\n\t\t\tlet f;\r\n\r\n\t\t\t// Parse named links with fragments (#/named-link/2)\r\n\t\t\tif (/\\/[-\\d]+$/g.test(name)) {\r\n\t\t\t\tf = Number.parseInt(name.split(\"/\").pop(), 10);\r\n\t\t\t\tf = Number.isNaN(f) ? undefined : f;\r\n\t\t\t\tname = name.split(\"/\").shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure the named link is a valid HTML ID attribute\r\n\t\t\ttry {\r\n\t\t\t\tslide = document\r\n\t\t\t\t\t.getElementById(decodeURIComponent(name))\r\n\t\t\t\t\t.closest(\".slides section\");\r\n\t\t\t} catch (error) {}\r\n\r\n\t\t\tif (slide) {\r\n\t\t\t\treturn { ...this.Reveal.getIndices(slide), f };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst config = this.Reveal.getConfig();\r\n\t\t\tconst hashIndexBase =\r\n\t\t\t\tconfig.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\r\n\r\n\t\t\t// Read the index components of the hash\r\n\t\t\tconst h = Number.parseInt(bits[0], 10) - hashIndexBase || 0;\r\n\t\t\tconst v = Number.parseInt(bits[1], 10) - hashIndexBase || 0;\r\n\t\t\tlet f;\r\n\r\n\t\t\tif (config.fragmentInURL) {\r\n\t\t\t\tf = Number.parseInt(bits[2], 10);\r\n\t\t\t\tif (Number.isNaN(f)) {\r\n\t\t\t\t\tf = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn { h, v, f };\r\n\t\t}\r\n\r\n\t\t// The hash couldn't be parsed or no matching named link was found\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current URL (hash) and navigates accordingly.\r\n\t */\r\n\treadURL() {\r\n\t\tconst currentIndices = this.Reveal.getIndices();\r\n\t\tconst newIndices = this.getIndicesFromHash();\r\n\r\n\t\tif (newIndices) {\r\n\t\t\tif (\r\n\t\t\t\tnewIndices.h !== currentIndices.h ||\r\n\t\t\t\tnewIndices.v !== currentIndices.v ||\r\n\t\t\t\tnewIndices.f !== undefined\r\n\t\t\t) {\r\n\t\t\t\tthis.Reveal.slide(newIndices.h, newIndices.v, newIndices.f);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If no new indices are available, we're trying to navigate to\r\n\t\t// a slide hash that does not exist\r\n\t\telse {\r\n\t\t\tthis.Reveal.slide(currentIndices.h || 0, currentIndices.v || 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the page URL (hash) to reflect the current\r\n\t * state.\r\n\t *\r\n\t * @param {number} delay The time in ms to wait before\r\n\t * writing the hash\r\n\t */\r\n\twriteURL(delay) {\r\n\t\tconst config = this.Reveal.getConfig();\r\n\t\tconst currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\t// Make sure there's never more than one timeout running\r\n\t\tclearTimeout(this.writeURLTimeout);\r\n\r\n\t\t// If a delay is specified, timeout this call\r\n\t\tif (typeof delay === \"number\") {\r\n\t\t\tthis.writeURLTimeout = setTimeout(this.writeURL, delay);\r\n\t\t} else if (currentSlide) {\r\n\t\t\tconst hash = this.getHash();\r\n\r\n\t\t\t// If we're configured to push to history OR the history\r\n\t\t\t// API is not available.\r\n\t\t\tif (config.history) {\r\n\t\t\t\twindow.location.hash = hash;\r\n\t\t\t}\r\n\t\t\t// If we're configured to reflect the current slide in the\r\n\t\t\t// URL without pushing to history.\r\n\t\t\telse if (config.hash) {\r\n\t\t\t\t// If the hash is empty, don't add it to the URL\r\n\t\t\t\tif (hash === \"/\") {\r\n\t\t\t\t\tthis.debouncedReplaceState(\r\n\t\t\t\t\t\twindow.location.pathname + window.location.search,\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.debouncedReplaceState(`#${hash}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\r\n\t\t\t// anchors on pages where reveal.js is running. Removed\r\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\r\n\t\t\t//\r\n\t\t\t// If history and hash are both disabled, a hash may still\r\n\t\t\t// be added to the URL by clicking on a href with a hash\r\n\t\t\t// target. Counter this by always removing the hash.\r\n\t\t\t// else {\r\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\r\n\treplaceState(url) {\r\n\t\twindow.history.replaceState(null, null, url);\r\n\t\tthis.replaceStateTimestamp = Date.now();\r\n\t}\r\n\r\n\tdebouncedReplaceState(url) {\r\n\t\tclearTimeout(this.replaceStateTimeout);\r\n\r\n\t\tif (\r\n\t\t\tDate.now() - this.replaceStateTimestamp >\r\n\t\t\tthis.MAX_REPLACE_STATE_FREQUENCY\r\n\t\t) {\r\n\t\t\tthis.replaceState(url);\r\n\t\t} else {\r\n\t\t\tthis.replaceStateTimeout = setTimeout(\r\n\t\t\t\t() => this.replaceState(url),\r\n\t\t\t\tthis.MAX_REPLACE_STATE_FREQUENCY,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Return a hash URL that will resolve to the given slide location.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\r\n\t */\r\n\tgetHash(slide) {\r\n\t\tlet url = \"/\";\r\n\r\n\t\t// Attempt to create a named link based on the slide's ID\r\n\t\tconst s = slide || this.Reveal.getCurrentSlide();\r\n\t\tlet id = s ? s.getAttribute(\"id\") : null;\r\n\t\tif (id) {\r\n\t\t\tid = encodeURIComponent(id);\r\n\t\t}\r\n\r\n\t\tconst index = this.Reveal.getIndices(slide);\r\n\t\tif (!this.Reveal.getConfig().fragmentInURL) {\r\n\t\t\tindex.f = undefined;\r\n\t\t}\r\n\r\n\t\t// If the current slide has an ID, use that as a named link,\r\n\t\t// but we don't support named links with a fragment index\r\n\t\tif (typeof id === \"string\" && id.length) {\r\n\t\t\turl = `/${id}`;\r\n\r\n\t\t\t// If there is also a fragment, append that at the end\r\n\t\t\t// of the named link, like: #/named-link/2\r\n\t\t\tif (index.f >= 0) url += `/${index.f}`;\r\n\t\t}\r\n\t\t// Otherwise use the /h/v index\r\n\t\telse {\r\n\t\t\tconst hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\r\n\t\t\tif (index.h > 0 || index.v > 0 || index.f >= 0)\r\n\t\t\t\turl += index.h + hashIndexBase;\r\n\t\t\tif (index.v > 0 || index.f >= 0) url += `/${index.v + hashIndexBase}`;\r\n\t\t\tif (index.f >= 0) url += `/${index.f}`;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'hashchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tonWindowHashChange(event) {\r\n\t\tthis.readURL();\r\n\t}\r\n}\r\n","/**\r\n * Handles the showing of speaker notes\r\n */\r\nexport default class Notes {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.className = \"speaker-notes\";\r\n\t\tthis.element.setAttribute(\"data-prevent-swipe\", \"\");\r\n\t\tthis.element.setAttribute(\"tabindex\", \"0\");\r\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tif (config.showNotes) {\r\n\t\t\tthis.element.setAttribute(\r\n\t\t\t\t\"data-layout\",\r\n\t\t\t\ttypeof config.showNotes === \"string\" ? config.showNotes : \"inline\",\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pick up notes from the current slide and display them\r\n\t * to the viewer.\r\n\t *\r\n\t * @see {@link config.showNotes}\r\n\t */\r\n\tupdate() {\r\n\t\tif (\r\n\t\t\tthis.Reveal.getConfig().showNotes &&\r\n\t\t\tthis.element &&\r\n\t\t\tthis.Reveal.getCurrentSlide() &&\r\n\t\t\t!this.Reveal.isScrollView() &&\r\n\t\t\t!this.Reveal.isPrintView()\r\n\t\t) {\r\n\t\t\tthis.element.innerHTML =\r\n\t\t\t\tthis.getSlideNotes() ||\r\n\t\t\t\t'<span class=\"notes-placeholder\">No notes on this slide.</span>';\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the visibility of the speaker notes sidebar that\r\n\t * is used to share annotated slides. The notes sidebar is\r\n\t * only visible if showNotes is true and there are notes on\r\n\t * one or more slides in the deck.\r\n\t */\r\n\tupdateVisibility() {\r\n\t\tif (\r\n\t\t\tthis.Reveal.getConfig().showNotes &&\r\n\t\t\tthis.hasNotes() &&\r\n\t\t\t!this.Reveal.isScrollView() &&\r\n\t\t\t!this.Reveal.isPrintView()\r\n\t\t) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"show-notes\");\r\n\t\t} else {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\"show-notes\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are speaker notes for ANY slide in the\r\n\t * presentation.\r\n\t */\r\n\thasNotes() {\r\n\t\treturn (\r\n\t\t\tthis.Reveal.getSlidesElement().querySelectorAll(\r\n\t\t\t\t\"[data-notes], aside.notes\",\r\n\t\t\t).length > 0\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this presentation is running inside of the\r\n\t * speaker notes window.\r\n\t *\r\n\t * @return {boolean}\r\n\t */\r\n\tisSpeakerNotesWindow() {\r\n\t\treturn !!window.location.search.match(/receiver/gi);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the speaker notes from a slide. Notes can be\r\n\t * defined in two ways:\r\n\t * 1. As a data-notes attribute on the slide <section>\r\n\t * 2. With <aside class=\"notes\"> elements inside the slide\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {(string|null)}\r\n\t */\r\n\tgetSlideNotes(slide = this.Reveal.getCurrentSlide()) {\r\n\t\t// Notes can be specified via the data-notes attribute...\r\n\t\tif (slide.hasAttribute(\"data-notes\")) {\r\n\t\t\treturn slide.getAttribute(\"data-notes\");\r\n\t\t}\r\n\r\n\t\t// ... or using <aside class=\"notes\"> elements\r\n\t\tconst notesElements = slide.querySelectorAll(\"aside.notes\");\r\n\t\tif (notesElements) {\r\n\t\t\treturn Array.from(notesElements)\r\n\t\t\t\t.map((notesElement) => notesElement.innerHTML)\r\n\t\t\t\t.join(\"\\n\");\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.element.remove();\r\n\t}\r\n}\r\n","import { SLIDES_SELECTOR } from \"../utils/constants.js\";\r\nimport { extend, queryAll, transformElement } from \"../utils/util.js\";\r\n\r\n/**\r\n * Handles all logic related to the overview mode\r\n * (birds-eye view of all slides).\r\n */\r\nexport default class Overview {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.onSlideClicked = this.onSlideClicked.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the overview of slides (quick nav) by scaling\r\n\t * down and arranging all slide elements.\r\n\t */\r\n\tactivate() {\r\n\t\t// Only proceed if enabled in config\r\n\t\tif (\r\n\t\t\tthis.Reveal.getConfig().overview &&\r\n\t\t\t!this.Reveal.isScrollView() &&\r\n\t\t\t!this.isActive()\r\n\t\t) {\r\n\t\t\tthis.active = true;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"overview\");\r\n\r\n\t\t\t// Don't auto-slide while in overview mode\r\n\t\t\tthis.Reveal.cancelAutoSlide();\r\n\r\n\t\t\t// Move the backgrounds element into the slide container to\r\n\t\t\t// that the same scaling is applied\r\n\t\t\tthis.Reveal.getSlidesElement().appendChild(\r\n\t\t\t\tthis.Reveal.getBackgroundsElement(),\r\n\t\t\t);\r\n\r\n\t\t\t// Clicking on an overview slide navigates to it\r\n\t\t\tqueryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\r\n\t\t\t\t(slide) => {\r\n\t\t\t\t\tif (!slide.classList.contains(\"stack\")) {\r\n\t\t\t\t\t\tslide.addEventListener(\"click\", this.onSlideClicked, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t);\r\n\r\n\t\t\t// Calculate slide sizes\r\n\t\t\tconst margin = 70;\r\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\r\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\r\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\r\n\r\n\t\t\t// Reverse in RTL mode\r\n\t\t\tif (this.Reveal.getConfig().rtl) {\r\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.updateSlidesVisibility();\r\n\r\n\t\t\tthis.layout();\r\n\t\t\tthis.update();\r\n\r\n\t\t\tthis.Reveal.layout();\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Notify observers of the overview showing\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: \"overviewshown\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh: indices.h,\r\n\t\t\t\t\tindexv: indices.v,\r\n\t\t\t\t\tcurrentSlide: this.Reveal.getCurrentSlide(),\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Uses CSS transforms to position all slides in a grid for\r\n\t * display inside of the overview mode.\r\n\t */\r\n\tlayout() {\r\n\t\t// Layout slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach((hslide, h) => {\r\n\t\t\thslide.setAttribute(\"data-index-h\", h);\r\n\t\t\ttransformElement(\r\n\t\t\t\thslide,\r\n\t\t\t\t`translate3d(${h * this.overviewSlideWidth}px, 0, 0)`,\r\n\t\t\t);\r\n\r\n\t\t\tif (hslide.classList.contains(\"stack\")) {\r\n\t\t\t\tqueryAll(hslide, \"section\").forEach((vslide, v) => {\r\n\t\t\t\t\tvslide.setAttribute(\"data-index-h\", h);\r\n\t\t\t\t\tvslide.setAttribute(\"data-index-v\", v);\r\n\r\n\t\t\t\t\ttransformElement(\r\n\t\t\t\t\t\tvslide,\r\n\t\t\t\t\t\t`translate3d(0, ${v * this.overviewSlideHeight}px, 0)`,\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Layout slide backgrounds\r\n\t\tArray.from(this.Reveal.getBackgroundsElement().childNodes).forEach(\r\n\t\t\t(hbackground, h) => {\r\n\t\t\t\ttransformElement(\r\n\t\t\t\t\thbackground,\r\n\t\t\t\t\t`translate3d(${h * this.overviewSlideWidth}px, 0, 0)`,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tqueryAll(hbackground, \".slide-background\").forEach((vbackground, v) => {\r\n\t\t\t\t\ttransformElement(\r\n\t\t\t\t\t\tvbackground,\r\n\t\t\t\t\t\t`translate3d(0, ${v * this.overviewSlideHeight}px, 0)`,\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the overview viewport to the current slides.\r\n\t * Called each time the current slide changes.\r\n\t */\r\n\tupdate() {\r\n\t\tconst vmin = Math.min(window.innerWidth, window.innerHeight);\r\n\t\tconst scale = Math.max(vmin / 5, 150) / vmin;\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.transformSlides({\r\n\t\t\toverview: [\r\n\t\t\t\t`scale(${scale})`,\r\n\t\t\t\t`translateX(${-indices.h * this.overviewSlideWidth}px)`,\r\n\t\t\t\t`translateY(${-indices.v * this.overviewSlideHeight}px)`,\r\n\t\t\t].join(\" \"),\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Exits the slide overview and enters the currently\r\n\t * active slide.\r\n\t */\r\n\tdeactivate() {\r\n\t\t// Only proceed if enabled in config\r\n\t\tif (this.Reveal.getConfig().overview) {\r\n\t\t\tthis.active = false;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove(\"overview\");\r\n\r\n\t\t\t// Temporarily add a class so that transitions can do different things\r\n\t\t\t// depending on whether they are exiting/entering overview, or just\r\n\t\t\t// moving from slide to slide\r\n\t\t\tthis.Reveal.getRevealElement().classList.add(\"overview-deactivating\");\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove(\r\n\t\t\t\t\t\"overview-deactivating\",\r\n\t\t\t\t);\r\n\t\t\t}, 1);\r\n\r\n\t\t\t// Move the background element back out\r\n\t\t\tthis.Reveal.getRevealElement().appendChild(\r\n\t\t\t\tthis.Reveal.getBackgroundsElement(),\r\n\t\t\t);\r\n\r\n\t\t\t// Clean up changes made to slides\r\n\t\t\tqueryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\r\n\t\t\t\t(slide) => {\r\n\t\t\t\t\ttransformElement(slide, \"\");\r\n\r\n\t\t\t\t\tslide.removeEventListener(\"click\", this.onSlideClicked, true);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\r\n\t\t\t// Clean up changes made to backgrounds\r\n\t\t\tqueryAll(\r\n\t\t\t\tthis.Reveal.getBackgroundsElement(),\r\n\t\t\t\t\".slide-background\",\r\n\t\t\t).forEach((background) => {\r\n\t\t\t\ttransformElement(background, \"\");\r\n\t\t\t});\r\n\r\n\t\t\tthis.Reveal.transformSlides({ overview: \"\" });\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\tthis.Reveal.slide(indices.h, indices.v);\r\n\t\t\tthis.Reveal.layout();\r\n\t\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t\t\t// Notify observers of the overview hiding\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: \"overviewhidden\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh: indices.h,\r\n\t\t\t\t\tindexv: indices.v,\r\n\t\t\t\t\tcurrentSlide: this.Reveal.getCurrentSlide(),\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the slide overview mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * overview is open, false means it's closed.\r\n\t */\r\n\ttoggle(override) {\r\n\t\tif (typeof override === \"boolean\") {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t} else {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the overview is currently active.\r\n\t *\r\n\t * @return {Boolean} true if the overview is active,\r\n\t * false otherwise\r\n\t */\r\n\tisActive() {\r\n\t\treturn this.active;\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when a slide is and we're in the overview.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonSlideClicked(event) {\r\n\t\tif (this.isActive()) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet element = event.target;\r\n\r\n\t\t\twhile (element && !element.nodeName.match(/section/gi)) {\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif (element && !element.classList.contains(\"disabled\")) {\r\n\t\t\t\tthis.deactivate();\r\n\r\n\t\t\t\tif (element.nodeName.match(/section/gi)) {\r\n\t\t\t\t\tconst h = Number.parseInt(element.getAttribute(\"data-index-h\"), 10);\r\n\t\t\t\t\tconst v = Number.parseInt(element.getAttribute(\"data-index-v\"), 10);\r\n\r\n\t\t\t\t\tthis.Reveal.slide(h, v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * Loads a JavaScript file from the given URL and executes it.\r\n *\r\n * @param {string} url Address of the .js file to load\r\n * @param {function} callback Method to invoke when the script\r\n * has loaded and executed\r\n */\r\nexport const loadScript = (url, callback) => {\r\n\tconst script = document.createElement(\"script\");\r\n\tscript.type = \"text/javascript\";\r\n\tscript.async = false;\r\n\tscript.defer = false;\r\n\tscript.src = url;\r\n\r\n\tif (typeof callback === \"function\") {\r\n\t\t// Success callback\r\n\t\tscript.onload = script.onreadystatechange = (event) => {\r\n\t\t\tif (event.type === \"load\" || /loaded|complete/.test(script.readyState)) {\r\n\t\t\t\t// Kill event listeners\r\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Error callback\r\n\t\tscript.onerror = (err) => {\r\n\t\t\t// Kill event listeners\r\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\tcallback(new Error(`Failed loading script: ${script.src}\\n${err}`));\r\n\t\t};\r\n\t}\r\n\r\n\t// Append the script at the end of <head>\r\n\tconst head = document.querySelector(\"head\");\r\n\thead.insertBefore(script, head.lastChild);\r\n};\r\n","import { loadScript } from \"../utils/loader.js\";\r\n\r\n/**\r\n * Manages loading and registering of reveal.js plugins.\r\n */\r\nexport default class Plugins {\r\n\tconstructor(reveal) {\r\n\t\tthis.Reveal = reveal;\r\n\r\n\t\t// Flags our current state (idle -> loading -> loaded)\r\n\t\tthis.state = \"idle\";\r\n\r\n\t\t// An id:instance map of currently registered plugins\r\n\t\tthis.registeredPlugins = {};\r\n\r\n\t\tthis.asyncDependencies = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Loads reveal.js dependencies, registers and\r\n\t * initializes plugins.\r\n\t *\r\n\t * Plugins are direct references to a reveal.js plugin\r\n\t * object that we register and initialize after any\r\n\t * synchronous dependencies have loaded.\r\n\t *\r\n\t * Dependencies are defined via the 'dependencies' config\r\n\t * option and will be loaded prior to starting reveal.js.\r\n\t * Some dependencies may have an 'async' flag, if so they\r\n\t * will load after reveal.js has been started up.\r\n\t */\r\n\tload(plugins, dependencies) {\r\n\t\tthis.state = \"loading\";\r\n\r\n\t\tplugins.forEach(this.registerPlugin.bind(this));\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst scripts = [];\r\n\t\t\tlet scriptsToLoad = 0;\r\n\r\n\t\t\tdependencies.forEach((s) => {\r\n\t\t\t\t// Load if there's no condition or the condition is truthy\r\n\t\t\t\tif (!s.condition || s.condition()) {\r\n\t\t\t\t\tif (s.async) {\r\n\t\t\t\t\t\tthis.asyncDependencies.push(s);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tscripts.push(s);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (scripts.length) {\r\n\t\t\t\tscriptsToLoad = scripts.length;\r\n\r\n\t\t\t\tconst scriptLoadedCallback = (s) => {\r\n\t\t\t\t\tif (s && typeof s.callback === \"function\") s.callback();\r\n\r\n\t\t\t\t\tif (--scriptsToLoad === 0) {\r\n\t\t\t\t\t\tthis.initPlugins().then(resolve);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Load synchronous scripts\r\n\t\t\t\tscripts.forEach((s) => {\r\n\t\t\t\t\tif (typeof s.id === \"string\") {\r\n\t\t\t\t\t\tthis.registerPlugin(s);\r\n\t\t\t\t\t\tscriptLoadedCallback(s);\r\n\t\t\t\t\t} else if (typeof s.src === \"string\") {\r\n\t\t\t\t\t\tloadScript(s.src, () => scriptLoadedCallback(s));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn(\"Unrecognized plugin format\", s);\r\n\t\t\t\t\t\tscriptLoadedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.initPlugins().then(resolve);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes our plugins and waits for them to be ready\r\n\t * before proceeding.\r\n\t */\r\n\tinitPlugins() {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst pluginValues = Object.values(this.registeredPlugins);\r\n\t\t\tlet pluginsToInitialize = pluginValues.length;\r\n\r\n\t\t\t// If there are no plugins, skip this step\r\n\t\t\tif (pluginsToInitialize === 0) {\r\n\t\t\t\tthis.loadAsync().then(resolve);\r\n\t\t\t}\r\n\t\t\t// ... otherwise initialize plugins\r\n\t\t\telse {\r\n\t\t\t\tlet initNextPlugin;\r\n\r\n\t\t\t\tconst afterPlugInitialized = () => {\r\n\t\t\t\t\tif (--pluginsToInitialize === 0) {\r\n\t\t\t\t\t\tthis.loadAsync().then(resolve);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinitNextPlugin();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\t// Initialize plugins serially\r\n\t\t\t\tinitNextPlugin = () => {\r\n\t\t\t\t\tconst plugin = pluginValues[i++];\r\n\r\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\r\n\t\t\t\t\tif (typeof plugin.init === \"function\") {\r\n\t\t\t\t\t\tconst promise = plugin.init(this.Reveal);\r\n\r\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\r\n\t\t\t\t\t\tif (promise && typeof promise.then === \"function\") {\r\n\t\t\t\t\t\t\tpromise.then(afterPlugInitialized);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tinitNextPlugin();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Loads all async reveal.js dependencies.\r\n\t */\r\n\tloadAsync() {\r\n\t\tthis.state = \"loaded\";\r\n\r\n\t\tif (this.asyncDependencies.length) {\r\n\t\t\tthis.asyncDependencies.forEach((s) => {\r\n\t\t\t\tloadScript(s.src, s.callback);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new plugin with this reveal.js instance.\r\n\t *\r\n\t * reveal.js waits for all registered plugins to initialize\r\n\t * before considering itself ready, as long as the plugin\r\n\t * is registered before calling `Reveal.initialize()`.\r\n\t */\r\n\tregisterPlugin(plugin) {\r\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\r\n\t\t// plugins work with reveal.js 4.0.0\r\n\t\tif (arguments.length === 2 && typeof arguments[0] === \"string\") {\r\n\t\t\tplugin = arguments[1];\r\n\t\t\tplugin.id = arguments[0];\r\n\t\t}\r\n\t\t// Plugin can optionally be a function which we call\r\n\t\t// to create an instance of the plugin\r\n\t\telse if (typeof plugin === \"function\") {\r\n\t\t\tplugin = plugin();\r\n\t\t}\r\n\r\n\t\tconst id = plugin.id;\r\n\r\n\t\tif (typeof id !== \"string\") {\r\n\t\t\tconsole.warn(\"Unrecognized plugin format; can't find plugin.id\", plugin);\r\n\t\t} else if (this.registeredPlugins[id] === undefined) {\r\n\t\t\tthis.registeredPlugins[id] = plugin;\r\n\r\n\t\t\t// If a plugin is registered after reveal.js is loaded,\r\n\t\t\t// initialize it right away\r\n\t\t\tif (this.state === \"loaded\" && typeof plugin.init === \"function\") {\r\n\t\t\t\tplugin.init(this.Reveal);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.warn(`reveal.js: \"${id}\" plugin has already been registered`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a specific plugin has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\thasPlugin(id) {\r\n\t\treturn !!this.registeredPlugins[id];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the specific plugin instance, if a plugin\r\n\t * with the given ID has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\tgetPlugin(id) {\r\n\t\treturn this.registeredPlugins[id];\r\n\t}\r\n\r\n\tgetRegisteredPlugins() {\r\n\t\treturn this.registeredPlugins;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tObject.values(this.registeredPlugins).forEach((plugin) => {\r\n\t\t\tif (typeof plugin.destroy === \"function\") {\r\n\t\t\t\tplugin.destroy();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.registeredPlugins = {};\r\n\t\tthis.asyncDependencies = [];\r\n\t}\r\n}\r\n","/**\r\n * Handles hiding of the pointer/cursor when inactive.\r\n */\r\nexport default class Pointer {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Throttles mouse wheel navigation\r\n\t\tthis.lastMouseWheelStep = 0;\r\n\r\n\t\t// Is the mouse pointer currently hidden from view\r\n\t\tthis.cursorHidden = false;\r\n\r\n\t\t// Timeout used to determine when the cursor is inactive\r\n\t\tthis.cursorInactiveTimeout = 0;\r\n\r\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind(this);\r\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tif (config.mouseWheel) {\r\n\t\t\tdocument.addEventListener(\"wheel\", this.onDocumentMouseScroll, false);\r\n\t\t} else {\r\n\t\t\tdocument.removeEventListener(\"wheel\", this.onDocumentMouseScroll, false);\r\n\t\t}\r\n\r\n\t\t// Auto-hide the mouse pointer when its inactive\r\n\t\tif (config.hideInactiveCursor) {\r\n\t\t\tdocument.addEventListener(\r\n\t\t\t\t\"mousemove\",\r\n\t\t\t\tthis.onDocumentCursorActive,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t\tdocument.addEventListener(\r\n\t\t\t\t\"mousedown\",\r\n\t\t\t\tthis.onDocumentCursorActive,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.showCursor();\r\n\r\n\t\t\tdocument.removeEventListener(\r\n\t\t\t\t\"mousemove\",\r\n\t\t\t\tthis.onDocumentCursorActive,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t\tdocument.removeEventListener(\r\n\t\t\t\t\"mousedown\",\r\n\t\t\t\tthis.onDocumentCursorActive,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the mouse pointer after it has been hidden with\r\n\t * #hideCursor.\r\n\t */\r\n\tshowCursor() {\r\n\t\tif (this.cursorHidden) {\r\n\t\t\tthis.cursorHidden = false;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the mouse pointer when it's on top of the .reveal\r\n\t * container.\r\n\t */\r\n\thideCursor() {\r\n\t\tif (this.cursorHidden === false) {\r\n\t\t\tthis.cursorHidden = true;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.showCursor();\r\n\r\n\t\tdocument.removeEventListener(\"wheel\", this.onDocumentMouseScroll, false);\r\n\t\tdocument.removeEventListener(\r\n\t\t\t\"mousemove\",\r\n\t\t\tthis.onDocumentCursorActive,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t\tdocument.removeEventListener(\r\n\t\t\t\"mousedown\",\r\n\t\t\tthis.onDocumentCursorActive,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Called whenever there is mouse input at the document level\r\n\t * to determine if the cursor is active or not.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentCursorActive(event) {\r\n\t\tthis.showCursor();\r\n\r\n\t\tclearTimeout(this.cursorInactiveTimeout);\r\n\r\n\t\tthis.cursorInactiveTimeout = setTimeout(\r\n\t\t\tthis.hideCursor.bind(this),\r\n\t\t\tthis.Reveal.getConfig().hideCursorTime,\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\r\n\t * multiple slides.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentMouseScroll(event) {\r\n\t\tif (Date.now() - this.lastMouseWheelStep > 1000) {\r\n\t\t\tthis.lastMouseWheelStep = Date.now();\r\n\r\n\t\t\tconst delta = event.detail || -event.wheelDelta;\r\n\t\t\tif (delta > 0) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t} else if (delta < 0) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { SLIDES_SELECTOR } from \"../utils/constants.js\";\r\nimport { createStyleSheet, queryAll } from \"../utils/util.js\";\r\n\r\n/**\r\n * Setups up our presentation for printing/exporting to PDF.\r\n */\r\nexport default class PrintView {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the presentation for printing to a static\r\n\t * PDF.\r\n\t */\r\n\tasync activate() {\r\n\t\tconst config = this.Reveal.getConfig();\r\n\t\tconst slides = queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR);\r\n\r\n\t\t// Compute slide numbers now, before we start duplicating slides\r\n\t\tconst injectPageNumbers =\r\n\t\t\tconfig.slideNumber && /all|print/i.test(config.showSlideNumber);\r\n\r\n\t\tconst slideSize = this.Reveal.getComputedSlideSize(\r\n\t\t\twindow.innerWidth,\r\n\t\t\twindow.innerHeight,\r\n\t\t);\r\n\r\n\t\t// Dimensions of the PDF pages\r\n\t\tconst pageWidth = Math.floor(slideSize.width * (1 + config.margin));\r\n\t\tconst pageHeight = Math.floor(slideSize.height * (1 + config.margin));\r\n\r\n\t\t// Dimensions of slides within the pages\r\n\t\tconst slideWidth = slideSize.width;\r\n\t\tconst slideHeight = slideSize.height;\r\n\r\n\t\tawait new Promise(requestAnimationFrame);\r\n\r\n\t\t// Let the browser know what page size we want to print\r\n\t\tcreateStyleSheet(\r\n\t\t\t`@page{size:${pageWidth}px ${pageHeight}px; margin: 0px;}`,\r\n\t\t);\r\n\r\n\t\t// Limit the size of certain elements to the dimensions of the slide\r\n\t\tcreateStyleSheet(\r\n\t\t\t`.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: ${slideWidth}px; max-height:${slideHeight}px}`,\r\n\t\t);\r\n\r\n\t\tdocument.documentElement.classList.add(\"reveal-print\", \"print-pdf\");\r\n\t\tdocument.body.style.width = `${pageWidth}px`;\r\n\t\tdocument.body.style.height = `${pageHeight}px`;\r\n\r\n\t\tconst viewportElement = this.Reveal.getViewportElement();\r\n\t\tlet presentationBackground;\r\n\t\tif (viewportElement) {\r\n\t\t\tconst viewportStyles = window.getComputedStyle(viewportElement);\r\n\t\t\tif (viewportStyles?.background) {\r\n\t\t\t\tpresentationBackground = viewportStyles.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Make sure stretch elements fit on slide\r\n\t\tawait new Promise(requestAnimationFrame);\r\n\t\tthis.Reveal.layoutSlideContents(slideWidth, slideHeight);\r\n\r\n\t\t// Batch scrollHeight access to prevent layout thrashing\r\n\t\tawait new Promise(requestAnimationFrame);\r\n\r\n\t\tconst slideScrollHeights = slides.map((slide) => slide.scrollHeight);\r\n\r\n\t\tconst pages = [];\r\n\t\tconst pageContainer = slides[0].parentNode;\r\n\t\tlet slideNumber = 1;\r\n\r\n\t\t// Slide and slide background layout\r\n\t\tslides.forEach(function (slide, index) {\r\n\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t// children will be\r\n\t\t\tif (slide.classList.contains(\"stack\") === false) {\r\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\r\n\t\t\t\tconst left = (pageWidth - slideWidth) / 2;\r\n\t\t\t\tlet top = (pageHeight - slideHeight) / 2;\r\n\r\n\t\t\t\tconst contentHeight = slideScrollHeights[index];\r\n\t\t\t\tlet numberOfPages = Math.max(Math.ceil(contentHeight / pageHeight), 1);\r\n\r\n\t\t\t\t// Adhere to configured pages per slide limit\r\n\t\t\t\tnumberOfPages = Math.min(numberOfPages, config.pdfMaxPagesPerSlide);\r\n\r\n\t\t\t\t// Center slides vertically\r\n\t\t\t\tif (\r\n\t\t\t\t\t(numberOfPages === 1 && config.center) ||\r\n\t\t\t\t\tslide.classList.contains(\"center\")\r\n\t\t\t\t) {\r\n\t\t\t\t\ttop = Math.max((pageHeight - contentHeight) / 2, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tconst page = document.createElement(\"div\");\r\n\t\t\t\tpages.push(page);\r\n\r\n\t\t\t\tpage.className = \"pdf-page\";\r\n\t\t\t\tpage.style.height = `${\r\n\t\t\t\t\t(pageHeight + config.pdfPageHeightOffset) * numberOfPages\r\n\t\t\t\t}px`;\r\n\r\n\t\t\t\t// Copy the presentation-wide background to each individual\r\n\t\t\t\t// page when printing\r\n\t\t\t\tif (presentationBackground) {\r\n\t\t\t\t\tpage.style.background = presentationBackground;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpage.appendChild(slide);\r\n\r\n\t\t\t\t// Position the slide inside of the page\r\n\t\t\t\tslide.style.left = `${left}px`;\r\n\t\t\t\tslide.style.top = `${top}px`;\r\n\t\t\t\tslide.style.width = `${slideWidth}px`;\r\n\r\n\t\t\t\tthis.Reveal.slideContent.layout(slide);\r\n\r\n\t\t\t\tif (slide.slideBackgroundElement) {\r\n\t\t\t\t\tpage.insertBefore(slide.slideBackgroundElement, slide);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject notes if `showNotes` is enabled\r\n\t\t\t\tif (config.showNotes) {\r\n\t\t\t\t\t// Are there notes for this slide?\r\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes(slide);\r\n\t\t\t\t\tif (notes) {\r\n\t\t\t\t\t\tconst notesSpacing = 8;\r\n\t\t\t\t\t\tconst notesLayout =\r\n\t\t\t\t\t\t\ttypeof config.showNotes === \"string\"\r\n\t\t\t\t\t\t\t\t? config.showNotes\r\n\t\t\t\t\t\t\t\t: \"inline\";\r\n\t\t\t\t\t\tconst notesElement = document.createElement(\"div\");\r\n\t\t\t\t\t\tnotesElement.classList.add(\"speaker-notes\");\r\n\t\t\t\t\t\tnotesElement.classList.add(\"speaker-notes-pdf\");\r\n\t\t\t\t\t\tnotesElement.setAttribute(\"data-layout\", notesLayout);\r\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\r\n\r\n\t\t\t\t\t\tif (notesLayout === \"separate-page\") {\r\n\t\t\t\t\t\t\tpages.push(notesElement);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotesElement.style.left = `${notesSpacing}px`;\r\n\t\t\t\t\t\t\tnotesElement.style.bottom = `${notesSpacing}px`;\r\n\t\t\t\t\t\t\tnotesElement.style.width = `${pageWidth - notesSpacing * 2}px`;\r\n\t\t\t\t\t\t\tpage.appendChild(notesElement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\r\n\t\t\t\tif (injectPageNumbers) {\r\n\t\t\t\t\tconst numberElement = document.createElement(\"div\");\r\n\t\t\t\t\tnumberElement.classList.add(\"slide-number\");\r\n\t\t\t\t\tnumberElement.classList.add(\"slide-number-pdf\");\r\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\r\n\t\t\t\t\tpage.appendChild(numberElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy page and show fragments one after another\r\n\t\t\t\tif (config.pdfSeparateFragments) {\r\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t\t\t\t// are part of the same group.\r\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort(\r\n\t\t\t\t\t\tpage.querySelectorAll(\".fragment\"),\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tlet previousFragmentStep;\r\n\r\n\t\t\t\t\tfragmentGroups.forEach(function (fragments, index) {\r\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\r\n\t\t\t\t\t\tif (previousFragmentStep) {\r\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach((fragment) => {\r\n\t\t\t\t\t\t\t\tfragment.classList.remove(\"current-fragment\");\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Show the fragments for the current index\r\n\t\t\t\t\t\tfragments.forEach((fragment) => {\r\n\t\t\t\t\t\t\tfragment.classList.add(\"visible\", \"current-fragment\");\r\n\t\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\t\t// Create a separate page for the current fragment state\r\n\t\t\t\t\t\tconst clonedPage = page.cloneNode(true);\r\n\r\n\t\t\t\t\t\t// Inject unique page numbers for fragments\r\n\t\t\t\t\t\tif (injectPageNumbers) {\r\n\t\t\t\t\t\t\tconst numberElement =\r\n\t\t\t\t\t\t\t\tclonedPage.querySelector(\".slide-number-pdf\");\r\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\r\n\t\t\t\t\t\t\tnumberElement.innerHTML += `.${fragmentNumber}`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpages.push(clonedPage);\r\n\r\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\r\n\t\t\t\t\tfragmentGroups.forEach((fragments) => {\r\n\t\t\t\t\t\tfragments.forEach((fragment) => {\r\n\t\t\t\t\t\t\tfragment.classList.remove(\"visible\", \"current-fragment\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// Show all fragments\r\n\t\t\t\telse {\r\n\t\t\t\t\tqueryAll(page, \".fragment:not(.fade-out)\").forEach((fragment) => {\r\n\t\t\t\t\t\tfragment.classList.add(\"visible\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tawait new Promise(requestAnimationFrame);\r\n\r\n\t\tpages.forEach((page) => pageContainer.appendChild(page));\r\n\r\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\r\n\t\tthis.Reveal.slideContent.layout(this.Reveal.getSlidesElement());\r\n\r\n\t\t// Notify subscribers that the PDF layout is good to go\r\n\t\tthis.Reveal.dispatchEvent({ type: \"pdf-ready\" });\r\n\r\n\t\tviewportElement.classList.remove(\"loading-scroll-mode\");\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the print mode is/should be activated.\r\n\t */\r\n\tisActive() {\r\n\t\treturn this.Reveal.getConfig().view === \"print\";\r\n\t}\r\n}\r\n","/**\r\n * Creates a visual progress bar for the presentation.\r\n */\r\nexport default class Progress {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onProgressClicked = this.onProgressClicked.bind(this);\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.className = \"progress\";\r\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\r\n\r\n\t\tthis.bar = document.createElement(\"span\");\r\n\t\tthis.element.appendChild(this.bar);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tthis.element.style.display = config.progress ? \"block\" : \"none\";\r\n\t}\r\n\r\n\tbind() {\r\n\t\tif (this.Reveal.getConfig().progress && this.element) {\r\n\t\t\tthis.element.addEventListener(\"click\", this.onProgressClicked, false);\r\n\t\t}\r\n\t}\r\n\r\n\tunbind() {\r\n\t\tif (this.Reveal.getConfig().progress && this.element) {\r\n\t\t\tthis.element.removeEventListener(\"click\", this.onProgressClicked, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the progress bar to reflect the current slide.\r\n\t */\r\n\tupdate() {\r\n\t\t// Update progress if enabled\r\n\t\tif (this.Reveal.getConfig().progress && this.bar) {\r\n\t\t\tlet scale = this.Reveal.getProgress();\r\n\r\n\t\t\t// Don't fill the progress bar if there's only one slide\r\n\t\t\tif (this.Reveal.getTotalSlides() < 2) {\r\n\t\t\t\tscale = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bar.style.transform = `scaleX(${scale})`;\r\n\t\t}\r\n\t}\r\n\r\n\tgetMaxWidth() {\r\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Clicking on the progress bar results in a navigation to the\r\n\t * closest approximate horizontal slide using this equation:\r\n\t *\r\n\t * ( clickX / presentationWidth ) * numberOfSlides\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonProgressClicked(event) {\r\n\t\tthis.Reveal.onUserInput(event);\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst slides = this.Reveal.getSlides();\r\n\t\tconst slidesTotal = slides.length;\r\n\t\tlet slideIndex = Math.floor(\r\n\t\t\t(event.clientX / this.getMaxWidth()) * slidesTotal,\r\n\t\t);\r\n\r\n\t\tif (this.Reveal.getConfig().rtl) {\r\n\t\t\tslideIndex = slidesTotal - slideIndex;\r\n\t\t}\r\n\r\n\t\tconst targetIndices = this.Reveal.getIndices(slides[slideIndex]);\r\n\t\tthis.Reveal.slide(targetIndices.h, targetIndices.v);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.element.remove();\r\n\t}\r\n}\r\n","import {\r\n\tHORIZONTAL_BACKGROUNDS_SELECTOR,\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n} from \"../utils/constants.js\";\r\nimport { queryAll } from \"../utils/util.js\";\r\n\r\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\r\nconst MAX_PROGRESS_SPACING = 4;\r\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\r\nconst MIN_PLAYHEAD_HEIGHT = 8;\r\n\r\n/**\r\n * The scroll view lets you read a reveal.js presentation\r\n * as a linear scrollable page.\r\n */\r\nexport default class ScrollView {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\t\tthis.activatedCallbacks = [];\r\n\r\n\t\tthis.onScroll = this.onScroll.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Activates the scroll view. This rearranges the presentation DOM\r\n\t * by—among other things—wrapping each slide in a page element.\r\n\t */\r\n\tactivate() {\r\n\t\tif (this.active) return;\r\n\r\n\t\tconst stateBeforeActivation = this.Reveal.getState();\r\n\r\n\t\tthis.active = true;\r\n\r\n\t\t// Store the full presentation HTML so that we can restore it\r\n\t\t// when/if the scroll view is deactivated\r\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\r\n\r\n\t\tconst horizontalSlides = queryAll(\r\n\t\t\tthis.Reveal.getRevealElement(),\r\n\t\t\tHORIZONTAL_SLIDES_SELECTOR,\r\n\t\t);\r\n\t\tconst horizontalBackgrounds = queryAll(\r\n\t\t\tthis.Reveal.getRevealElement(),\r\n\t\t\tHORIZONTAL_BACKGROUNDS_SELECTOR,\r\n\t\t);\r\n\r\n\t\tthis.viewportElement.classList.add(\"loading-scroll-mode\", \"reveal-scroll\");\r\n\r\n\t\tlet presentationBackground;\r\n\r\n\t\tconst viewportStyles = window.getComputedStyle(this.viewportElement);\r\n\t\tif (viewportStyles?.background) {\r\n\t\t\tpresentationBackground = viewportStyles.background;\r\n\t\t}\r\n\r\n\t\tconst pageElements = [];\r\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\r\n\r\n\t\tlet previousSlide;\r\n\r\n\t\t// Creates a new page element and appends the given slide/bg\r\n\t\t// to it.\r\n\t\tconst createPageElement = (slide, h, v, isVertical) => {\r\n\t\t\tlet contentContainer;\r\n\r\n\t\t\t// If this slide is part of an auto-animation sequence, we\r\n\t\t\t// group it under the same page element as the previous slide\r\n\t\t\tif (\r\n\t\t\t\tpreviousSlide &&\r\n\t\t\t\tthis.Reveal.shouldAutoAnimateBetween(previousSlide, slide)\r\n\t\t\t) {\r\n\t\t\t\tcontentContainer = document.createElement(\"div\");\r\n\t\t\t\tcontentContainer.className =\r\n\t\t\t\t\t\"scroll-page-content scroll-auto-animate-page\";\r\n\t\t\t\tcontentContainer.style.display = \"none\";\r\n\t\t\t\tpreviousSlide\r\n\t\t\t\t\t.closest(\".scroll-page-content\")\r\n\t\t\t\t\t.parentNode.appendChild(contentContainer);\r\n\t\t\t} else {\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tconst page = document.createElement(\"div\");\r\n\t\t\t\tpage.className = \"scroll-page\";\r\n\t\t\t\tpageElements.push(page);\r\n\r\n\t\t\t\t// This transfers over the background of the vertical stack containing\r\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\r\n\t\t\t\t// background.\r\n\t\t\t\tif (isVertical && horizontalBackgrounds.length > h) {\r\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\r\n\t\t\t\t\tconst pageBackground = window.getComputedStyle(slideBackground);\r\n\r\n\t\t\t\t\tif (pageBackground?.background) {\r\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\r\n\t\t\t\t\t} else if (presentationBackground) {\r\n\t\t\t\t\t\tpage.style.background = presentationBackground;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (presentationBackground) {\r\n\t\t\t\t\tpage.style.background = presentationBackground;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stickyContainer = document.createElement(\"div\");\r\n\t\t\t\tstickyContainer.className = \"scroll-page-sticky\";\r\n\t\t\t\tpage.appendChild(stickyContainer);\r\n\r\n\t\t\t\tcontentContainer = document.createElement(\"div\");\r\n\t\t\t\tcontentContainer.className = \"scroll-page-content\";\r\n\t\t\t\tstickyContainer.appendChild(contentContainer);\r\n\t\t\t}\r\n\r\n\t\t\tcontentContainer.appendChild(slide);\r\n\r\n\t\t\tslide.classList.remove(\"past\", \"future\");\r\n\t\t\tslide.setAttribute(\"data-index-h\", h);\r\n\t\t\tslide.setAttribute(\"data-index-v\", v);\r\n\r\n\t\t\tif (slide.slideBackgroundElement) {\r\n\t\t\t\tslide.slideBackgroundElement.remove(\"past\", \"future\");\r\n\t\t\t\tcontentContainer.insertBefore(slide.slideBackgroundElement, slide);\r\n\t\t\t}\r\n\r\n\t\t\tpreviousSlide = slide;\r\n\t\t};\r\n\r\n\t\t// Slide and slide background layout\r\n\t\thorizontalSlides.forEach((horizontalSlide, h) => {\r\n\t\t\tif (this.Reveal.isVerticalStack(horizontalSlide)) {\r\n\t\t\t\thorizontalSlide\r\n\t\t\t\t\t.querySelectorAll(\"section\")\r\n\t\t\t\t\t.forEach((verticalSlide, v) => {\r\n\t\t\t\t\t\tcreatePageElement(verticalSlide, h, v, true);\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tcreatePageElement(horizontalSlide, h, 0);\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tthis.createProgressBar();\r\n\r\n\t\t// Remove leftover stacks\r\n\t\tqueryAll(this.Reveal.getRevealElement(), \".stack\").forEach((stack) =>\r\n\t\t\tstack.remove(),\r\n\t\t);\r\n\r\n\t\t// Add our newly created pages to the DOM\r\n\t\tpageElements.forEach((page) => pageContainer.appendChild(page));\r\n\r\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\r\n\t\tthis.Reveal.slideContent.layout(this.Reveal.getSlidesElement());\r\n\r\n\t\tthis.Reveal.layout();\r\n\t\tthis.Reveal.setState(stateBeforeActivation);\r\n\r\n\t\tthis.activatedCallbacks.forEach((callback) => callback());\r\n\t\tthis.activatedCallbacks = [];\r\n\r\n\t\tthis.restoreScrollPosition();\r\n\r\n\t\tthis.viewportElement.classList.remove(\"loading-scroll-mode\");\r\n\t\tthis.viewportElement.addEventListener(\"scroll\", this.onScroll, {\r\n\t\t\tpassive: true,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Deactivates the scroll view and restores the standard slide-based\r\n\t * presentation.\r\n\t */\r\n\tdeactivate() {\r\n\t\tif (!this.active) return;\r\n\r\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.viewportElement.removeEventListener(\"scroll\", this.onScroll);\r\n\t\tthis.viewportElement.classList.remove(\"reveal-scroll\");\r\n\r\n\t\tthis.removeProgressBar();\r\n\r\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\r\n\t\tthis.Reveal.sync();\r\n\t\tthis.Reveal.setState(stateBeforeDeactivation);\r\n\r\n\t\tthis.slideHTMLBeforeActivation = null;\r\n\t}\r\n\r\n\ttoggle(override) {\r\n\t\tif (typeof override === \"boolean\") {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t} else {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the scroll view is currently active.\r\n\t */\r\n\tisActive() {\r\n\t\treturn this.active;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the progress bar component.\r\n\t */\r\n\tcreateProgressBar() {\r\n\t\tthis.progressBar = document.createElement(\"div\");\r\n\t\tthis.progressBar.className = \"scrollbar\";\r\n\r\n\t\tthis.progressBarInner = document.createElement(\"div\");\r\n\t\tthis.progressBarInner.className = \"scrollbar-inner\";\r\n\t\tthis.progressBar.appendChild(this.progressBarInner);\r\n\r\n\t\tthis.progressBarPlayhead = document.createElement(\"div\");\r\n\t\tthis.progressBarPlayhead.className = \"scrollbar-playhead\";\r\n\t\tthis.progressBarInner.appendChild(this.progressBarPlayhead);\r\n\r\n\t\tthis.viewportElement.insertBefore(\r\n\t\t\tthis.progressBar,\r\n\t\t\tthis.viewportElement.firstChild,\r\n\t\t);\r\n\r\n\t\tconst handleDocumentMouseMove = (event) => {\r\n\t\t\tlet progress =\r\n\t\t\t\t(event.clientY - this.progressBarInner.getBoundingClientRect().top) /\r\n\t\t\t\tthis.progressBarHeight;\r\n\t\t\tprogress = Math.max(Math.min(progress, 1), 0);\r\n\r\n\t\t\tthis.viewportElement.scrollTop =\r\n\t\t\t\tprogress *\r\n\t\t\t\t(this.viewportElement.scrollHeight - this.viewportElement.offsetHeight);\r\n\t\t};\r\n\r\n\t\tconst handleDocumentMouseUp = (event) => {\r\n\t\t\tthis.draggingProgressBar = false;\r\n\t\t\tthis.showProgressBar();\r\n\r\n\t\t\tdocument.removeEventListener(\"mousemove\", handleDocumentMouseMove);\r\n\t\t\tdocument.removeEventListener(\"mouseup\", handleDocumentMouseUp);\r\n\t\t};\r\n\r\n\t\tconst handleMouseDown = (event) => {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tthis.draggingProgressBar = true;\r\n\r\n\t\t\tdocument.addEventListener(\"mousemove\", handleDocumentMouseMove);\r\n\t\t\tdocument.addEventListener(\"mouseup\", handleDocumentMouseUp);\r\n\r\n\t\t\thandleDocumentMouseMove(event);\r\n\t\t};\r\n\r\n\t\tthis.progressBarInner.addEventListener(\"mousedown\", handleMouseDown);\r\n\t}\r\n\r\n\tremoveProgressBar() {\r\n\t\tif (this.progressBar) {\r\n\t\t\tthis.progressBar.remove();\r\n\t\t\tthis.progressBar = null;\r\n\t\t}\r\n\t}\r\n\r\n\tlayout() {\r\n\t\tif (this.isActive()) {\r\n\t\t\tthis.syncPages();\r\n\t\t\tthis.syncScrollPosition();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates our pages to match the latest configuration and\r\n\t * presentation size.\r\n\t */\r\n\tsyncPages() {\r\n\t\tconst config = this.Reveal.getConfig();\r\n\r\n\t\tconst slideSize = this.Reveal.getComputedSlideSize(\r\n\t\t\twindow.innerWidth,\r\n\t\t\twindow.innerHeight,\r\n\t\t);\r\n\t\tconst scale = this.Reveal.getScale();\r\n\t\tconst useCompactLayout = config.scrollLayout === \"compact\";\r\n\r\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\r\n\t\tconst compactHeight = slideSize.height * scale;\r\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\r\n\r\n\t\t// The height that needs to be scrolled between scroll triggers\r\n\t\tthis.scrollTriggerHeight = useCompactLayout\r\n\t\t\t? compactHeight\r\n\t\t\t: viewportHeight;\r\n\r\n\t\tthis.viewportElement.style.setProperty(\"--page-height\", `${pageHeight}px`);\r\n\t\tthis.viewportElement.style.scrollSnapType =\r\n\t\t\ttypeof config.scrollSnap === \"string\" ? `y ${config.scrollSnap}` : \"\";\r\n\r\n\t\t// This will hold all scroll triggers used to show/hide slides\r\n\t\tthis.slideTriggers = [];\r\n\r\n\t\tconst pageElements = Array.from(\r\n\t\t\tthis.Reveal.getRevealElement().querySelectorAll(\".scroll-page\"),\r\n\t\t);\r\n\r\n\t\tthis.pages = pageElements.map((pageElement) => {\r\n\t\t\tconst page = this.createPage({\r\n\t\t\t\tpageElement,\r\n\t\t\t\tslideElement: pageElement.querySelector(\"section\"),\r\n\t\t\t\tstickyElement: pageElement.querySelector(\".scroll-page-sticky\"),\r\n\t\t\t\tcontentElement: pageElement.querySelector(\".scroll-page-content\"),\r\n\t\t\t\tbackgroundElement: pageElement.querySelector(\".slide-background\"),\r\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll(\r\n\t\t\t\t\t\".scroll-auto-animate-page\",\r\n\t\t\t\t),\r\n\t\t\t\tautoAnimatePages: [],\r\n\t\t\t});\r\n\r\n\t\t\tpage.pageElement.style.setProperty(\r\n\t\t\t\t\"--slide-height\",\r\n\t\t\t\tconfig.center === true ? \"auto\" : `${slideSize.height}px`,\r\n\t\t\t);\r\n\r\n\t\t\tthis.slideTriggers.push({\r\n\t\t\t\tpage: page,\r\n\t\t\t\tactivate: () => this.activatePage(page),\r\n\t\t\t\tdeactivate: () => this.deactivatePage(page),\r\n\t\t\t});\r\n\r\n\t\t\t// Create scroll triggers that show/hide fragments\r\n\t\t\tthis.createFragmentTriggersForPage(page);\r\n\r\n\t\t\t// Create scroll triggers for triggering auto-animate steps\r\n\t\t\tif (page.autoAnimateElements.length > 0) {\r\n\t\t\t\tthis.createAutoAnimateTriggersForPage(page);\r\n\t\t\t}\r\n\r\n\t\t\tlet totalScrollTriggerCount = Math.max(page.scrollTriggers.length - 1, 0);\r\n\r\n\t\t\t// Each auto-animate step may include its own scroll triggers\r\n\t\t\t// for fragments, ensure we count those as well\r\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce((total, page) => {\r\n\t\t\t\treturn total + Math.max(page.scrollTriggers.length - 1, 0);\r\n\t\t\t}, page.autoAnimatePages.length);\r\n\r\n\t\t\t// Clean up from previous renders\r\n\t\t\tpage.pageElement\r\n\t\t\t\t.querySelectorAll(\".scroll-snap-point\")\r\n\t\t\t\t.forEach((el) => el.remove());\r\n\r\n\t\t\t// Create snap points for all scroll triggers\r\n\t\t\t// - Can't be absolute in FF\r\n\t\t\t// - Can't be 0-height in Safari\r\n\t\t\t// - Can't use snap-align on parent in Safari because then\r\n\t\t\t//   inner triggers won't work\r\n\t\t\tfor (let i = 0; i < totalScrollTriggerCount + 1; i++) {\r\n\t\t\t\tconst triggerStick = document.createElement(\"div\");\r\n\t\t\t\ttriggerStick.className = \"scroll-snap-point\";\r\n\t\t\t\ttriggerStick.style.height = `${this.scrollTriggerHeight}px`;\r\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout\r\n\t\t\t\t\t? \"center\"\r\n\t\t\t\t\t: \"start\";\r\n\t\t\t\tpage.pageElement.appendChild(triggerStick);\r\n\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\ttriggerStick.style.marginTop = `${-this.scrollTriggerHeight}px`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\r\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\r\n\t\t\t// a sticky slide.\r\n\t\t\tif (useCompactLayout && page.scrollTriggers.length > 0) {\r\n\t\t\t\tpage.pageHeight = viewportHeight;\r\n\t\t\t\tpage.pageElement.style.setProperty(\r\n\t\t\t\t\t\"--page-height\",\r\n\t\t\t\t\t`${viewportHeight}px`,\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpage.pageHeight = pageHeight;\r\n\t\t\t\tpage.pageElement.style.removeProperty(\"--page-height\");\r\n\t\t\t}\r\n\r\n\t\t\t// Add scroll padding based on how many scroll triggers we have\r\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\r\n\r\n\t\t\t// The total height including scrollable space\r\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\r\n\r\n\t\t\t// This is used to pad the height of our page in CSS\r\n\t\t\tpage.pageElement.style.setProperty(\r\n\t\t\t\t\"--page-scroll-padding\",\r\n\t\t\t\t`${page.scrollPadding}px`,\r\n\t\t\t);\r\n\r\n\t\t\t// If this is a sticky page, stick it to the vertical center\r\n\t\t\tif (totalScrollTriggerCount > 0) {\r\n\t\t\t\tpage.stickyElement.style.position = \"sticky\";\r\n\t\t\t\tpage.stickyElement.style.top = `${Math.max(\r\n\t\t\t\t\t(viewportHeight - page.pageHeight) / 2,\r\n\t\t\t\t\t0,\r\n\t\t\t\t)}px`;\r\n\t\t\t} else {\r\n\t\t\t\tpage.stickyElement.style.position = \"relative\";\r\n\t\t\t\tpage.pageElement.style.scrollSnapAlign =\r\n\t\t\t\t\tpage.pageHeight < viewportHeight ? \"center\" : \"start\";\r\n\t\t\t}\r\n\r\n\t\t\treturn page;\r\n\t\t});\r\n\r\n\t\tthis.setTriggerRanges();\r\n\r\n\t\t/*\r\n\t\tconsole.log(this.slideTriggers.map( t => {\r\n\t\t\treturn {\r\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\r\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\r\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\r\n\t\t\t\t}).join( ', ' ),\r\n\t\t\t}\r\n\t\t}))\r\n\t\t*/\r\n\r\n\t\tthis.viewportElement.setAttribute(\"data-scrollbar\", config.scrollProgress);\r\n\r\n\t\tif (config.scrollProgress && this.totalScrollTriggerCount > 1) {\r\n\t\t\t// Create the progress bar if it doesn't already exist\r\n\t\t\tif (!this.progressBar) this.createProgressBar();\r\n\r\n\t\t\tthis.syncProgressBar();\r\n\t\t} else {\r\n\t\t\tthis.removeProgressBar();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates and sets the scroll range for all of our scroll\r\n\t * triggers.\r\n\t */\r\n\tsetTriggerRanges() {\r\n\t\t// Calculate the total number of scroll triggers\r\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce(\r\n\t\t\t(total, trigger) => {\r\n\t\t\t\treturn total + Math.max(trigger.page.scrollTriggers.length, 1);\r\n\t\t\t},\r\n\t\t\t0,\r\n\t\t);\r\n\r\n\t\tlet rangeStart = 0;\r\n\r\n\t\t// Calculate the scroll range of each scroll trigger on a scale\r\n\t\t// of 0-1\r\n\t\tthis.slideTriggers.forEach((trigger, i) => {\r\n\t\t\ttrigger.range = [\r\n\t\t\t\trangeStart,\r\n\t\t\t\trangeStart +\r\n\t\t\t\t\tMath.max(trigger.page.scrollTriggers.length, 1) /\r\n\t\t\t\t\t\tthis.totalScrollTriggerCount,\r\n\t\t\t];\r\n\r\n\t\t\tconst scrollTriggerSegmentSize =\r\n\t\t\t\t(trigger.range[1] - trigger.range[0]) /\r\n\t\t\t\ttrigger.page.scrollTriggers.length;\r\n\t\t\t// Set the range for each inner scroll trigger\r\n\t\t\ttrigger.page.scrollTriggers.forEach((scrollTrigger, i) => {\r\n\t\t\t\tscrollTrigger.range = [\r\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\r\n\t\t\t\t\trangeStart + (i + 1) * scrollTriggerSegmentSize,\r\n\t\t\t\t];\r\n\t\t\t});\r\n\r\n\t\t\trangeStart = trigger.range[1];\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates one scroll trigger for each fragments in the given page.\r\n\t *\r\n\t * @param {*} page\r\n\t */\r\n\tcreateFragmentTriggersForPage(page, slideElement) {\r\n\t\tslideElement = slideElement || page.slideElement;\r\n\r\n\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t// are part of the same group.\r\n\t\tconst fragmentGroups = this.Reveal.fragments.sort(\r\n\t\t\tslideElement.querySelectorAll(\".fragment\"),\r\n\t\t\ttrue,\r\n\t\t);\r\n\r\n\t\t// Create scroll triggers that show/hide fragments\r\n\t\tif (fragmentGroups.length) {\r\n\t\t\tpage.fragments = this.Reveal.fragments.sort(\r\n\t\t\t\tslideElement.querySelectorAll(\".fragment:not(.disabled)\"),\r\n\t\t\t);\r\n\t\t\tpage.scrollTriggers.push(\r\n\t\t\t\t// Trigger for the initial state with no fragments visible\r\n\t\t\t\t{\r\n\t\t\t\t\tactivate: () => {\r\n\t\t\t\t\t\tthis.Reveal.fragments.update(-1, page.fragments, slideElement);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t);\r\n\r\n\t\t\t// Triggers for each fragment group\r\n\t\t\tfragmentGroups.forEach((fragments, i) => {\r\n\t\t\t\tpage.scrollTriggers.push({\r\n\t\t\t\t\tactivate: () => {\r\n\t\t\t\t\t\tthis.Reveal.fragments.update(i, page.fragments, slideElement);\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn page.scrollTriggers.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates scroll triggers for the auto-animate steps in the\r\n\t * given page.\r\n\t *\r\n\t * @param {*} page\r\n\t */\r\n\tcreateAutoAnimateTriggersForPage(page) {\r\n\t\tif (page.autoAnimateElements.length > 0) {\r\n\t\t\t// Triggers for each subsequent auto-animate slide\r\n\t\t\tthis.slideTriggers.push(\r\n\t\t\t\t...Array.from(page.autoAnimateElements).map((autoAnimateElement, i) => {\r\n\t\t\t\t\tconst autoAnimatePage = this.createPage({\r\n\t\t\t\t\t\tslideElement: autoAnimateElement.querySelector(\"section\"),\r\n\t\t\t\t\t\tcontentElement: autoAnimateElement,\r\n\t\t\t\t\t\tbackgroundElement:\r\n\t\t\t\t\t\t\tautoAnimateElement.querySelector(\".slide-background\"),\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\r\n\t\t\t\t\tthis.createFragmentTriggersForPage(\r\n\t\t\t\t\t\tautoAnimatePage,\r\n\t\t\t\t\t\tautoAnimatePage.slideElement,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tpage.autoAnimatePages.push(autoAnimatePage);\r\n\r\n\t\t\t\t\t// Return our slide trigger\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tpage: autoAnimatePage,\r\n\t\t\t\t\t\tactivate: () => this.activatePage(autoAnimatePage),\r\n\t\t\t\t\t\tdeactivate: () => this.deactivatePage(autoAnimatePage),\r\n\t\t\t\t\t};\r\n\t\t\t\t}),\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method for creating a page definition and adding\r\n\t * required fields. A \"page\" is a slide or auto-animate step.\r\n\t */\r\n\tcreatePage(page) {\r\n\t\tpage.scrollTriggers = [];\r\n\t\tpage.indexh = Number.parseInt(\r\n\t\t\tpage.slideElement.getAttribute(\"data-index-h\"),\r\n\t\t\t10,\r\n\t\t);\r\n\t\tpage.indexv = Number.parseInt(\r\n\t\t\tpage.slideElement.getAttribute(\"data-index-v\"),\r\n\t\t\t10,\r\n\t\t);\r\n\r\n\t\treturn page;\r\n\t}\r\n\r\n\t/**\r\n\t * Rerenders progress bar segments so that they match the current\r\n\t * reveal.js config and size.\r\n\t */\r\n\tsyncProgressBar() {\r\n\t\tthis.progressBarInner\r\n\t\t\t.querySelectorAll(\".scrollbar-slide\")\r\n\t\t\t.forEach((slide) => slide.remove());\r\n\r\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\r\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\r\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\r\n\r\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\r\n\t\tthis.playheadHeight = Math.max(\r\n\t\t\tviewportHeightFactor * this.progressBarHeight,\r\n\t\t\tMIN_PLAYHEAD_HEIGHT,\r\n\t\t);\r\n\t\tthis.progressBarScrollableHeight =\r\n\t\t\tthis.progressBarHeight - this.playheadHeight;\r\n\r\n\t\tconst progressSegmentHeight =\r\n\t\t\t(viewportHeight / scrollHeight) * this.progressBarHeight;\r\n\t\tconst spacing = Math.min(progressSegmentHeight / 8, MAX_PROGRESS_SPACING);\r\n\r\n\t\tthis.progressBarPlayhead.style.height = `${\r\n\t\t\tthis.playheadHeight - spacing\r\n\t\t}px`;\r\n\r\n\t\t// Don't show individual segments if they're too small\r\n\t\tif (progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT) {\r\n\t\t\tthis.slideTriggers.forEach((slideTrigger) => {\r\n\t\t\t\tconst { page } = slideTrigger;\r\n\r\n\t\t\t\t// Visual representation of a slide\r\n\t\t\t\tpage.progressBarSlide = document.createElement(\"div\");\r\n\t\t\t\tpage.progressBarSlide.className = \"scrollbar-slide\";\r\n\t\t\t\tpage.progressBarSlide.style.top = `${\r\n\t\t\t\t\tslideTrigger.range[0] * this.progressBarHeight\r\n\t\t\t\t}px`;\r\n\t\t\t\tpage.progressBarSlide.style.height = `${\r\n\t\t\t\t\t(slideTrigger.range[1] - slideTrigger.range[0]) *\r\n\t\t\t\t\t\tthis.progressBarHeight -\r\n\t\t\t\t\tspacing\r\n\t\t\t\t}px`;\r\n\t\t\t\tpage.progressBarSlide.classList.toggle(\r\n\t\t\t\t\t\"has-triggers\",\r\n\t\t\t\t\tpage.scrollTriggers.length > 0,\r\n\t\t\t\t);\r\n\t\t\t\tthis.progressBarInner.appendChild(page.progressBarSlide);\r\n\r\n\t\t\t\t// Visual representations of each scroll trigger\r\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map((trigger, i) => {\r\n\t\t\t\t\tconst triggerElement = document.createElement(\"div\");\r\n\t\t\t\t\ttriggerElement.className = \"scrollbar-trigger\";\r\n\t\t\t\t\ttriggerElement.style.top = `${\r\n\t\t\t\t\t\t(trigger.range[0] - slideTrigger.range[0]) * this.progressBarHeight\r\n\t\t\t\t\t}px`;\r\n\t\t\t\t\ttriggerElement.style.height = `${\r\n\t\t\t\t\t\t(trigger.range[1] - trigger.range[0]) * this.progressBarHeight -\r\n\t\t\t\t\t\tspacing\r\n\t\t\t\t\t}px`;\r\n\t\t\t\t\tpage.progressBarSlide.appendChild(triggerElement);\r\n\r\n\t\t\t\t\tif (i === 0) triggerElement.style.display = \"none\";\r\n\r\n\t\t\t\t\treturn triggerElement;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.pages.forEach((page) => (page.progressBarSlide = null));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current scroll position and updates our active\r\n\t * trigger states accordingly.\r\n\t */\r\n\tsyncScrollPosition() {\r\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\r\n\t\tconst viewportHeightFactor =\r\n\t\t\tviewportHeight / this.viewportElement.scrollHeight;\r\n\r\n\t\tconst scrollTop = this.viewportElement.scrollTop;\r\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight;\r\n\t\tconst scrollProgress = Math.max(Math.min(scrollTop / scrollHeight, 1), 0);\r\n\t\tconst scrollProgressMid = Math.max(\r\n\t\t\tMath.min(\r\n\t\t\t\t(scrollTop + viewportHeight / 2) / this.viewportElement.scrollHeight,\r\n\t\t\t\t1,\r\n\t\t\t),\r\n\t\t\t0,\r\n\t\t);\r\n\r\n\t\tlet activePage;\r\n\r\n\t\tthis.slideTriggers.forEach((trigger) => {\r\n\t\t\tconst { page } = trigger;\r\n\r\n\t\t\tconst shouldPreload =\r\n\t\t\t\tscrollProgress >= trigger.range[0] - viewportHeightFactor * 2 &&\r\n\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor * 2;\r\n\r\n\t\t\t// Load slides that are within the preload range\r\n\t\t\tif (shouldPreload && !page.loaded) {\r\n\t\t\t\tpage.loaded = true;\r\n\t\t\t\tthis.Reveal.slideContent.load(page.slideElement);\r\n\t\t\t} else if (page.loaded) {\r\n\t\t\t\tpage.loaded = false;\r\n\t\t\t\tthis.Reveal.slideContent.unload(page.slideElement);\r\n\t\t\t}\r\n\r\n\t\t\t// If we're within this trigger range, activate it\r\n\t\t\tif (\r\n\t\t\t\tscrollProgress >= trigger.range[0] &&\r\n\t\t\t\tscrollProgress <= trigger.range[1]\r\n\t\t\t) {\r\n\t\t\t\tthis.activateTrigger(trigger);\r\n\t\t\t\tactivePage = trigger.page;\r\n\t\t\t}\r\n\t\t\t// .. otherwise deactivate\r\n\t\t\telse if (trigger.active) {\r\n\t\t\t\tthis.deactivateTrigger(trigger);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Each page can have its own scroll triggers, check if any of those\r\n\t\t// need to be activated/deactivated\r\n\t\tif (activePage) {\r\n\t\t\tactivePage.scrollTriggers.forEach((trigger) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tscrollProgressMid >= trigger.range[0] &&\r\n\t\t\t\t\tscrollProgressMid <= trigger.range[1]\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.activateTrigger(trigger);\r\n\t\t\t\t} else if (trigger.active) {\r\n\t\t\t\t\tthis.deactivateTrigger(trigger);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Update our visual progress indication\r\n\t\tthis.setProgressBarValue(\r\n\t\t\tscrollTop / (this.viewportElement.scrollHeight - viewportHeight),\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the progress bar playhead to the specified position.\r\n\t *\r\n\t * @param {number} progress 0-1\r\n\t */\r\n\tsetProgressBarValue(progress) {\r\n\t\tif (this.progressBar) {\r\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${\r\n\t\t\t\tprogress * this.progressBarScrollableHeight\r\n\t\t\t}px)`;\r\n\r\n\t\t\tthis.getAllPages()\r\n\t\t\t\t.filter((page) => page.progressBarSlide)\r\n\t\t\t\t.forEach((page) => {\r\n\t\t\t\t\tpage.progressBarSlide.classList.toggle(\r\n\t\t\t\t\t\t\"active\",\r\n\t\t\t\t\t\tpage.active === true,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tpage.scrollTriggers.forEach((trigger, i) => {\r\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle(\r\n\t\t\t\t\t\t\t\"active\",\r\n\t\t\t\t\t\t\tpage.active === true && trigger.active === true,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.showProgressBar();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Show the progress bar and, if configured, automatically hide\r\n\t * it after a delay.\r\n\t */\r\n\tshowProgressBar() {\r\n\t\tthis.progressBar.classList.add(\"visible\");\r\n\r\n\t\tclearTimeout(this.hideProgressBarTimeout);\r\n\r\n\t\tif (\r\n\t\t\tthis.Reveal.getConfig().scrollProgress === \"auto\" &&\r\n\t\t\t!this.draggingProgressBar\r\n\t\t) {\r\n\t\t\tthis.hideProgressBarTimeout = setTimeout(() => {\r\n\t\t\t\tif (this.progressBar) {\r\n\t\t\t\t\tthis.progressBar.classList.remove(\"visible\");\r\n\t\t\t\t}\r\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scroll to the previous page.\r\n\t */\r\n\tprev() {\r\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Scroll to the next page.\r\n\t */\r\n\tnext() {\r\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Scrolls the given slide element into view.\r\n\t *\r\n\t * @param {HTMLElement} slideElement\r\n\t */\r\n\tscrollToSlide(slideElement) {\r\n\t\t// If the scroll view isn't active yet, queue this action\r\n\t\tif (!this.active) {\r\n\t\t\tthis.activatedCallbacks.push(() => this.scrollToSlide(slideElement));\r\n\t\t} else {\r\n\t\t\t// Find the trigger for this slide\r\n\t\t\tconst trigger = this.getScrollTriggerBySlide(slideElement);\r\n\r\n\t\t\tif (trigger) {\r\n\t\t\t\t// Use the trigger's range to calculate the scroll position\r\n\t\t\t\tthis.viewportElement.scrollTop =\r\n\t\t\t\t\ttrigger.range[0] *\r\n\t\t\t\t\t(this.viewportElement.scrollHeight -\r\n\t\t\t\t\t\tthis.viewportElement.offsetHeight);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Persists the current scroll position to session storage\r\n\t * so that it can be restored.\r\n\t */\r\n\tstoreScrollPosition() {\r\n\t\tclearTimeout(this.storeScrollPositionTimeout);\r\n\r\n\t\tthis.storeScrollPositionTimeout = setTimeout(() => {\r\n\t\t\tsessionStorage.setItem(\r\n\t\t\t\t\"reveal-scroll-top\",\r\n\t\t\t\tthis.viewportElement.scrollTop,\r\n\t\t\t);\r\n\t\t\tsessionStorage.setItem(\r\n\t\t\t\t\"reveal-scroll-origin\",\r\n\t\t\t\tlocation.origin + location.pathname,\r\n\t\t\t);\r\n\r\n\t\t\tthis.storeScrollPositionTimeout = null;\r\n\t\t}, 50);\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the scroll position when a deck is reloader.\r\n\t */\r\n\trestoreScrollPosition() {\r\n\t\tconst scrollPosition = sessionStorage.getItem(\"reveal-scroll-top\");\r\n\t\tconst scrollOrigin = sessionStorage.getItem(\"reveal-scroll-origin\");\r\n\r\n\t\tif (\r\n\t\t\tscrollPosition &&\r\n\t\t\tscrollOrigin === location.origin + location.pathname\r\n\t\t) {\r\n\t\t\tthis.viewportElement.scrollTop = Number.parseInt(scrollPosition, 10);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Activates the given page and starts its embedded content\r\n\t * if there is any.\r\n\t *\r\n\t * @param {object} page\r\n\t */\r\n\tactivatePage(page) {\r\n\t\tif (!page.active) {\r\n\t\t\tpage.active = true;\r\n\r\n\t\t\tconst {\r\n\t\t\t\tslideElement,\r\n\t\t\t\tbackgroundElement,\r\n\t\t\t\tcontentElement,\r\n\t\t\t\tindexh,\r\n\t\t\t\tindexv,\r\n\t\t\t} = page;\r\n\r\n\t\t\tcontentElement.style.display = \"block\";\r\n\r\n\t\t\tslideElement.classList.add(\"present\");\r\n\r\n\t\t\tif (backgroundElement) {\r\n\t\t\t\tbackgroundElement.classList.add(\"present\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.setCurrentScrollPage(slideElement, indexh, indexv);\r\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement(\r\n\t\t\t\tslideElement,\r\n\t\t\t\tthis.viewportElement,\r\n\t\t\t);\r\n\r\n\t\t\t// If this page is part of an auto-animation there will be one\r\n\t\t\t// content element per auto-animated page. We need to show the\r\n\t\t\t// current page and hide all others.\r\n\t\t\tArray.from(\r\n\t\t\t\tcontentElement.parentNode.querySelectorAll(\".scroll-page-content\"),\r\n\t\t\t).forEach((sibling) => {\r\n\t\t\t\tif (sibling !== contentElement) {\r\n\t\t\t\t\tsibling.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Deactivates the page after it has been visible.\r\n\t *\r\n\t * @param {object} page\r\n\t */\r\n\tdeactivatePage(page) {\r\n\t\tif (page.active) {\r\n\t\t\tpage.active = false;\r\n\t\t\tif (page.slideElement) page.slideElement.classList.remove(\"present\");\r\n\t\t\tif (page.backgroundElement)\r\n\t\t\t\tpage.backgroundElement.classList.remove(\"present\");\r\n\t\t}\r\n\t}\r\n\r\n\tactivateTrigger(trigger) {\r\n\t\tif (!trigger.active) {\r\n\t\t\ttrigger.active = true;\r\n\t\t\ttrigger.activate();\r\n\t\t}\r\n\t}\r\n\r\n\tdeactivateTrigger(trigger) {\r\n\t\tif (trigger.active) {\r\n\t\t\ttrigger.active = false;\r\n\r\n\t\t\tif (trigger.deactivate) {\r\n\t\t\t\ttrigger.deactivate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\r\n\t * slide had before being linearized).\r\n\t *\r\n\t * @param {number} h\r\n\t * @param {number} v\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetSlideByIndices(h, v) {\r\n\t\tconst page = this.getAllPages().find((page) => {\r\n\t\t\treturn page.indexh === h && page.indexv === v;\r\n\t\t});\r\n\r\n\t\treturn page ? page.slideElement : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a list of all scroll triggers for the given slide\r\n\t * DOM element.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @returns {Array}\r\n\t */\r\n\tgetScrollTriggerBySlide(slide) {\r\n\t\treturn this.slideTriggers.find(\r\n\t\t\t(trigger) => trigger.page.slideElement === slide,\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all pages in the scroll view. This includes\r\n\t * both top-level slides and auto-animate steps.\r\n\t *\r\n\t * @returns {Array}\r\n\t */\r\n\tgetAllPages() {\r\n\t\treturn this.pages.flatMap((page) => [\r\n\t\t\tpage,\r\n\t\t\t...(page.autoAnimatePages || []),\r\n\t\t]);\r\n\t}\r\n\r\n\tonScroll() {\r\n\t\tthis.syncScrollPosition();\r\n\t\tthis.storeScrollPosition();\r\n\t}\r\n\r\n\tget viewportElement() {\r\n\t\treturn this.Reveal.getViewportElement();\r\n\t}\r\n}\r\n","/**\n * fitty v2.4.2 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{sync:!1};e.cancelAnimationFrame(l);var n=function(){return s(a.filter((function(e){return e.dirty&&e.active})))};if(t.sync)return n();l=e.requestAnimationFrame(n)}:function(){},c=function(e){return function(t){a.forEach((function(t){return t.dirty=e})),u(t)}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(n){e.dirty=t,e.active&&u(n)}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { isMobile } from \"../utils/device.js\";\r\nimport {\r\n\tclosest,\r\n\tencodeRFC3986URI,\r\n\textend,\r\n\tgetMimeTypeFromFile,\r\n\tqueryAll,\r\n} from \"../utils/util.js\";\r\n\r\nimport fitty from \"fitty\";\r\n\r\n/**\r\n * Handles loading, unloading and playback of slide\r\n * content such as images, videos and iframes.\r\n */\r\nexport default class SlideContent {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Should the given element be preloaded?\r\n\t * Decides based on local element attributes and global config.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tshouldPreload(element) {\r\n\t\tif (this.Reveal.isScrollView()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Prefer an explicit global preload setting\r\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\r\n\r\n\t\t// If no global setting is available, fall back on the element's\r\n\t\t// own preload setting\r\n\t\tif (typeof preload !== \"boolean\") {\r\n\t\t\tpreload = element.hasAttribute(\"data-preload\");\r\n\t\t}\r\n\r\n\t\treturn preload;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the given slide is within the configured view\r\n\t * distance. Shows the slide element and loads any content\r\n\t * that is set to load lazily (data-src).\r\n\t *\r\n\t * @param {HTMLElement} slide Slide to show\r\n\t */\r\n\tload(slide, options = {}) {\r\n\t\t// Show the slide element\r\n\t\tslide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t// Media elements with data-src attributes\r\n\t\tqueryAll(\r\n\t\t\tslide,\r\n\t\t\t\"img[data-src], video[data-src], audio[data-src], iframe[data-src]\",\r\n\t\t).forEach((element) => {\r\n\t\t\tif (element.tagName !== \"IFRAME\" || this.shouldPreload(element)) {\r\n\t\t\t\telement.setAttribute(\"src\", element.getAttribute(\"data-src\"));\r\n\t\t\t\telement.setAttribute(\"data-lazy-loaded\", \"\");\r\n\t\t\t\telement.removeAttribute(\"data-src\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Media elements with <source> children\r\n\t\tqueryAll(slide, \"video, audio\").forEach((media) => {\r\n\t\t\tlet sources = 0;\r\n\r\n\t\t\tqueryAll(media, \"source[data-src]\").forEach((source) => {\r\n\t\t\t\tsource.setAttribute(\"src\", source.getAttribute(\"data-src\"));\r\n\t\t\t\tsource.removeAttribute(\"data-src\");\r\n\t\t\t\tsource.setAttribute(\"data-lazy-loaded\", \"\");\r\n\t\t\t\tsources += 1;\r\n\t\t\t});\r\n\r\n\t\t\t// Enable inline video playback in mobile Safari\r\n\t\t\tif (isMobile && media.tagName === \"VIDEO\") {\r\n\t\t\t\tmedia.setAttribute(\"playsinline\", \"\");\r\n\t\t\t}\r\n\r\n\t\t\t// If we rewrote sources for this video/audio element, we need\r\n\t\t\t// to manually tell it to load from its new origin\r\n\t\t\tif (sources > 0) {\r\n\t\t\t\tmedia.load();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Show the corresponding background element\r\n\t\tconst background = slide.slideBackgroundElement;\r\n\t\tif (background) {\r\n\t\t\tbackground.style.display = \"block\";\r\n\r\n\t\t\tconst backgroundContent = slide.slideBackgroundContentElement;\r\n\t\t\tconst backgroundIframe = slide.getAttribute(\"data-background-iframe\");\r\n\r\n\t\t\t// If the background contains media, load it\r\n\t\t\tif (background.hasAttribute(\"data-loaded\") === false) {\r\n\t\t\t\tbackground.setAttribute(\"data-loaded\", \"true\");\r\n\r\n\t\t\t\tconst backgroundImage = slide.getAttribute(\"data-background-image\");\r\n\t\t\t\tconst backgroundVideo = slide.getAttribute(\"data-background-video\");\r\n\t\t\t\tconst backgroundVideoLoop = slide.hasAttribute(\r\n\t\t\t\t\t\"data-background-video-loop\",\r\n\t\t\t\t);\r\n\t\t\t\tconst backgroundVideoMuted = slide.hasAttribute(\r\n\t\t\t\t\t\"data-background-video-muted\",\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Images\r\n\t\t\t\tif (backgroundImage) {\r\n\t\t\t\t\t// base64\r\n\t\t\t\t\tif (/^data:/.test(backgroundImage.trim())) {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// URL(s)\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage\r\n\t\t\t\t\t\t\t.split(\",\")\r\n\t\t\t\t\t\t\t.map((background) => {\r\n\t\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\r\n\t\t\t\t\t\t\t\tconst decoded = decodeURI(background.trim());\r\n\t\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.join(\",\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Videos\r\n\t\t\t\telse if (backgroundVideo && !this.Reveal.isSpeakerNotes()) {\r\n\t\t\t\t\tconst video = document.createElement(\"video\");\r\n\r\n\t\t\t\t\tif (backgroundVideoLoop) {\r\n\t\t\t\t\t\tvideo.setAttribute(\"loop\", \"\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (backgroundVideoMuted) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Enable inline playback in mobile Safari\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Mute is required for video to play when using\r\n\t\t\t\t\t// swipe gestures to navigate since they don't\r\n\t\t\t\t\t// count as direct user actions :'(\r\n\t\t\t\t\tif (isMobile) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t\tvideo.setAttribute(\"playsinline\", \"\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support comma separated lists of video sources\r\n\t\t\t\t\tbackgroundVideo.split(\",\").forEach((source) => {\r\n\t\t\t\t\t\tconst sourceElement = document.createElement(\"source\");\r\n\t\t\t\t\t\tsourceElement.setAttribute(\"src\", source);\r\n\r\n\t\t\t\t\t\tconst type = getMimeTypeFromFile(source);\r\n\t\t\t\t\t\tif (type) {\r\n\t\t\t\t\t\t\tsourceElement.setAttribute(\"type\", type);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvideo.appendChild(sourceElement);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild(video);\r\n\t\t\t\t}\r\n\t\t\t\t// Iframes\r\n\t\t\t\telse if (backgroundIframe && options.excludeIframes !== true) {\r\n\t\t\t\t\tconst iframe = document.createElement(\"iframe\");\r\n\t\t\t\t\tiframe.setAttribute(\"allowfullscreen\", \"\");\r\n\t\t\t\t\tiframe.setAttribute(\"mozallowfullscreen\", \"\");\r\n\t\t\t\t\tiframe.setAttribute(\"webkitallowfullscreen\", \"\");\r\n\t\t\t\t\tiframe.setAttribute(\"allow\", \"autoplay\");\r\n\r\n\t\t\t\t\tiframe.setAttribute(\"data-src\", backgroundIframe);\r\n\r\n\t\t\t\t\tiframe.style.width = \"100%\";\r\n\t\t\t\t\tiframe.style.height = \"100%\";\r\n\t\t\t\t\tiframe.style.maxHeight = \"100%\";\r\n\t\t\t\t\tiframe.style.maxWidth = \"100%\";\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild(iframe);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start loading preloadable iframes\r\n\t\t\tconst backgroundIframeElement =\r\n\t\t\t\tbackgroundContent.querySelector(\"iframe[data-src]\");\r\n\t\t\tif (backgroundIframeElement) {\r\n\t\t\t\t// Check if this iframe is eligible to be preloaded\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.shouldPreload(background) &&\r\n\t\t\t\t\t!/autoplay=(1|true|yes)/gi.test(backgroundIframe)\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tbackgroundIframeElement.getAttribute(\"src\") !== backgroundIframe\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute(\"src\", backgroundIframe);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.layout(slide);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JS-dependent layout helpers for the scope.\r\n\t */\r\n\tlayout(scopeElement) {\r\n\t\t// Autosize text with the r-fit-text class based on the\r\n\t\t// size of its container. This needs to happen after the\r\n\t\t// slide is visible in order to measure the text.\r\n\t\tArray.from(scopeElement.querySelectorAll(\".r-fit-text\")).forEach(\r\n\t\t\t(element) => {\r\n\t\t\t\tfitty(element, {\r\n\t\t\t\t\tminSize: 24,\r\n\t\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\r\n\t\t\t\t\tobserveMutations: false,\r\n\t\t\t\t\tobserveWindow: false,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Unloads and hides the given slide. This is called when the\r\n\t * slide is moved outside of the configured view distance.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tunload(slide) {\r\n\t\t// Hide the slide element\r\n\t\tslide.style.display = \"none\";\r\n\r\n\t\t// Hide the corresponding background element\r\n\t\tconst background = this.Reveal.getSlideBackground(slide);\r\n\t\tif (background) {\r\n\t\t\tbackground.style.display = \"none\";\r\n\r\n\t\t\t// Unload any background iframes\r\n\t\t\tqueryAll(background, \"iframe[src]\").forEach((element) => {\r\n\t\t\t\telement.removeAttribute(\"src\");\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Reset lazy-loaded media elements with src attributes\r\n\t\tqueryAll(\r\n\t\t\tslide,\r\n\t\t\t\"video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]\",\r\n\t\t).forEach((element) => {\r\n\t\t\telement.setAttribute(\"data-src\", element.getAttribute(\"src\"));\r\n\t\t\telement.removeAttribute(\"src\");\r\n\t\t});\r\n\r\n\t\t// Reset lazy-loaded media elements with <source> children\r\n\t\tqueryAll(\r\n\t\t\tslide,\r\n\t\t\t\"video[data-lazy-loaded] source[src], audio source[src]\",\r\n\t\t).forEach((source) => {\r\n\t\t\tsource.setAttribute(\"data-src\", source.getAttribute(\"src\"));\r\n\t\t\tsource.removeAttribute(\"src\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Enforces origin-specific format rules for embedded media.\r\n\t */\r\n\tformatEmbeddedContent() {\r\n\t\tconst _appendParamToIframeSource = (sourceAttribute, sourceURL, param) => {\r\n\t\t\tqueryAll(\r\n\t\t\t\tthis.Reveal.getSlidesElement(),\r\n\t\t\t\t`iframe[${sourceAttribute}*=\"${sourceURL}\"]`,\r\n\t\t\t).forEach((el) => {\r\n\t\t\t\tconst src = el.getAttribute(sourceAttribute);\r\n\t\t\t\tif (src && src.indexOf(param) === -1) {\r\n\t\t\t\t\tel.setAttribute(\r\n\t\t\t\t\t\tsourceAttribute,\r\n\t\t\t\t\t\tsrc + (!/\\?/.test(src) ? \"?\" : \"&\") + param,\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// YouTube frames must include \"?enablejsapi=1\"\r\n\t\t_appendParamToIframeSource(\"src\", \"youtube.com/embed/\", \"enablejsapi=1\");\r\n\t\t_appendParamToIframeSource(\r\n\t\t\t\"data-src\",\r\n\t\t\t\"youtube.com/embed/\",\r\n\t\t\t\"enablejsapi=1\",\r\n\t\t);\r\n\r\n\t\t// Vimeo frames must include \"?api=1\"\r\n\t\t_appendParamToIframeSource(\"src\", \"player.vimeo.com/\", \"api=1\");\r\n\t\t_appendParamToIframeSource(\"data-src\", \"player.vimeo.com/\", \"api=1\");\r\n\t}\r\n\r\n\t/**\r\n\t * Start playback of any embedded content inside of\r\n\t * the given element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstartEmbeddedContent(element) {\r\n\t\tif (element && !this.Reveal.isSpeakerNotes()) {\r\n\t\t\t// Restart GIFs\r\n\t\t\tqueryAll(element, 'img[src$=\".gif\"]').forEach((el) => {\r\n\t\t\t\t// Setting the same unchanged source like this was confirmed\r\n\t\t\t\t// to work in Chrome, FF & Safari\r\n\t\t\t\tel.setAttribute(\"src\", el.getAttribute(\"src\"));\r\n\t\t\t});\r\n\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll(element, \"video, audio\").forEach((el) => {\r\n\t\t\t\tif (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif (typeof autoplay !== \"boolean\") {\r\n\t\t\t\t\tautoplay =\r\n\t\t\t\t\t\tel.hasAttribute(\"data-autoplay\") ||\r\n\t\t\t\t\t\t!!closest(el, \".slide-background\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (autoplay && typeof el.play === \"function\") {\r\n\t\t\t\t\t// If the media is ready, start playback\r\n\t\t\t\t\tif (el.readyState > 1) {\r\n\t\t\t\t\t\tthis.startEmbeddedMedia({ target: el });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\r\n\t\t\t\t\t// of waiting, we initiate playback\r\n\t\t\t\t\telse if (isMobile) {\r\n\t\t\t\t\t\tconst promise = el.play();\r\n\r\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\r\n\t\t\t\t\t\t// that the viewer can start the media on their own\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tpromise &&\r\n\t\t\t\t\t\t\ttypeof promise.catch === \"function\" &&\r\n\t\t\t\t\t\t\tel.controls === false\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tpromise.catch(() => {\r\n\t\t\t\t\t\t\t\tel.controls = true;\r\n\r\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\r\n\t\t\t\t\t\t\t\tel.addEventListener(\"play\", () => {\r\n\t\t\t\t\t\t\t\t\tel.controls = false;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If the media isn't loaded, wait before playing\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tel.removeEventListener(\"loadeddata\", this.startEmbeddedMedia); // remove first to avoid dupes\r\n\t\t\t\t\t\tel.addEventListener(\"loadeddata\", this.startEmbeddedMedia);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Normal iframes\r\n\t\t\tqueryAll(element, \"iframe[src]\").forEach((el) => {\r\n\t\t\t\tif (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.startEmbeddedIframe({ target: el });\r\n\t\t\t});\r\n\r\n\t\t\t// Lazy loading iframes\r\n\t\t\tqueryAll(element, \"iframe[data-src]\").forEach((el) => {\r\n\t\t\t\tif (closest(el, \".fragment\") && !closest(el, \".fragment.visible\")) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.getAttribute(\"src\") !== el.getAttribute(\"data-src\")) {\r\n\t\t\t\t\tel.removeEventListener(\"load\", this.startEmbeddedIframe); // remove first to avoid dupes\r\n\t\t\t\t\tel.addEventListener(\"load\", this.startEmbeddedIframe);\r\n\t\t\t\t\tel.setAttribute(\"src\", el.getAttribute(\"data-src\"));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playing an embedded video/audio element after\r\n\t * it has finished loading.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedMedia(event) {\r\n\t\tconst isAttachedToDOM = !!closest(event.target, \"html\");\r\n\t\tconst isVisible = !!closest(event.target, \".present\");\r\n\r\n\t\tif (isAttachedToDOM && isVisible) {\r\n\t\t\tevent.target.currentTime = 0;\r\n\t\t\tevent.target.play();\r\n\t\t}\r\n\r\n\t\tevent.target.removeEventListener(\"loadeddata\", this.startEmbeddedMedia);\r\n\t}\r\n\r\n\t/**\r\n\t * \"Starts\" the content of an embedded iframe using the\r\n\t * postMessage API.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedIframe(event) {\r\n\t\tconst iframe = event.target;\r\n\r\n\t\tif (iframe?.contentWindow) {\r\n\t\t\tconst isAttachedToDOM = !!closest(event.target, \"html\");\r\n\t\t\tconst isVisible = !!closest(event.target, \".present\");\r\n\r\n\t\t\tif (isAttachedToDOM && isVisible) {\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif (typeof autoplay !== \"boolean\") {\r\n\t\t\t\t\tautoplay =\r\n\t\t\t\t\t\tiframe.hasAttribute(\"data-autoplay\") ||\r\n\t\t\t\t\t\t!!closest(iframe, \".slide-background\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// YouTube postMessage API\r\n\t\t\t\tif (\r\n\t\t\t\t\t/youtube\\.com\\/embed\\//.test(iframe.getAttribute(\"src\")) &&\r\n\t\t\t\t\tautoplay\r\n\t\t\t\t) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage(\r\n\t\t\t\t\t\t'{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}',\r\n\t\t\t\t\t\t\"*\",\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t// Vimeo postMessage API\r\n\t\t\t\telse if (\r\n\t\t\t\t\t/player\\.vimeo\\.com\\//.test(iframe.getAttribute(\"src\")) &&\r\n\t\t\t\t\tautoplay\r\n\t\t\t\t) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage('{\"method\":\"play\"}', \"*\");\r\n\t\t\t\t}\r\n\t\t\t\t// Generic postMessage API\r\n\t\t\t\telse {\r\n\t\t\t\t\tiframe.contentWindow.postMessage(\"slide:start\", \"*\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Stop playback of any embedded content inside of\r\n\t * the targeted slide.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstopEmbeddedContent(element, options = {}) {\r\n\t\toptions = extend(\r\n\t\t\t{\r\n\t\t\t\t// Defaults\r\n\t\t\t\tunloadIframes: true,\r\n\t\t\t},\r\n\t\t\toptions,\r\n\t\t);\r\n\r\n\t\tif (element?.parentNode) {\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll(element, \"video, audio\").forEach((el) => {\r\n\t\t\t\tif (!el.hasAttribute(\"data-ignore\") && typeof el.pause === \"function\") {\r\n\t\t\t\t\tel.setAttribute(\"data-paused-by-reveal\", \"\");\r\n\t\t\t\t\tel.pause();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\r\n\t\t\tqueryAll(element, \"iframe\").forEach((el) => {\r\n\t\t\t\tif (el.contentWindow) el.contentWindow.postMessage(\"slide:stop\", \"*\");\r\n\t\t\t\tel.removeEventListener(\"load\", this.startEmbeddedIframe);\r\n\t\t\t});\r\n\r\n\t\t\t// YouTube postMessage API\r\n\t\t\tqueryAll(element, 'iframe[src*=\"youtube.com/embed/\"]').forEach((el) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!el.hasAttribute(\"data-ignore\") &&\r\n\t\t\t\t\tel.contentWindow &&\r\n\t\t\t\t\ttypeof el.contentWindow.postMessage === \"function\"\r\n\t\t\t\t) {\r\n\t\t\t\t\tel.contentWindow.postMessage(\r\n\t\t\t\t\t\t'{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\r\n\t\t\t\t\t\t\"*\",\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Vimeo postMessage API\r\n\t\t\tqueryAll(element, 'iframe[src*=\"player.vimeo.com/\"]').forEach((el) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!el.hasAttribute(\"data-ignore\") &&\r\n\t\t\t\t\tel.contentWindow &&\r\n\t\t\t\t\ttypeof el.contentWindow.postMessage === \"function\"\r\n\t\t\t\t) {\r\n\t\t\t\t\tel.contentWindow.postMessage('{\"method\":\"pause\"}', \"*\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (options.unloadIframes === true) {\r\n\t\t\t\t// Unload lazy-loaded iframes\r\n\t\t\t\tqueryAll(element, \"iframe[data-src]\").forEach((el) => {\r\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\r\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\r\n\t\t\t\t\tel.setAttribute(\"src\", \"about:blank\");\r\n\t\t\t\t\tel.removeAttribute(\"src\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tSLIDE_NUMBER_FORMAT_CURRENT,\r\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\r\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\r\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL,\r\n} from \"../utils/constants\";\r\n\r\n/**\r\n * Handles the display of reveal.js' optional slide number.\r\n */\r\nexport default class SlideNumber {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.element = document.createElement(\"div\");\r\n\t\tthis.element.className = \"slide-number\";\r\n\t\tthis.Reveal.getRevealElement().appendChild(this.element);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure(config, oldConfig) {\r\n\t\tlet slideNumberDisplay = \"none\";\r\n\t\tif (config.slideNumber && !this.Reveal.isPrintView()) {\r\n\t\t\tif (config.showSlideNumber === \"all\") {\r\n\t\t\t\tslideNumberDisplay = \"block\";\r\n\t\t\t} else if (\r\n\t\t\t\tconfig.showSlideNumber === \"speaker\" &&\r\n\t\t\t\tthis.Reveal.isSpeakerNotes()\r\n\t\t\t) {\r\n\t\t\t\tslideNumberDisplay = \"block\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.style.display = slideNumberDisplay;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slide number to match the current slide.\r\n\t */\r\n\tupdate() {\r\n\t\t// Update slide number if enabled\r\n\t\tif (this.Reveal.getConfig().slideNumber && this.element) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the HTML string corresponding to the current slide\r\n\t * number, including formatting.\r\n\t */\r\n\tgetSlideNumber(slide = this.Reveal.getCurrentSlide()) {\r\n\t\tconst config = this.Reveal.getConfig();\r\n\t\tlet value;\r\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\r\n\r\n\t\tif (typeof config.slideNumber === \"function\") {\r\n\t\t\tvalue = config.slideNumber(slide);\r\n\t\t} else {\r\n\t\t\t// Check if a custom number format is available\r\n\t\t\tif (typeof config.slideNumber === \"string\") {\r\n\t\t\t\tformat = config.slideNumber;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are ONLY vertical slides in this deck, always use\r\n\t\t\t// a flattened slide number\r\n\t\t\tif (!/c/.test(format) && this.Reveal.getHorizontalSlides().length === 1) {\r\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\r\n\t\t\t}\r\n\r\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\r\n\t\t\tconst horizontalOffset =\r\n\t\t\t\tslide && slide.dataset.visibility === \"uncounted\" ? 0 : 1;\r\n\r\n\t\t\tvalue = [];\r\n\t\t\tswitch (format) {\r\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\r\n\t\t\t\t\tvalue.push(this.Reveal.getSlidePastCount(slide) + horizontalOffset);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\r\n\t\t\t\t\tvalue.push(\r\n\t\t\t\t\t\tthis.Reveal.getSlidePastCount(slide) + horizontalOffset,\r\n\t\t\t\t\t\t\"/\",\r\n\t\t\t\t\t\tthis.Reveal.getTotalSlides(),\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tconst indices = this.Reveal.getIndices(slide);\r\n\t\t\t\t\tvalue.push(indices.h + horizontalOffset);\r\n\t\t\t\t\tconst sep =\r\n\t\t\t\t\t\tformat === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\r\n\t\t\t\t\t\t\t? \"/\"\r\n\t\t\t\t\t\t\t: \".\";\r\n\t\t\t\t\tif (this.Reveal.isVerticalSlide(slide))\r\n\t\t\t\t\t\tvalue.push(sep, indices.v + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst url = `#${this.Reveal.location.getHash(slide)}`;\r\n\t\treturn this.formatNumber(value[0], value[1], value[2], url);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies HTML formatting to a slide number before it's\r\n\t * written to the DOM.\r\n\t *\r\n\t * @param {number} a Current slide\r\n\t * @param {string} delimiter Character to separate slide numbers\r\n\t * @param {(number|*)} b Total slides\r\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\r\n\t * @return {string} HTML string fragment\r\n\t */\r\n\tformatNumber(a, delimiter, b, url = `#${this.Reveal.location.getHash()}`) {\r\n\t\tif (typeof b === \"number\" && !Number.isNaN(b)) {\r\n\t\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\r\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t</a>`;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.element.remove();\r\n\t}\r\n}\r\n","import { isAndroid } from \"../utils/device.js\";\r\nimport { matches } from \"../utils/util.js\";\r\n\r\nconst SWIPE_THRESHOLD = 40;\r\n\r\n/**\r\n * Controls all touch interactions and navigations for\r\n * a presentation.\r\n */\r\nexport default class Touch {\r\n\tconstructor(Reveal) {\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Holds information about the currently ongoing touch interaction\r\n\t\tthis.touchStartX = 0;\r\n\t\tthis.touchStartY = 0;\r\n\t\tthis.touchStartCount = 0;\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t\tthis.onPointerDown = this.onPointerDown.bind(this);\r\n\t\tthis.onPointerMove = this.onPointerMove.bind(this);\r\n\t\tthis.onPointerUp = this.onPointerUp.bind(this);\r\n\t\tthis.onTouchStart = this.onTouchStart.bind(this);\r\n\t\tthis.onTouchMove = this.onTouchMove.bind(this);\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tbind() {\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tif (\"onpointerdown\" in window) {\r\n\t\t\t// Use W3C pointer events\r\n\t\t\trevealElement.addEventListener(\"pointerdown\", this.onPointerDown, false);\r\n\t\t\trevealElement.addEventListener(\"pointermove\", this.onPointerMove, false);\r\n\t\t\trevealElement.addEventListener(\"pointerup\", this.onPointerUp, false);\r\n\t\t} else if (window.navigator.msPointerEnabled) {\r\n\t\t\t// IE 10 uses prefixed version of pointer events\r\n\t\t\trevealElement.addEventListener(\r\n\t\t\t\t\"MSPointerDown\",\r\n\t\t\t\tthis.onPointerDown,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t\trevealElement.addEventListener(\r\n\t\t\t\t\"MSPointerMove\",\r\n\t\t\t\tthis.onPointerMove,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t\trevealElement.addEventListener(\"MSPointerUp\", this.onPointerUp, false);\r\n\t\t} else {\r\n\t\t\t// Fall back to touch events\r\n\t\t\trevealElement.addEventListener(\"touchstart\", this.onTouchStart, false);\r\n\t\t\trevealElement.addEventListener(\"touchmove\", this.onTouchMove, false);\r\n\t\t\trevealElement.addEventListener(\"touchend\", this.onTouchEnd, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tunbind() {\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\trevealElement.removeEventListener(\"pointerdown\", this.onPointerDown, false);\r\n\t\trevealElement.removeEventListener(\"pointermove\", this.onPointerMove, false);\r\n\t\trevealElement.removeEventListener(\"pointerup\", this.onPointerUp, false);\r\n\r\n\t\trevealElement.removeEventListener(\r\n\t\t\t\"MSPointerDown\",\r\n\t\t\tthis.onPointerDown,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t\trevealElement.removeEventListener(\r\n\t\t\t\"MSPointerMove\",\r\n\t\t\tthis.onPointerMove,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t\trevealElement.removeEventListener(\"MSPointerUp\", this.onPointerUp, false);\r\n\r\n\t\trevealElement.removeEventListener(\"touchstart\", this.onTouchStart, false);\r\n\t\trevealElement.removeEventListener(\"touchmove\", this.onTouchMove, false);\r\n\t\trevealElement.removeEventListener(\"touchend\", this.onTouchEnd, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the target element prevents the triggering of\r\n\t * swipe navigation.\r\n\t */\r\n\tisSwipePrevented(target) {\r\n\t\t// Prevent accidental swipes when scrubbing timelines\r\n\t\tif (matches(target, \"video, audio\")) return true;\r\n\r\n\t\twhile (target && typeof target.hasAttribute === \"function\") {\r\n\t\t\tif (target.hasAttribute(\"data-prevent-swipe\")) return true;\r\n\t\t\ttarget = target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchstart' event, enables support for\r\n\t * swipe and pinch gestures.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchStart(event) {\r\n\t\tif (this.isSwipePrevented(event.target)) return true;\r\n\r\n\t\tthis.touchStartX = event.touches[0].clientX;\r\n\t\tthis.touchStartY = event.touches[0].clientY;\r\n\t\tthis.touchStartCount = event.touches.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchmove' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchMove(event) {\r\n\t\tif (this.isSwipePrevented(event.target)) return true;\r\n\r\n\t\tconst config = this.Reveal.getConfig();\r\n\r\n\t\t// Each touch should only trigger one action\r\n\t\tif (!this.touchCaptured) {\r\n\t\t\tthis.Reveal.onUserInput(event);\r\n\r\n\t\t\tconst currentX = event.touches[0].clientX;\r\n\t\t\tconst currentY = event.touches[0].clientY;\r\n\r\n\t\t\t// There was only one touch point, look for a swipe\r\n\t\t\tif (event.touches.length === 1 && this.touchStartCount !== 2) {\r\n\t\t\t\tconst availableRoutes = this.Reveal.availableRoutes({\r\n\t\t\t\t\tincludeFragments: true,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst deltaX = currentX - this.touchStartX;\r\n\t\t\t\tconst deltaY = currentY - this.touchStartY;\r\n\r\n\t\t\t\tif (deltaX > SWIPE_THRESHOLD && Math.abs(deltaX) > Math.abs(deltaY)) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\r\n\t\t\t\t\t\tif (config.rtl) {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tdeltaX < -SWIPE_THRESHOLD &&\r\n\t\t\t\t\tMath.abs(deltaX) > Math.abs(deltaY)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\r\n\t\t\t\t\t\tif (config.rtl) {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (deltaY > SWIPE_THRESHOLD && availableRoutes.up) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\r\n\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (deltaY < -SWIPE_THRESHOLD && availableRoutes.down) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif (config.navigationMode === \"linear\") {\r\n\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're embedded, only block touch events if they have\r\n\t\t\t\t// triggered an action\r\n\t\t\t\tif (config.embedded) {\r\n\t\t\t\t\tif (this.touchCaptured || this.Reveal.isVerticalSlide()) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\r\n\t\t\t\t// around of the viewport in iOS\r\n\t\t\t\telse {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// There's a bug with swiping on some Android devices unless\r\n\t\t// the default action is always prevented\r\n\t\telse if (isAndroid) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchend' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchEnd(event) {\r\n\t\tthis.touchCaptured = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer down to touch start.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerDown(event) {\r\n\t\tif (\r\n\t\t\tevent.pointerType === event.MSPOINTER_TYPE_TOUCH ||\r\n\t\t\tevent.pointerType === \"touch\"\r\n\t\t) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchStart(event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer move to touch move.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerMove(event) {\r\n\t\tif (\r\n\t\t\tevent.pointerType === event.MSPOINTER_TYPE_TOUCH ||\r\n\t\t\tevent.pointerType === \"touch\"\r\n\t\t) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchMove(event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer up to touch end.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerUp(event) {\r\n\t\tif (\r\n\t\t\tevent.pointerType === event.MSPOINTER_TYPE_TOUCH ||\r\n\t\t\tevent.pointerType === \"touch\"\r\n\t\t) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchEnd(event);\r\n\t\t}\r\n\t}\r\n}\r\n","import Playback from \"./components/playback.js\";\r\nimport defaultConfig from \"./config.js\";\r\nimport AutoAnimate from \"./controllers/autoanimate.js\";\r\nimport Backgrounds from \"./controllers/backgrounds.js\";\r\nimport Controls from \"./controllers/controls.js\";\r\nimport Focus from \"./controllers/focus.js\";\r\nimport Fragments from \"./controllers/fragments.js\";\r\nimport JumpToSlide from \"./controllers/jumptoslide.js\";\r\nimport Keyboard from \"./controllers/keyboard.js\";\r\nimport Location from \"./controllers/location.js\";\r\nimport Notes from \"./controllers/notes.js\";\r\nimport Overview from \"./controllers/overview.js\";\r\nimport Plugins from \"./controllers/plugins.js\";\r\nimport Pointer from \"./controllers/pointer.js\";\r\nimport PrintView from \"./controllers/printview.js\";\r\nimport Progress from \"./controllers/progress.js\";\r\nimport ScrollView from \"./controllers/scrollview.js\";\r\nimport SlideContent from \"./controllers/slidecontent.js\";\r\nimport SlideNumber from \"./controllers/slidenumber.js\";\r\nimport Touch from \"./controllers/touch.js\";\r\nimport {\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n\tPOST_MESSAGE_METHOD_BLACKLIST,\r\n\tSLIDES_SELECTOR,\r\n\tVERTICAL_SLIDES_SELECTOR,\r\n} from \"./utils/constants.js\";\r\nimport * as Device from \"./utils/device.js\";\r\nimport * as Util from \"./utils/util.js\";\r\n\r\n// The reveal.js version\r\nexport const VERSION = \"5.0.1\";\r\n\r\n/**\r\n * reveal.js\r\n * https://revealjs.com\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\r\n */\r\nexport default function (revealElement, options) {\r\n\t// Support initialization with no args, one arg\r\n\t// [options] or two args [revealElement, options]\r\n\tif (arguments.length < 2) {\r\n\t\toptions = arguments[0];\r\n\t\trevealElement = document.querySelector(\".reveal\");\r\n\t}\r\n\r\n\tconst Reveal = {};\r\n\r\n\t// Configuration defaults, can be overridden at initialization time\r\n\tlet config = {};\r\n\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\r\n\tlet ready = false;\r\n\t// The horizontal and vertical index of the currently active slide\r\n\tlet indexh;\r\n\tlet indexv;\r\n\t// The previous and current slide HTML elements\r\n\tlet previousSlide;\r\n\tlet currentSlide;\r\n\t// Remember which directions that the user has navigated towards\r\n\tconst navigationHistory = {\r\n\t\thasNavigatedHorizontally: false,\r\n\t\thasNavigatedVertically: false,\r\n\t};\r\n\t// Slides may have a data-state attribute which we pick up and apply\r\n\t// as a class to the body. This list contains the combined state of\r\n\t// all current slides.\r\n\tlet state = [];\r\n\t// The current scale of the presentation (see width/height config)\r\n\tlet scale = 1;\r\n\t// CSS transform that is currently applied to the slides container,\r\n\t// split into two groups\r\n\tconst slidesTransform = { layout: \"\", overview: \"\" };\r\n\t// Cached references to DOM elements\r\n\tconst dom = {};\r\n\t// Flags if the interaction event listeners are bound\r\n\tlet eventsAreBound = false;\r\n\t// The current slide transition state; idle or running\r\n\tlet transition = \"idle\";\r\n\t// The current auto-slide duration\r\n\tlet autoSlide = 0;\r\n\t// Auto slide properties\r\n\tlet autoSlidePlayer;\r\n\tlet autoSlideTimeout = 0;\r\n\tlet autoSlideStartTime = -1;\r\n\tlet autoSlidePaused = false;\r\n\t// Controllers for different aspects of our presentation. They're\r\n\t// all given direct references to this Reveal instance since there\r\n\t// may be multiple presentations running in parallel.\r\n\tconst slideContent = new SlideContent(Reveal);\r\n\tconst slideNumber = new SlideNumber(Reveal);\r\n\tconst jumpToSlide = new JumpToSlide(Reveal);\r\n\tconst autoAnimate = new AutoAnimate(Reveal);\r\n\tconst backgrounds = new Backgrounds(Reveal);\r\n\tconst scrollView = new ScrollView(Reveal);\r\n\tconst printView = new PrintView(Reveal);\r\n\tconst fragments = new Fragments(Reveal);\r\n\tconst overview = new Overview(Reveal);\r\n\tconst keyboard = new Keyboard(Reveal);\r\n\tconst location = new Location(Reveal);\r\n\tconst controls = new Controls(Reveal);\r\n\tconst progress = new Progress(Reveal);\r\n\tconst pointer = new Pointer(Reveal);\r\n\tconst plugins = new Plugins(Reveal);\r\n\tconst focus = new Focus(Reveal);\r\n\tconst touch = new Touch(Reveal);\r\n\tconst notes = new Notes(Reveal);\r\n\r\n\t/**\r\n\t * Starts up the presentation.\r\n\t */\r\n\tfunction initialize(initOptions) {\r\n\t\tif (!revealElement)\r\n\t\t\tthrow 'Unable to find presentation root (<div class=\"reveal\">).';\r\n\r\n\t\t// Cache references to key DOM elements\r\n\t\tdom.wrapper = revealElement;\r\n\t\tdom.slides = revealElement.querySelector(\".slides\");\r\n\r\n\t\tif (!dom.slides)\r\n\t\t\tthrow 'Unable to find slides container (<div class=\"slides\">).';\r\n\r\n\t\t// Compose our config object in order of increasing precedence:\r\n\t\t// 1. Default reveal.js options\r\n\t\t// 2. Options provided via Reveal.configure() prior to\r\n\t\t//    initialization\r\n\t\t// 3. Options passed to the Reveal constructor\r\n\t\t// 4. Options passed to Reveal.initialize\r\n\t\t// 5. Query params\r\n\t\tconfig = {\r\n\t\t\t...defaultConfig,\r\n\t\t\t...config,\r\n\t\t\t...options,\r\n\t\t\t...initOptions,\r\n\t\t\t...Util.getQueryHash(),\r\n\t\t};\r\n\r\n\t\t// Legacy support for the ?print-pdf query\r\n\t\tif (/print-pdf/gi.test(window.location.search)) {\r\n\t\t\tconfig.view = \"print\";\r\n\t\t}\r\n\r\n\t\tsetViewport();\r\n\r\n\t\t// Force a layout when the whole page, incl fonts, has loaded\r\n\t\twindow.addEventListener(\"load\", layout, false);\r\n\r\n\t\t// Register plugins and load dependencies, then move on to #start()\r\n\t\tplugins.load(config.plugins, config.dependencies).then(start);\r\n\r\n\t\treturn new Promise((resolve) => Reveal.on(\"ready\", resolve));\r\n\t}\r\n\r\n\t/**\r\n\t * Encase the presentation in a reveal.js viewport. The\r\n\t * extent of the viewport differs based on configuration.\r\n\t */\r\n\tfunction setViewport() {\r\n\t\t// Embedded decks use the reveal element as their viewport\r\n\t\tif (config.embedded === true) {\r\n\t\t\tdom.viewport =\r\n\t\t\t\tUtil.closest(revealElement, \".reveal-viewport\") || revealElement;\r\n\t\t}\r\n\t\t// Full-page decks use the body as their viewport\r\n\t\telse {\r\n\t\t\tdom.viewport = document.body;\r\n\t\t\tdocument.documentElement.classList.add(\"reveal-full-page\");\r\n\t\t}\r\n\r\n\t\tdom.viewport.classList.add(\"reveal-viewport\");\r\n\t}\r\n\r\n\t/**\r\n\t * Starts up reveal.js by binding input events and navigating\r\n\t * to the current URL deeplink if there is one.\r\n\t */\r\n\tfunction start() {\r\n\t\tready = true;\r\n\r\n\t\t// Remove slides hidden with data-visibility\r\n\t\tremoveHiddenSlides();\r\n\r\n\t\t// Make sure we've got all the DOM elements we need\r\n\t\tsetupDOM();\r\n\r\n\t\t// Listen to messages posted to this window\r\n\t\tsetupPostMessage();\r\n\r\n\t\t// Prevent the slides from being scrolled out of view\r\n\t\tsetupScrollPrevention();\r\n\r\n\t\t// Adds bindings for fullscreen mode\r\n\t\tsetupFullscreen();\r\n\r\n\t\t// Resets all vertical slides so that only the first is visible\r\n\t\tresetVerticalSlides();\r\n\r\n\t\t// Updates the presentation to match the current configuration values\r\n\t\tconfigure();\r\n\r\n\t\t// Create slide backgrounds\r\n\t\tbackgrounds.update(true);\r\n\r\n\t\t// Activate the print/scroll view if configured\r\n\t\tactivateInitialView();\r\n\r\n\t\t// Read the initial hash\r\n\t\tlocation.readURL();\r\n\r\n\t\t// Notify listeners that the presentation is ready but use a 1ms\r\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\r\n\t\tsetTimeout(() => {\r\n\t\t\t// Enable transitions now that we're loaded\r\n\t\t\tdom.slides.classList.remove(\"no-transition\");\r\n\r\n\t\t\tdom.wrapper.classList.add(\"ready\");\r\n\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: \"ready\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tcurrentSlide,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Activates the correct reveal.js view based on our config.\r\n\t * This is only invoked once during initialization.\r\n\t */\r\n\tfunction activateInitialView() {\r\n\t\tconst activatePrintView = config.view === \"print\";\r\n\t\tconst activateScrollView =\r\n\t\t\tconfig.view === \"scroll\" || config.view === \"reader\";\r\n\r\n\t\tif (activatePrintView || activateScrollView) {\r\n\t\t\tif (activatePrintView) {\r\n\t\t\t\tremoveEventListeners();\r\n\t\t\t} else {\r\n\t\t\t\ttouch.unbind();\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid content flickering during layout\r\n\t\t\tdom.viewport.classList.add(\"loading-scroll-mode\");\r\n\r\n\t\t\tif (activatePrintView) {\r\n\t\t\t\t// The document needs to have loaded for the PDF layout\r\n\t\t\t\t// measurements to be accurate\r\n\t\t\t\tif (document.readyState === \"complete\") {\r\n\t\t\t\t\tprintView.activate();\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.addEventListener(\"load\", () => printView.activate());\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tscrollView.activate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all slides with data-visibility=\"hidden\". This\r\n\t * is done right before the rest of the presentation is\r\n\t * initialized.\r\n\t *\r\n\t * If you want to show all hidden slides, initialize\r\n\t * reveal.js with showHiddenSlides set to true.\r\n\t */\r\n\tfunction removeHiddenSlides() {\r\n\t\tif (!config.showHiddenSlides) {\r\n\t\t\tUtil.queryAll(dom.wrapper, 'section[data-visibility=\"hidden\"]').forEach(\r\n\t\t\t\t(slide) => {\r\n\t\t\t\t\tconst parent = slide.parentNode;\r\n\r\n\t\t\t\t\t// If this slide is part of a stack and that stack will be\r\n\t\t\t\t\t// empty after removing the hidden slide, remove the entire\r\n\t\t\t\t\t// stack\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tparent.childElementCount === 1 &&\r\n\t\t\t\t\t\t/section/i.test(parent.nodeName)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tparent.remove();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tslide.remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and stores references to DOM elements which are\r\n\t * required by the presentation. If a required element is\r\n\t * not found, it is created.\r\n\t */\r\n\tfunction setupDOM() {\r\n\t\t// Prevent transitions while we're loading\r\n\t\tdom.slides.classList.add(\"no-transition\");\r\n\r\n\t\tif (Device.isMobile) {\r\n\t\t\tdom.wrapper.classList.add(\"no-hover\");\r\n\t\t} else {\r\n\t\t\tdom.wrapper.classList.remove(\"no-hover\");\r\n\t\t}\r\n\r\n\t\tbackgrounds.render();\r\n\t\tslideNumber.render();\r\n\t\tjumpToSlide.render();\r\n\t\tcontrols.render();\r\n\t\tprogress.render();\r\n\t\tnotes.render();\r\n\r\n\t\t// Overlay graphic which is displayed during the paused mode\r\n\t\tdom.pauseOverlay = Util.createSingletonNode(\r\n\t\t\tdom.wrapper,\r\n\t\t\t\"div\",\r\n\t\t\t\"pause-overlay\",\r\n\t\t\tconfig.controls\r\n\t\t\t\t? '<button class=\"resume-button\">Resume presentation</button>'\r\n\t\t\t\t: null,\r\n\t\t);\r\n\r\n\t\tdom.statusElement = createStatusElement();\r\n\r\n\t\tdom.wrapper.setAttribute(\"role\", \"application\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a hidden div with role aria-live to announce the\r\n\t * current slide content. Hide the div off-screen to make it\r\n\t * available only to Assistive Technologies.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction createStatusElement() {\r\n\t\tlet statusElement = dom.wrapper.querySelector(\".aria-status\");\r\n\t\tif (!statusElement) {\r\n\t\t\tstatusElement = document.createElement(\"div\");\r\n\t\t\tstatusElement.style.position = \"absolute\";\r\n\t\t\tstatusElement.style.height = \"1px\";\r\n\t\t\tstatusElement.style.width = \"1px\";\r\n\t\t\tstatusElement.style.overflow = \"hidden\";\r\n\t\t\tstatusElement.style.clip = \"rect( 1px, 1px, 1px, 1px )\";\r\n\t\t\tstatusElement.classList.add(\"aria-status\");\r\n\t\t\tstatusElement.setAttribute(\"aria-live\", \"polite\");\r\n\t\t\tstatusElement.setAttribute(\"aria-atomic\", \"true\");\r\n\t\t\tdom.wrapper.appendChild(statusElement);\r\n\t\t}\r\n\t\treturn statusElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Announces the given text to screen readers.\r\n\t */\r\n\tfunction announceStatus(value) {\r\n\t\tdom.statusElement.textContent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given HTML element into a string of text\r\n\t * that can be announced to a screen reader. Hidden\r\n\t * elements are excluded.\r\n\t */\r\n\tfunction getStatusText(node) {\r\n\t\tlet text = \"\";\r\n\r\n\t\t// Text node\r\n\t\tif (node.nodeType === 3) {\r\n\t\t\ttext += node.textContent;\r\n\t\t}\r\n\t\t// Element node\r\n\t\telse if (node.nodeType === 1) {\r\n\t\t\tconst isAriaHidden = node.getAttribute(\"aria-hidden\");\r\n\t\t\tconst isDisplayHidden = window.getComputedStyle(node).display === \"none\";\r\n\t\t\tif (isAriaHidden !== \"true\" && !isDisplayHidden) {\r\n\t\t\t\tArray.from(node.childNodes).forEach((child) => {\r\n\t\t\t\t\ttext += getStatusText(child);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttext = text.trim();\r\n\r\n\t\treturn text === \"\" ? \"\" : `${text} `;\r\n\t}\r\n\r\n\t/**\r\n\t * This is an unfortunate necessity. Some actions – such as\r\n\t * an input field being focused in an iframe or using the\r\n\t * keyboard to expand text selection beyond the bounds of\r\n\t * a slide – can trigger our content to be pushed out of view.\r\n\t * This scrolling can not be prevented by hiding overflow in\r\n\t * CSS (we already do) so we have to resort to repeatedly\r\n\t * checking if the slides have been offset :(\r\n\t */\r\n\tfunction setupScrollPrevention() {\r\n\t\tsetInterval(() => {\r\n\t\t\tif (\r\n\t\t\t\t(!scrollView.isActive() && dom.wrapper.scrollTop !== 0) ||\r\n\t\t\t\tdom.wrapper.scrollLeft !== 0\r\n\t\t\t) {\r\n\t\t\t\tdom.wrapper.scrollTop = 0;\r\n\t\t\t\tdom.wrapper.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\t/**\r\n\t * After entering fullscreen we need to force a layout to\r\n\t * get our presentations to scale correctly. This behavior\r\n\t * is inconsistent across browsers but a force layout seems\r\n\t * to normalize it.\r\n\t */\r\n\tfunction setupFullscreen() {\r\n\t\tdocument.addEventListener(\"fullscreenchange\", onFullscreenChange);\r\n\t\tdocument.addEventListener(\"webkitfullscreenchange\", onFullscreenChange);\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a listener to postMessage events, this makes it\r\n\t * possible to call all reveal.js API methods from another\r\n\t * window. For example:\r\n\t *\r\n\t * revealWindow.postMessage( JSON.stringify({\r\n\t *   method: 'slide',\r\n\t *   args: [ 2 ]\r\n\t * }), '*' );\r\n\t */\r\n\tfunction setupPostMessage() {\r\n\t\tif (config.postMessage) {\r\n\t\t\twindow.addEventListener(\"message\", onPostMessage, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the configuration settings from the config\r\n\t * object. May be called multiple times.\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tfunction configure(options) {\r\n\t\tconst oldConfig = { ...config };\r\n\r\n\t\t// New config options may be passed when this method\r\n\t\t// is invoked through the API after initialization\r\n\t\tif (typeof options === \"object\") Util.extend(config, options);\r\n\r\n\t\t// Abort if reveal.js hasn't finished loading, config\r\n\t\t// changes will be applied automatically once ready\r\n\t\tif (Reveal.isReady() === false) return;\r\n\r\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length;\r\n\r\n\t\t// The transition is added as a class on the .reveal element\r\n\t\tdom.wrapper.classList.remove(oldConfig.transition);\r\n\t\tdom.wrapper.classList.add(config.transition);\r\n\r\n\t\tdom.wrapper.setAttribute(\"data-transition-speed\", config.transitionSpeed);\r\n\t\tdom.wrapper.setAttribute(\r\n\t\t\t\"data-background-transition\",\r\n\t\t\tconfig.backgroundTransition,\r\n\t\t);\r\n\r\n\t\t// Expose our configured slide dimensions as custom props\r\n\t\tdom.viewport.style.setProperty(\r\n\t\t\t\"--slide-width\",\r\n\t\t\ttypeof config.width === \"string\" ? config.width : `${config.width}px`,\r\n\t\t);\r\n\t\tdom.viewport.style.setProperty(\r\n\t\t\t\"--slide-height\",\r\n\t\t\ttypeof config.height === \"string\" ? config.height : `${config.height}px`,\r\n\t\t);\r\n\r\n\t\tif (config.shuffle) {\r\n\t\t\tshuffle();\r\n\t\t}\r\n\r\n\t\tUtil.toggleClass(dom.wrapper, \"embedded\", config.embedded);\r\n\t\tUtil.toggleClass(dom.wrapper, \"rtl\", config.rtl);\r\n\t\tUtil.toggleClass(dom.wrapper, \"center\", config.center);\r\n\r\n\t\t// Exit the paused mode if it was configured off\r\n\t\tif (config.pause === false) {\r\n\t\t\tresume();\r\n\t\t}\r\n\r\n\t\t// Iframe link previews\r\n\t\tif (config.previewLinks) {\r\n\t\t\tenablePreviewLinks();\r\n\t\t\tdisablePreviewLinks(\"[data-preview-link=false]\");\r\n\t\t} else {\r\n\t\t\tdisablePreviewLinks();\r\n\t\t\tenablePreviewLinks(\"[data-preview-link]:not([data-preview-link=false])\");\r\n\t\t}\r\n\r\n\t\t// Reset all changes made by auto-animations\r\n\t\tautoAnimate.reset();\r\n\r\n\t\t// Remove existing auto-slide controls\r\n\t\tif (autoSlidePlayer) {\r\n\t\t\tautoSlidePlayer.destroy();\r\n\t\t\tautoSlidePlayer = null;\r\n\t\t}\r\n\r\n\t\t// Generate auto-slide controls if needed\r\n\t\tif (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable) {\r\n\t\t\tautoSlidePlayer = new Playback(dom.wrapper, () => {\r\n\t\t\t\treturn Math.min(\r\n\t\t\t\t\tMath.max((Date.now() - autoSlideStartTime) / autoSlide, 0),\r\n\t\t\t\t\t1,\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tautoSlidePlayer.on(\"click\", onAutoSlidePlayerClick);\r\n\t\t\tautoSlidePaused = false;\r\n\t\t}\r\n\r\n\t\t// Add the navigation mode to the DOM so we can adjust styling\r\n\t\tif (config.navigationMode !== \"default\") {\r\n\t\t\tdom.wrapper.setAttribute(\"data-navigation-mode\", config.navigationMode);\r\n\t\t} else {\r\n\t\t\tdom.wrapper.removeAttribute(\"data-navigation-mode\");\r\n\t\t}\r\n\r\n\t\tnotes.configure(config, oldConfig);\r\n\t\tfocus.configure(config, oldConfig);\r\n\t\tpointer.configure(config, oldConfig);\r\n\t\tcontrols.configure(config, oldConfig);\r\n\t\tprogress.configure(config, oldConfig);\r\n\t\tkeyboard.configure(config, oldConfig);\r\n\t\tfragments.configure(config, oldConfig);\r\n\t\tslideNumber.configure(config, oldConfig);\r\n\r\n\t\tsync();\r\n\t}\r\n\r\n\t/**\r\n\t * Binds all event listeners.\r\n\t */\r\n\tfunction addEventListeners() {\r\n\t\teventsAreBound = true;\r\n\r\n\t\twindow.addEventListener(\"resize\", onWindowResize, false);\r\n\r\n\t\tif (config.touch) touch.bind();\r\n\t\tif (config.keyboard) keyboard.bind();\r\n\t\tif (config.progress) progress.bind();\r\n\t\tif (config.respondToHashChanges) location.bind();\r\n\t\tcontrols.bind();\r\n\t\tfocus.bind();\r\n\r\n\t\tdom.slides.addEventListener(\"click\", onSlidesClicked, false);\r\n\t\tdom.slides.addEventListener(\"transitionend\", onTransitionEnd, false);\r\n\t\tdom.pauseOverlay.addEventListener(\"click\", resume, false);\r\n\r\n\t\tif (config.focusBodyOnPageVisibilityChange) {\r\n\t\t\tdocument.addEventListener(\r\n\t\t\t\t\"visibilitychange\",\r\n\t\t\t\tonPageVisibilityChange,\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all event listeners.\r\n\t */\r\n\tfunction removeEventListeners() {\r\n\t\teventsAreBound = false;\r\n\r\n\t\ttouch.unbind();\r\n\t\tfocus.unbind();\r\n\t\tkeyboard.unbind();\r\n\t\tcontrols.unbind();\r\n\t\tprogress.unbind();\r\n\t\tlocation.unbind();\r\n\r\n\t\twindow.removeEventListener(\"resize\", onWindowResize, false);\r\n\r\n\t\tdom.slides.removeEventListener(\"click\", onSlidesClicked, false);\r\n\t\tdom.slides.removeEventListener(\"transitionend\", onTransitionEnd, false);\r\n\t\tdom.pauseOverlay.removeEventListener(\"click\", resume, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Uninitializes reveal.js by undoing changes made to the\r\n\t * DOM and removing all event listeners.\r\n\t */\r\n\tfunction destroy() {\r\n\t\tremoveEventListeners();\r\n\t\tcancelAutoSlide();\r\n\t\tdisablePreviewLinks();\r\n\r\n\t\t// Destroy controllers\r\n\t\tnotes.destroy();\r\n\t\tfocus.destroy();\r\n\t\tplugins.destroy();\r\n\t\tpointer.destroy();\r\n\t\tcontrols.destroy();\r\n\t\tprogress.destroy();\r\n\t\tbackgrounds.destroy();\r\n\t\tslideNumber.destroy();\r\n\t\tjumpToSlide.destroy();\r\n\r\n\t\t// Remove event listeners\r\n\t\tdocument.removeEventListener(\"fullscreenchange\", onFullscreenChange);\r\n\t\tdocument.removeEventListener(\"webkitfullscreenchange\", onFullscreenChange);\r\n\t\tdocument.removeEventListener(\r\n\t\t\t\"visibilitychange\",\r\n\t\t\tonPageVisibilityChange,\r\n\t\t\tfalse,\r\n\t\t);\r\n\t\twindow.removeEventListener(\"message\", onPostMessage, false);\r\n\t\twindow.removeEventListener(\"load\", layout, false);\r\n\r\n\t\t// Undo DOM changes\r\n\t\tif (dom.pauseOverlay) dom.pauseOverlay.remove();\r\n\t\tif (dom.statusElement) dom.statusElement.remove();\r\n\r\n\t\tdocument.documentElement.classList.remove(\"reveal-full-page\");\r\n\r\n\t\tdom.wrapper.classList.remove(\r\n\t\t\t\"ready\",\r\n\t\t\t\"center\",\r\n\t\t\t\"has-horizontal-slides\",\r\n\t\t\t\"has-vertical-slides\",\r\n\t\t);\r\n\t\tdom.wrapper.removeAttribute(\"data-transition-speed\");\r\n\t\tdom.wrapper.removeAttribute(\"data-background-transition\");\r\n\r\n\t\tdom.viewport.classList.remove(\"reveal-viewport\");\r\n\t\tdom.viewport.style.removeProperty(\"--slide-width\");\r\n\t\tdom.viewport.style.removeProperty(\"--slide-height\");\r\n\r\n\t\tdom.slides.style.removeProperty(\"width\");\r\n\t\tdom.slides.style.removeProperty(\"height\");\r\n\t\tdom.slides.style.removeProperty(\"zoom\");\r\n\t\tdom.slides.style.removeProperty(\"left\");\r\n\t\tdom.slides.style.removeProperty(\"top\");\r\n\t\tdom.slides.style.removeProperty(\"bottom\");\r\n\t\tdom.slides.style.removeProperty(\"right\");\r\n\t\tdom.slides.style.removeProperty(\"transform\");\r\n\r\n\t\tArray.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(\r\n\t\t\t(slide) => {\r\n\t\t\t\tslide.style.removeProperty(\"display\");\r\n\t\t\t\tslide.style.removeProperty(\"top\");\r\n\t\t\t\tslide.removeAttribute(\"hidden\");\r\n\t\t\t\tslide.removeAttribute(\"aria-hidden\");\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to one of our custom reveal.js events,\r\n\t * like slidechanged.\r\n\t */\r\n\tfunction on(type, listener, useCapture) {\r\n\t\trevealElement.addEventListener(type, listener, useCapture);\r\n\t}\r\n\r\n\t/**\r\n\t * Unsubscribes from a reveal.js event.\r\n\t */\r\n\tfunction off(type, listener, useCapture) {\r\n\t\trevealElement.removeEventListener(type, listener, useCapture);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies CSS transforms to the slides container. The container\r\n\t * is transformed from two separate sources: layout and the overview\r\n\t * mode.\r\n\t *\r\n\t * @param {object} transforms\r\n\t */\r\n\tfunction transformSlides(transforms) {\r\n\t\t// Pick up new transforms from arguments\r\n\t\tif (typeof transforms.layout === \"string\")\r\n\t\t\tslidesTransform.layout = transforms.layout;\r\n\t\tif (typeof transforms.overview === \"string\")\r\n\t\t\tslidesTransform.overview = transforms.overview;\r\n\r\n\t\t// Apply the transforms to the slides container\r\n\t\tif (slidesTransform.layout) {\r\n\t\t\tUtil.transformElement(\r\n\t\t\t\tdom.slides,\r\n\t\t\t\t`${slidesTransform.layout} ${slidesTransform.overview}`,\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tUtil.transformElement(dom.slides, slidesTransform.overview);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event of the specified type from the\r\n\t * reveal DOM element.\r\n\t */\r\n\tfunction dispatchEvent({ target = dom.wrapper, type, data, bubbles = true }) {\r\n\t\tconst event = document.createEvent(\"HTMLEvents\", 1, 2);\r\n\t\tevent.initEvent(type, bubbles, true);\r\n\t\tUtil.extend(event, data);\r\n\t\ttarget.dispatchEvent(event);\r\n\r\n\t\tif (target === dom.wrapper) {\r\n\t\t\t// If we're in an iframe, post each reveal.js event to the\r\n\t\t\t// parent window. Used by the notes plugin\r\n\t\t\tdispatchPostMessage(type);\r\n\t\t}\r\n\r\n\t\treturn event;\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches a slidechanged event.\r\n\t *\r\n\t * @param {string} origin Used to identify multiplex clients\r\n\t */\r\n\tfunction dispatchSlideChanged(origin) {\r\n\t\tdispatchEvent({\r\n\t\t\ttype: \"slidechanged\",\r\n\t\t\tdata: {\r\n\t\t\t\tindexh,\r\n\t\t\t\tindexv,\r\n\t\t\t\tpreviousSlide,\r\n\t\t\t\tcurrentSlide,\r\n\t\t\t\torigin,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatched a postMessage of the given type from our window.\r\n\t */\r\n\tfunction dispatchPostMessage(type, data) {\r\n\t\tif (config.postMessageEvents && window.parent !== window.self) {\r\n\t\t\tconst message = {\r\n\t\t\t\tnamespace: \"reveal\",\r\n\t\t\t\teventName: type,\r\n\t\t\t\tstate: getState(),\r\n\t\t\t};\r\n\r\n\t\t\tUtil.extend(message, data);\r\n\r\n\t\t\twindow.parent.postMessage(JSON.stringify(message), \"*\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Bind preview frame links.\r\n\t *\r\n\t * @param {string} [selector=a] - selector for anchors\r\n\t */\r\n\tfunction enablePreviewLinks(selector = \"a\") {\r\n\t\tArray.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\r\n\t\t\tif (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\r\n\t\t\t\telement.addEventListener(\"click\", onPreviewLinkClicked, false);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind preview frame links.\r\n\t */\r\n\tfunction disablePreviewLinks(selector = \"a\") {\r\n\t\tArray.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\r\n\t\t\tif (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\r\n\t\t\t\telement.removeEventListener(\"click\", onPreviewLinkClicked, false);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a preview window for the target URL.\r\n\t *\r\n\t * @param {string} url - url for preview iframe src\r\n\t */\r\n\tfunction showPreview(url) {\r\n\t\tcloseOverlay();\r\n\r\n\t\tdom.overlay = document.createElement(\"div\");\r\n\t\tdom.overlay.classList.add(\"overlay\");\r\n\t\tdom.overlay.classList.add(\"overlay-preview\");\r\n\t\tdom.wrapper.appendChild(dom.overlay);\r\n\r\n\t\tdom.overlay.innerHTML = `<header>\r\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\r\n\t\t\t</header>\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"viewport\">\r\n\t\t\t\t<iframe src=\"${url}\"></iframe>\r\n\t\t\t\t<small class=\"viewport-inner\">\r\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>`;\r\n\r\n\t\tdom.overlay.querySelector(\"iframe\").addEventListener(\r\n\t\t\t\"load\",\r\n\t\t\t(event) => {\r\n\t\t\t\tdom.overlay.classList.add(\"loaded\");\r\n\t\t\t},\r\n\t\t\tfalse,\r\n\t\t);\r\n\r\n\t\tdom.overlay.querySelector(\".close\").addEventListener(\r\n\t\t\t\"click\",\r\n\t\t\t(event) => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t},\r\n\t\t\tfalse,\r\n\t\t);\r\n\r\n\t\tdom.overlay.querySelector(\".external\").addEventListener(\r\n\t\t\t\"click\",\r\n\t\t\t(event) => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t},\r\n\t\t\tfalse,\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Open or close help overlay window.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * help is open, false means it's closed.\r\n\t */\r\n\tfunction toggleHelp(override) {\r\n\t\tif (typeof override === \"boolean\") {\r\n\t\t\toverride ? showHelp() : closeOverlay();\r\n\t\t} else {\r\n\t\t\tif (dom.overlay) {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t} else {\r\n\t\t\t\tshowHelp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay window with help material.\r\n\t */\r\n\tfunction showHelp() {\r\n\t\tif (config.help) {\r\n\t\t\tcloseOverlay();\r\n\r\n\t\t\tdom.overlay = document.createElement(\"div\");\r\n\t\t\tdom.overlay.classList.add(\"overlay\");\r\n\t\t\tdom.overlay.classList.add(\"overlay-help\");\r\n\t\t\tdom.wrapper.appendChild(dom.overlay);\r\n\r\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\r\n\r\n\t\t\tconst shortcuts = keyboard.getShortcuts();\r\n\t\t\tconst bindings = keyboard.getBindings();\r\n\r\n\t\t\thtml += \"<table><th>KEY</th><th>ACTION</th>\";\r\n\t\t\tfor (const key in shortcuts) {\r\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[key]}</td></tr>`;\r\n\t\t\t}\r\n\r\n\t\t\t// Add custom key bindings that have associated descriptions\r\n\t\t\tfor (const binding in bindings) {\r\n\t\t\t\tif (bindings[binding].key && bindings[binding].description) {\r\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thtml += \"</table>\";\r\n\r\n\t\t\tdom.overlay.innerHTML = `\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div class=\"viewport\">\r\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tdom.overlay.querySelector(\".close\").addEventListener(\r\n\t\t\t\t\"click\",\r\n\t\t\t\t(event) => {\r\n\t\t\t\t\tcloseOverlay();\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t},\r\n\t\t\t\tfalse,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Closes any currently open overlay.\r\n\t */\r\n\tfunction closeOverlay() {\r\n\t\tif (dom.overlay) {\r\n\t\t\tdom.overlay.parentNode.removeChild(dom.overlay);\r\n\t\t\tdom.overlay = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JavaScript-controlled layout rules to the\r\n\t * presentation.\r\n\t */\r\n\tfunction layout() {\r\n\t\tif (dom.wrapper && !printView.isActive()) {\r\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\r\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\r\n\r\n\t\t\tif (!config.disableLayout) {\r\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\r\n\t\t\t\t// viewport which leads to part of the presentation being\r\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\r\n\t\t\t\t// property where 100x adds up to the correct height.\r\n\t\t\t\t//\r\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n\t\t\t\tif (Device.isMobile && !config.embedded) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty(\r\n\t\t\t\t\t\t\"--vh\",\r\n\t\t\t\t\t\t`${window.innerHeight * 0.01}px`,\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst size = scrollView.isActive()\r\n\t\t\t\t\t? getComputedSlideSize(viewportWidth, viewportHeight)\r\n\t\t\t\t\t: getComputedSlideSize();\r\n\r\n\t\t\t\tconst oldScale = scale;\r\n\r\n\t\t\t\t// Layout the contents of the slides\r\n\t\t\t\tlayoutSlideContents(config.width, config.height);\r\n\r\n\t\t\t\tdom.slides.style.width = `${size.width}px`;\r\n\t\t\t\tdom.slides.style.height = `${size.height}px`;\r\n\r\n\t\t\t\t// Determine scale of content to fit within available space\r\n\t\t\t\tscale = Math.min(\r\n\t\t\t\t\tsize.presentationWidth / size.width,\r\n\t\t\t\t\tsize.presentationHeight / size.height,\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Respect max/min scale settings\r\n\t\t\t\tscale = Math.max(scale, config.minScale);\r\n\t\t\t\tscale = Math.min(scale, config.maxScale);\r\n\r\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\r\n\t\t\t\t// in the scroll view\r\n\t\t\t\tif (scale === 1 || scrollView.isActive()) {\r\n\t\t\t\t\tdom.slides.style.zoom = \"\";\r\n\t\t\t\t\tdom.slides.style.left = \"\";\r\n\t\t\t\t\tdom.slides.style.top = \"\";\r\n\t\t\t\t\tdom.slides.style.bottom = \"\";\r\n\t\t\t\t\tdom.slides.style.right = \"\";\r\n\t\t\t\t\ttransformSlides({ layout: \"\" });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdom.slides.style.zoom = \"\";\r\n\t\t\t\t\tdom.slides.style.left = \"50%\";\r\n\t\t\t\t\tdom.slides.style.top = \"50%\";\r\n\t\t\t\t\tdom.slides.style.bottom = \"auto\";\r\n\t\t\t\t\tdom.slides.style.right = \"auto\";\r\n\t\t\t\t\ttransformSlides({\r\n\t\t\t\t\t\tlayout: `translate(-50%, -50%) scale(${scale})`,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Select all slides, vertical and horizontal\r\n\t\t\t\tconst slides = Array.from(\r\n\t\t\t\t\tdom.wrapper.querySelectorAll(SLIDES_SELECTOR),\r\n\t\t\t\t);\r\n\r\n\t\t\t\tfor (let i = 0, len = slides.length; i < len; i++) {\r\n\t\t\t\t\tconst slide = slides[i];\r\n\r\n\t\t\t\t\t// Don't bother updating invisible slides\r\n\t\t\t\t\tif (slide.style.display === \"none\") {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (config.center || slide.classList.contains(\"center\")) {\r\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t\t\t\t// children will be\r\n\t\t\t\t\t\tif (slide.classList.contains(\"stack\")) {\r\n\t\t\t\t\t\t\tslide.style.top = 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tslide.style.top = `${Math.max(\r\n\t\t\t\t\t\t\t\t(size.height - slide.scrollHeight) / 2,\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t)}px`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tslide.style.top = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oldScale !== scale) {\r\n\t\t\t\t\tdispatchEvent({\r\n\t\t\t\t\t\ttype: \"resize\",\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\toldScale,\r\n\t\t\t\t\t\t\tscale,\r\n\t\t\t\t\t\t\tsize,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcheckResponsiveScrollView();\r\n\r\n\t\t\tdom.viewport.style.setProperty(\"--slide-scale\", scale);\r\n\t\t\tdom.viewport.style.setProperty(\"--viewport-width\", `${viewportWidth}px`);\r\n\t\t\tdom.viewport.style.setProperty(\r\n\t\t\t\t\"--viewport-height\",\r\n\t\t\t\t`${viewportHeight}px`,\r\n\t\t\t);\r\n\r\n\t\t\tscrollView.layout();\r\n\r\n\t\t\tprogress.update();\r\n\t\t\tbackgrounds.updateParallax();\r\n\r\n\t\t\tif (overview.isActive()) {\r\n\t\t\t\toverview.update();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies layout logic to the contents of all slides in\r\n\t * the presentation.\r\n\t *\r\n\t * @param {string|number} width\r\n\t * @param {string|number} height\r\n\t */\r\n\tfunction layoutSlideContents(width, height) {\r\n\t\t// Handle sizing of elements with the 'r-stretch' class\r\n\t\tUtil.queryAll(\r\n\t\t\tdom.slides,\r\n\t\t\t\"section > .stretch, section > .r-stretch\",\r\n\t\t).forEach((element) => {\r\n\t\t\t// Determine how much vertical space we can use\r\n\t\t\tconst remainingHeight = Util.getRemainingHeight(element, height);\r\n\r\n\t\t\t// Consider the aspect ratio of media elements\r\n\t\t\tif (/(img|video)/gi.test(element.nodeName)) {\r\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth;\r\n\t\t\t\tconst nh = element.naturalHeight || element.videoHeight;\r\n\r\n\t\t\t\tconst es = Math.min(width / nw, remainingHeight / nh);\r\n\r\n\t\t\t\telement.style.width = `${nw * es}px`;\r\n\t\t\t\telement.style.height = `${nh * es}px`;\r\n\t\t\t} else {\r\n\t\t\t\telement.style.width = `${width}px`;\r\n\t\t\t\telement.style.height = `${remainingHeight}px`;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Responsively activates the scroll mode when we reach the configured\r\n\t * activation width.\r\n\t */\r\n\tfunction checkResponsiveScrollView() {\r\n\t\t// Only proceed if...\r\n\t\t// 1. The DOM is ready\r\n\t\t// 2. Layouts aren't disabled via config\r\n\t\t// 3. We're not currently printing\r\n\t\t// 4. There is a scrollActivationWidth set\r\n\t\t// 5. The deck isn't configured to always use the scroll view\r\n\t\tif (\r\n\t\t\tdom.wrapper &&\r\n\t\t\t!config.disableLayout &&\r\n\t\t\t!printView.isActive() &&\r\n\t\t\ttypeof config.scrollActivationWidth === \"number\" &&\r\n\t\t\tconfig.view !== \"scroll\"\r\n\t\t) {\r\n\t\t\tconst size = getComputedSlideSize();\r\n\r\n\t\t\tif (\r\n\t\t\t\tsize.presentationWidth > 0 &&\r\n\t\t\t\tsize.presentationWidth <= config.scrollActivationWidth\r\n\t\t\t) {\r\n\t\t\t\tif (!scrollView.isActive()) {\r\n\t\t\t\t\tbackgrounds.create();\r\n\t\t\t\t\tscrollView.activate();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (scrollView.isActive()) scrollView.deactivate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the computed pixel size of our slides. These\r\n\t * values are based on the width and height configuration\r\n\t * options.\r\n\t *\r\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\r\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\r\n\t */\r\n\tfunction getComputedSlideSize(presentationWidth, presentationHeight) {\r\n\t\tlet width = config.width;\r\n\t\tlet height = config.height;\r\n\r\n\t\tif (config.disableLayout) {\r\n\t\t\twidth = dom.slides.offsetWidth;\r\n\t\t\theight = dom.slides.offsetHeight;\r\n\t\t}\r\n\r\n\t\tconst size = {\r\n\t\t\t// Slide size\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\r\n\t\t\t// Presentation size\r\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\r\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight,\r\n\t\t};\r\n\r\n\t\t// Reduce available space by margin\r\n\t\tsize.presentationWidth -= size.presentationWidth * config.margin;\r\n\t\tsize.presentationHeight -= size.presentationHeight * config.margin;\r\n\r\n\t\t// Slide width may be a percentage of available width\r\n\t\tif (typeof size.width === \"string\" && /%$/.test(size.width)) {\r\n\t\t\tsize.width =\r\n\t\t\t\t(Number.parseInt(size.width, 10) / 100) * size.presentationWidth;\r\n\t\t}\r\n\r\n\t\t// Slide height may be a percentage of available height\r\n\t\tif (typeof size.height === \"string\" && /%$/.test(size.height)) {\r\n\t\t\tsize.height =\r\n\t\t\t\t(Number.parseInt(size.height, 10) / 100) * size.presentationHeight;\r\n\t\t}\r\n\r\n\t\treturn size;\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the vertical index of a stack so that the same\r\n\t * vertical slide can be selected when navigating to and\r\n\t * from the stack.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t * @param {string|number} [v=0] Index to memorize\r\n\t */\r\n\tfunction setPreviousVerticalIndex(stack, v) {\r\n\t\tif (typeof stack === \"object\" && typeof stack.setAttribute === \"function\") {\r\n\t\t\tstack.setAttribute(\"data-previous-indexv\", v || 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the vertical index which was stored using\r\n\t * #setPreviousVerticalIndex() or 0 if no previous index\r\n\t * exists.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t */\r\n\tfunction getPreviousVerticalIndex(stack) {\r\n\t\tif (\r\n\t\t\ttypeof stack === \"object\" &&\r\n\t\t\ttypeof stack.setAttribute === \"function\" &&\r\n\t\t\tstack.classList.contains(\"stack\")\r\n\t\t) {\r\n\t\t\t// Prefer manually defined start-indexv\r\n\t\t\tconst attributeName = stack.hasAttribute(\"data-start-indexv\")\r\n\t\t\t\t? \"data-start-indexv\"\r\n\t\t\t\t: \"data-previous-indexv\";\r\n\r\n\t\t\treturn Number.parseInt(stack.getAttribute(attributeName) || 0, 10);\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is vertical\r\n\t * (nested within another slide).\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\r\n\t * orientation of\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalSlide(slide = currentSlide) {\r\n\t\treturn slide?.parentNode && !!slide.parentNode.nodeName.match(/section/i);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is a stack containing\r\n\t * vertical slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalStack(slide = currentSlide) {\r\n\t\treturn (\r\n\t\t\tslide.classList.contains(\".stack\") ||\r\n\t\t\tslide.querySelector(\"section\") !== null\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're on the last slide in the current\r\n\t * vertical stack.\r\n\t */\r\n\tfunction isLastVerticalSlide() {\r\n\t\tif (currentSlide && isVerticalSlide(currentSlide)) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif (currentSlide.nextElementSibling) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the first slide in\r\n\t * the presentation.\r\n\t */\r\n\tfunction isFirstSlide() {\r\n\t\treturn indexh === 0 && indexv === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the last slide in\r\n\t * the presenation. If the last slide is a stack, we only\r\n\t * consider this the last slide if it's at the end of the\r\n\t * stack.\r\n\t */\r\n\tfunction isLastSlide() {\r\n\t\tif (currentSlide) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif (currentSlide.nextElementSibling) return false;\r\n\r\n\t\t\t// If it's vertical, does its parent have a next sibling?\r\n\t\t\tif (\r\n\t\t\t\tisVerticalSlide(currentSlide) &&\r\n\t\t\t\tcurrentSlide.parentNode.nextElementSibling\r\n\t\t\t)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the paused mode which fades everything on screen to\r\n\t * black.\r\n\t */\r\n\tfunction pause() {\r\n\t\tif (config.pause) {\r\n\t\t\tconst wasPaused = dom.wrapper.classList.contains(\"paused\");\r\n\r\n\t\t\tcancelAutoSlide();\r\n\t\t\tdom.wrapper.classList.add(\"paused\");\r\n\r\n\t\t\tif (wasPaused === false) {\r\n\t\t\t\tdispatchEvent({ type: \"paused\" });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Exits from the paused mode.\r\n\t */\r\n\tfunction resume() {\r\n\t\tconst wasPaused = dom.wrapper.classList.contains(\"paused\");\r\n\t\tdom.wrapper.classList.remove(\"paused\");\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\tif (wasPaused) {\r\n\t\t\tdispatchEvent({ type: \"resumed\" });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the paused mode on and off.\r\n\t */\r\n\tfunction togglePause(override) {\r\n\t\tif (typeof override === \"boolean\") {\r\n\t\t\toverride ? pause() : resume();\r\n\t\t} else {\r\n\t\t\tisPaused() ? resume() : pause();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we are currently in the paused mode.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isPaused() {\r\n\t\treturn dom.wrapper.classList.contains(\"paused\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles visibility of the jump-to-slide UI.\r\n\t */\r\n\tfunction toggleJumpToSlide(override) {\r\n\t\tif (typeof override === \"boolean\") {\r\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\r\n\t\t} else {\r\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the auto slide mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which sets the desired state.\r\n\t * True means autoplay starts, false means it stops.\r\n\t */\r\n\r\n\tfunction toggleAutoSlide(override) {\r\n\t\tif (typeof override === \"boolean\") {\r\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t} else {\r\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the auto slide mode is currently on.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isAutoSliding() {\r\n\t\treturn !!(autoSlide && !autoSlidePaused);\r\n\t}\r\n\r\n\t/**\r\n\t * Steps from the current point in the presentation to the\r\n\t * slide which matches the specified horizontal and vertical\r\n\t * indices.\r\n\t *\r\n\t * @param {number} [h=indexh] Horizontal index of the target slide\r\n\t * @param {number} [v=indexv] Vertical index of the target slide\r\n\t * @param {number} [f] Index of a fragment within the\r\n\t * target slide to activate\r\n\t * @param {number} [origin] Origin for use in multimaster environments\r\n\t */\r\n\tfunction slide(h, v, f, origin) {\r\n\t\t// Dispatch an event before the slide\r\n\t\tconst slidechange = dispatchEvent({\r\n\t\t\ttype: \"beforeslidechange\",\r\n\t\t\tdata: {\r\n\t\t\t\tindexh: h === undefined ? indexh : h,\r\n\t\t\t\tindexv: v === undefined ? indexv : v,\r\n\t\t\t\torigin,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// Abort if this slide change was prevented by an event listener\r\n\t\tif (slidechange.defaultPrevented) return;\r\n\r\n\t\t// Remember where we were at before\r\n\t\tpreviousSlide = currentSlide;\r\n\r\n\t\t// Query all horizontal slides in the deck\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll(\r\n\t\t\tHORIZONTAL_SLIDES_SELECTOR,\r\n\t\t);\r\n\r\n\t\t// If we're in scroll mode, we scroll the target slide into view\r\n\t\t// instead of running our standard slide transition\r\n\t\tif (scrollView.isActive()) {\r\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices(h, v);\r\n\t\t\tif (scrollToSlide) scrollView.scrollToSlide(scrollToSlide);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Abort if there are no slides\r\n\t\tif (horizontalSlides.length === 0) return;\r\n\r\n\t\t// If no vertical index is specified and the upcoming slide is a\r\n\t\t// stack, resume at its previous vertical index\r\n\t\tif (v === undefined && !overview.isActive()) {\r\n\t\t\tv = getPreviousVerticalIndex(horizontalSlides[h]);\r\n\t\t}\r\n\r\n\t\t// If we were on a vertical stack, remember what vertical index\r\n\t\t// it was on so we can resume at the same position when returning\r\n\t\tif (previousSlide?.parentNode?.classList.contains(\"stack\")) {\r\n\t\t\tsetPreviousVerticalIndex(previousSlide.parentNode, indexv);\r\n\t\t}\r\n\r\n\t\t// Remember the state before this slide\r\n\t\tconst stateBefore = state.concat();\r\n\r\n\t\t// Reset the state array\r\n\t\tstate.length = 0;\r\n\r\n\t\tconst indexhBefore = indexh || 0;\r\n\t\tconst indexvBefore = indexv || 0;\r\n\r\n\t\t// Activate and transition to the new slide\r\n\t\tindexh = updateSlides(\r\n\t\t\tHORIZONTAL_SLIDES_SELECTOR,\r\n\t\t\th === undefined ? indexh : h,\r\n\t\t);\r\n\t\tindexv = updateSlides(\r\n\t\t\tVERTICAL_SLIDES_SELECTOR,\r\n\t\t\tv === undefined ? indexv : v,\r\n\t\t);\r\n\r\n\t\t// Dispatch an event if the slide changed\r\n\t\tconst slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\r\n\r\n\t\t// Ensure that the previous slide is never the same as the current\r\n\t\tif (!slideChanged) previousSlide = null;\r\n\r\n\t\t// Find the current horizontal slide and any possible vertical slides\r\n\t\t// within it\r\n\t\tconst currentHorizontalSlide = horizontalSlides[indexh];\r\n\t\tconst currentVerticalSlides =\r\n\t\t\tcurrentHorizontalSlide.querySelectorAll(\"section\");\r\n\r\n\t\t// Store references to the previous and current slides\r\n\t\tcurrentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide;\r\n\r\n\t\tlet autoAnimateTransition = false;\r\n\r\n\t\t// Detect if we're moving between two auto-animated slides\r\n\t\tif (slideChanged && previousSlide && currentSlide && !overview.isActive()) {\r\n\t\t\ttransition = \"running\";\r\n\r\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween(\r\n\t\t\t\tpreviousSlide,\r\n\t\t\t\tcurrentSlide,\r\n\t\t\t\tindexhBefore,\r\n\t\t\t\tindexvBefore,\r\n\t\t\t);\r\n\r\n\t\t\t// If this is an auto-animated transition, we disable the\r\n\t\t\t// regular slide transition\r\n\t\t\t//\r\n\t\t\t// Note 20-03-2020:\r\n\t\t\t// This needs to happen before we update slide visibility,\r\n\t\t\t// otherwise transitions will still run in Safari.\r\n\t\t\tif (autoAnimateTransition) {\r\n\t\t\t\tdom.slides.classList.add(\"disable-slide-transitions\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Update the visibility of slides now that the indices have changed\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tlayout();\r\n\r\n\t\t// Update the overview if it's currently active\r\n\t\tif (overview.isActive()) {\r\n\t\t\toverview.update();\r\n\t\t}\r\n\r\n\t\t// Show fragment, if specified\r\n\t\tif (typeof f !== \"undefined\") {\r\n\t\t\tfragments.goto(f);\r\n\t\t}\r\n\r\n\t\t// Solves an edge case where the previous slide maintains the\r\n\t\t// 'present' class when navigating between adjacent vertical\r\n\t\t// stacks\r\n\t\tif (previousSlide && previousSlide !== currentSlide) {\r\n\t\t\tpreviousSlide.classList.remove(\"present\");\r\n\t\t\tpreviousSlide.setAttribute(\"aria-hidden\", \"true\");\r\n\r\n\t\t\t// Reset all slides upon navigate to home\r\n\t\t\tif (isFirstSlide()) {\r\n\t\t\t\t// Launch async task\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tgetVerticalStacks().forEach((slide) => {\r\n\t\t\t\t\t\tsetPreviousVerticalIndex(slide, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply the new state\r\n\t\tstateLoop: for (let i = 0, len = state.length; i < len; i++) {\r\n\t\t\t// Check if this state existed on the previous slide. If it\r\n\t\t\t// did, we will avoid adding it repeatedly\r\n\t\t\tfor (let j = 0; j < stateBefore.length; j++) {\r\n\t\t\t\tif (stateBefore[j] === state[i]) {\r\n\t\t\t\t\tstateBefore.splice(j, 1);\r\n\t\t\t\t\tcontinue stateLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.classList.add(state[i]);\r\n\r\n\t\t\t// Dispatch custom event matching the state's name\r\n\t\t\tdispatchEvent({ type: state[i] });\r\n\t\t}\r\n\r\n\t\t// Clean up the remains of the previous state\r\n\t\twhile (stateBefore.length) {\r\n\t\t\tdom.viewport.classList.remove(stateBefore.pop());\r\n\t\t}\r\n\r\n\t\tif (slideChanged) {\r\n\t\t\tdispatchSlideChanged(origin);\r\n\t\t}\r\n\r\n\t\t// Handle embedded content\r\n\t\tif (slideChanged || !previousSlide) {\r\n\t\t\tslideContent.stopEmbeddedContent(previousSlide);\r\n\t\t\tslideContent.startEmbeddedContent(currentSlide);\r\n\t\t}\r\n\r\n\t\t// Announce the current slide contents to screen readers\r\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\r\n\t\t// from triggering layout mid-frame\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tannounceStatus(getStatusText(currentSlide));\r\n\t\t});\r\n\r\n\t\tprogress.update();\r\n\t\tcontrols.update();\r\n\t\tnotes.update();\r\n\t\tbackgrounds.update();\r\n\t\tbackgrounds.updateParallax();\r\n\t\tslideNumber.update();\r\n\t\tfragments.update();\r\n\r\n\t\t// Update the URL hash\r\n\t\tlocation.writeURL();\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Auto-animation\r\n\t\tif (autoAnimateTransition) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdom.slides.classList.remove(\"disable-slide-transitions\");\r\n\t\t\t}, 0);\r\n\r\n\t\t\tif (config.autoAnimate) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run(previousSlide, currentSlide);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether or not an auto-animation should take place between\r\n\t * the two given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t * @param {number} indexhBefore\r\n\t * @param {number} indexvBefore\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tfunction shouldAutoAnimateBetween(\r\n\t\tfromSlide,\r\n\t\ttoSlide,\r\n\t\tindexhBefore,\r\n\t\tindexvBefore,\r\n\t) {\r\n\t\treturn (\r\n\t\t\tfromSlide.hasAttribute(\"data-auto-animate\") &&\r\n\t\t\ttoSlide.hasAttribute(\"data-auto-animate\") &&\r\n\t\t\tfromSlide.getAttribute(\"data-auto-animate-id\") ===\r\n\t\t\t\ttoSlide.getAttribute(\"data-auto-animate-id\") &&\r\n\t\t\t!(\r\n\t\t\t\tindexh > indexhBefore || indexv > indexvBefore ? toSlide : fromSlide\r\n\t\t\t).hasAttribute(\"data-auto-animate-restart\")\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Called anytime a new slide should be activated while in the scroll\r\n\t * view. The active slide is the page that occupies the most space in\r\n\t * the scrollable viewport.\r\n\t *\r\n\t * @param {number} pageIndex\r\n\t * @param {HTMLElement} slideElement\r\n\t */\r\n\tfunction setCurrentScrollPage(slideElement, h, v) {\r\n\t\tconst indexhBefore = indexh || 0;\r\n\r\n\t\tindexh = h;\r\n\t\tindexv = v;\r\n\r\n\t\tconst slideChanged = currentSlide !== slideElement;\r\n\r\n\t\tpreviousSlide = currentSlide;\r\n\t\tcurrentSlide = slideElement;\r\n\r\n\t\tif (currentSlide && previousSlide) {\r\n\t\t\tif (\r\n\t\t\t\tconfig.autoAnimate &&\r\n\t\t\t\tshouldAutoAnimateBetween(\r\n\t\t\t\t\tpreviousSlide,\r\n\t\t\t\t\tcurrentSlide,\r\n\t\t\t\t\tindexhBefore,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run(previousSlide, currentSlide);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Start or stop embedded content like videos and iframes\r\n\t\tif (slideChanged) {\r\n\t\t\tif (previousSlide) {\r\n\t\t\t\tslideContent.stopEmbeddedContent(previousSlide);\r\n\t\t\t\tslideContent.stopEmbeddedContent(previousSlide.slideBackgroundElement);\r\n\t\t\t}\r\n\r\n\t\t\tslideContent.startEmbeddedContent(currentSlide);\r\n\t\t\tslideContent.startEmbeddedContent(currentSlide.slideBackgroundElement);\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tannounceStatus(getStatusText(currentSlide));\r\n\t\t});\r\n\r\n\t\tdispatchSlideChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs the presentation with the current DOM. Useful\r\n\t * when new slides or control elements are added or when\r\n\t * the configuration has changed.\r\n\t */\r\n\tfunction sync() {\r\n\t\t// Subscribe to input\r\n\t\tremoveEventListeners();\r\n\t\taddEventListeners();\r\n\r\n\t\t// Force a layout to make sure the current config is accounted for\r\n\t\tlayout();\r\n\r\n\t\t// Reflect the current autoSlide value\r\n\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t// Start auto-sliding if it's enabled\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Re-create all slide backgrounds\r\n\t\tbackgrounds.create();\r\n\r\n\t\t// Write the current hash to the URL\r\n\t\tlocation.writeURL();\r\n\r\n\t\tif (config.sortFragmentsOnSync === true) {\r\n\t\t\tfragments.sortAll();\r\n\t\t}\r\n\r\n\t\tcontrols.update();\r\n\t\tprogress.update();\r\n\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tnotes.update();\r\n\t\tnotes.updateVisibility();\r\n\t\tbackgrounds.update(true);\r\n\t\tslideNumber.update();\r\n\t\tslideContent.formatEmbeddedContent();\r\n\r\n\t\t// Start or stop embedded content depending on global config\r\n\t\tif (config.autoPlayMedia === false) {\r\n\t\t\tslideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false });\r\n\t\t} else {\r\n\t\t\tslideContent.startEmbeddedContent(currentSlide);\r\n\t\t}\r\n\r\n\t\tif (overview.isActive()) {\r\n\t\t\toverview.layout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates reveal.js to keep in sync with new slide attributes. For\r\n\t * example, if you add a new `data-background-image` you can call\r\n\t * this to have reveal.js render the new background image.\r\n\t *\r\n\t * Similar to #sync() but more efficient when you only need to\r\n\t * refresh a specific slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tfunction syncSlide(slide = currentSlide) {\r\n\t\tbackgrounds.sync(slide);\r\n\t\tfragments.sync(slide);\r\n\r\n\t\tslideContent.load(slide);\r\n\r\n\t\tbackgrounds.update();\r\n\t\tnotes.update();\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all vertical slides so that only the first\r\n\t * is visible.\r\n\t */\r\n\tfunction resetVerticalSlides() {\r\n\t\tgetHorizontalSlides().forEach((horizontalSlide) => {\r\n\t\t\tUtil.queryAll(horizontalSlide, \"section\").forEach((verticalSlide, y) => {\r\n\t\t\t\tif (y > 0) {\r\n\t\t\t\t\tverticalSlide.classList.remove(\"present\");\r\n\t\t\t\t\tverticalSlide.classList.remove(\"past\");\r\n\t\t\t\t\tverticalSlide.classList.add(\"future\");\r\n\t\t\t\t\tverticalSlide.setAttribute(\"aria-hidden\", \"true\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Randomly shuffles all slides in the deck.\r\n\t */\r\n\tfunction shuffle(slides = getHorizontalSlides()) {\r\n\t\tslides.forEach((slide, i) => {\r\n\t\t\t// Insert the slide next to a randomly picked sibling slide\r\n\t\t\t// slide. This may cause the slide to insert before itself,\r\n\t\t\t// but that's not an issue.\r\n\t\t\tconst beforeSlide = slides[Math.floor(Math.random() * slides.length)];\r\n\t\t\tif (beforeSlide.parentNode === slide.parentNode) {\r\n\t\t\t\tslide.parentNode.insertBefore(slide, beforeSlide);\r\n\t\t\t}\r\n\r\n\t\t\t// Randomize the order of vertical slides (if there are any)\r\n\t\t\tconst verticalSlides = slide.querySelectorAll(\"section\");\r\n\t\t\tif (verticalSlides.length) {\r\n\t\t\t\tshuffle(verticalSlides);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates one dimension of slides by showing the slide\r\n\t * with the specified index.\r\n\t *\r\n\t * @param {string} selector A CSS selector that will fetch\r\n\t * the group of slides we are working with\r\n\t * @param {number} index The index of the slide that should be\r\n\t * shown\r\n\t *\r\n\t * @return {number} The index of the slide that is now shown,\r\n\t * might differ from the passed in index if it was out of\r\n\t * bounds.\r\n\t */\r\n\tfunction updateSlides(selector, index) {\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tconst slides = Util.queryAll(dom.wrapper, selector);\r\n\t\tconst slidesLength = slides.length;\r\n\r\n\t\tconst printMode = scrollView.isActive() || printView.isActive();\r\n\t\tlet loopedForwards = false;\r\n\t\tlet loopedBackwards = false;\r\n\r\n\t\tif (slidesLength) {\r\n\t\t\t// Should the index loop?\r\n\t\t\tif (config.loop) {\r\n\t\t\t\tif (index >= slidesLength) loopedForwards = true;\r\n\r\n\t\t\t\tindex %= slidesLength;\r\n\r\n\t\t\t\tif (index < 0) {\r\n\t\t\t\t\tindex = slidesLength + index;\r\n\t\t\t\t\tloopedBackwards = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enforce max and minimum index bounds\r\n\t\t\tindex = Math.max(Math.min(index, slidesLength - 1), 0);\r\n\r\n\t\t\tfor (let i = 0; i < slidesLength; i++) {\r\n\t\t\t\tconst element = slides[i];\r\n\r\n\t\t\t\tconst reverse = config.rtl && !isVerticalSlide(element);\r\n\r\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\r\n\t\t\t\telement.classList.remove(\"past\");\r\n\t\t\t\telement.classList.remove(\"present\");\r\n\t\t\t\telement.classList.remove(\"future\");\r\n\r\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\r\n\t\t\t\telement.setAttribute(\"hidden\", \"\");\r\n\t\t\t\telement.setAttribute(\"aria-hidden\", \"true\");\r\n\r\n\t\t\t\t// If this element contains vertical slides\r\n\t\t\t\tif (element.querySelector(\"section\")) {\r\n\t\t\t\t\telement.classList.add(\"stack\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\r\n\t\t\t\tif (printMode) {\r\n\t\t\t\t\telement.classList.add(\"present\");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i < index) {\r\n\t\t\t\t\t// Any element previous to index is given the 'past' class\r\n\t\t\t\t\telement.classList.add(reverse ? \"future\" : \"past\");\r\n\r\n\t\t\t\t\tif (config.fragments) {\r\n\t\t\t\t\t\t// Show all fragments in prior slides\r\n\t\t\t\t\t\tshowFragmentsIn(element);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i > index) {\r\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\r\n\t\t\t\t\telement.classList.add(reverse ? \"past\" : \"future\");\r\n\r\n\t\t\t\t\tif (config.fragments) {\r\n\t\t\t\t\t\t// Hide all fragments in future slides\r\n\t\t\t\t\t\thideFragmentsIn(element);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Update the visibility of fragments when a presentation loops\r\n\t\t\t\t// in either direction\r\n\t\t\t\telse if (i === index && config.fragments) {\r\n\t\t\t\t\tif (loopedForwards) {\r\n\t\t\t\t\t\thideFragmentsIn(element);\r\n\t\t\t\t\t} else if (loopedBackwards) {\r\n\t\t\t\t\t\tshowFragmentsIn(element);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst slide = slides[index];\r\n\t\t\tconst wasPresent = slide.classList.contains(\"present\");\r\n\r\n\t\t\t// Mark the current slide as present\r\n\t\t\tslide.classList.add(\"present\");\r\n\t\t\tslide.removeAttribute(\"hidden\");\r\n\t\t\tslide.removeAttribute(\"aria-hidden\");\r\n\r\n\t\t\tif (!wasPresent) {\r\n\t\t\t\t// Dispatch an event indicating the slide is now visible\r\n\t\t\t\tdispatchEvent({\r\n\t\t\t\t\ttarget: slide,\r\n\t\t\t\t\ttype: \"visible\",\r\n\t\t\t\t\tbubbles: false,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If this slide has a state associated with it, add it\r\n\t\t\t// onto the current state of the deck\r\n\t\t\tconst slideState = slide.getAttribute(\"data-state\");\r\n\t\t\tif (slideState) {\r\n\t\t\t\tstate = state.concat(slideState.split(\" \"));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Since there are no slides we can't be anywhere beyond the\r\n\t\t\t// zeroth index\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows all fragment elements within the given container.\r\n\t */\r\n\tfunction showFragmentsIn(container) {\r\n\t\tUtil.queryAll(container, \".fragment\").forEach((fragment) => {\r\n\t\t\tfragment.classList.add(\"visible\");\r\n\t\t\tfragment.classList.remove(\"current-fragment\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all fragment elements within the given container.\r\n\t */\r\n\tfunction hideFragmentsIn(container) {\r\n\t\tUtil.queryAll(container, \".fragment.visible\").forEach((fragment) => {\r\n\t\t\tfragment.classList.remove(\"visible\", \"current-fragment\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Optimization method; hide all slides that are far away\r\n\t * from the present slide.\r\n\t */\r\n\tfunction updateSlidesVisibility() {\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tconst horizontalSlides = getHorizontalSlides();\r\n\t\tconst horizontalSlidesLength = horizontalSlides.length;\r\n\t\tlet distanceX;\r\n\t\tlet distanceY;\r\n\r\n\t\tif (horizontalSlidesLength && typeof indexh !== \"undefined\") {\r\n\t\t\t// The number of steps away from the present slide that will\r\n\t\t\t// be visible\r\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\r\n\r\n\t\t\t// Shorten the view distance on devices that typically have\r\n\t\t\t// less resources\r\n\t\t\tif (Device.isMobile) {\r\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\r\n\t\t\t}\r\n\r\n\t\t\t// All slides need to be visible when exporting to PDF\r\n\t\t\tif (printView.isActive()) {\r\n\t\t\t\tviewDistance = Number.MAX_VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let x = 0; x < horizontalSlidesLength; x++) {\r\n\t\t\t\tconst horizontalSlide = horizontalSlides[x];\r\n\r\n\t\t\t\tconst verticalSlides = Util.queryAll(horizontalSlide, \"section\");\r\n\t\t\t\tconst verticalSlidesLength = verticalSlides.length;\r\n\r\n\t\t\t\t// Determine how far away this slide is from the present\r\n\t\t\t\tdistanceX = Math.abs((indexh || 0) - x) || 0;\r\n\r\n\t\t\t\t// If the presentation is looped, distance should measure\r\n\t\t\t\t// 1 between the first and last slides\r\n\t\t\t\tif (config.loop) {\r\n\t\t\t\t\tdistanceX =\r\n\t\t\t\t\t\tMath.abs(\r\n\t\t\t\t\t\t\t((indexh || 0) - x) % (horizontalSlidesLength - viewDistance),\r\n\t\t\t\t\t\t) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the horizontal slide if it's within the view distance\r\n\t\t\t\tif (distanceX < viewDistance) {\r\n\t\t\t\t\tslideContent.load(horizontalSlide);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tslideContent.unload(horizontalSlide);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (verticalSlidesLength) {\r\n\t\t\t\t\tconst oy = getPreviousVerticalIndex(horizontalSlide);\r\n\r\n\t\t\t\t\tfor (let y = 0; y < verticalSlidesLength; y++) {\r\n\t\t\t\t\t\tconst verticalSlide = verticalSlides[y];\r\n\r\n\t\t\t\t\t\tdistanceY =\r\n\t\t\t\t\t\t\tx === (indexh || 0)\r\n\t\t\t\t\t\t\t\t? Math.abs((indexv || 0) - y)\r\n\t\t\t\t\t\t\t\t: Math.abs(y - oy);\r\n\r\n\t\t\t\t\t\tif (distanceX + distanceY < viewDistance) {\r\n\t\t\t\t\t\t\tslideContent.load(verticalSlide);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tslideContent.unload(verticalSlide);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\r\n\t\t\tif (hasVerticalSlides()) {\r\n\t\t\t\tdom.wrapper.classList.add(\"has-vertical-slides\");\r\n\t\t\t} else {\r\n\t\t\t\tdom.wrapper.classList.remove(\"has-vertical-slides\");\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\r\n\t\t\tif (hasHorizontalSlides()) {\r\n\t\t\t\tdom.wrapper.classList.add(\"has-horizontal-slides\");\r\n\t\t\t} else {\r\n\t\t\t\tdom.wrapper.classList.remove(\"has-horizontal-slides\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Determine what available routes there are for navigation.\r\n\t *\r\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\r\n\t */\r\n\tfunction availableRoutes({ includeFragments = false } = {}) {\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll(\r\n\t\t\tHORIZONTAL_SLIDES_SELECTOR,\r\n\t\t);\r\n\t\tconst verticalSlides = dom.wrapper.querySelectorAll(\r\n\t\t\tVERTICAL_SLIDES_SELECTOR,\r\n\t\t);\r\n\r\n\t\tconst routes = {\r\n\t\t\tleft: indexh > 0,\r\n\t\t\tright: indexh < horizontalSlides.length - 1,\r\n\t\t\tup: indexv > 0,\r\n\t\t\tdown: indexv < verticalSlides.length - 1,\r\n\t\t};\r\n\r\n\t\t// Looped presentations can always be navigated as long as\r\n\t\t// there are slides available\r\n\t\tif (config.loop) {\r\n\t\t\tif (horizontalSlides.length > 1) {\r\n\t\t\t\troutes.left = true;\r\n\t\t\t\troutes.right = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (verticalSlides.length > 1) {\r\n\t\t\t\troutes.up = true;\r\n\t\t\t\troutes.down = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (horizontalSlides.length > 1 && config.navigationMode === \"linear\") {\r\n\t\t\troutes.right = routes.right || routes.down;\r\n\t\t\troutes.left = routes.left || routes.up;\r\n\t\t}\r\n\r\n\t\t// If includeFragments is set, a route will be considered\r\n\t\t// available if either a slid OR fragment is available in\r\n\t\t// the given direction\r\n\t\tif (includeFragments === true) {\r\n\t\t\tconst fragmentRoutes = fragments.availableRoutes();\r\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\r\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\r\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\r\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\r\n\t\t}\r\n\r\n\t\t// Reverse horizontal controls for rtl\r\n\t\tif (config.rtl) {\r\n\t\t\tconst left = routes.left;\r\n\t\t\troutes.left = routes.right;\r\n\t\t\troutes.right = left;\r\n\t\t}\r\n\r\n\t\treturn routes;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of past slides. This can be used as a global\r\n\t * flattened index for slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\r\n\t *\r\n\t * @return {number} Past slide count\r\n\t */\r\n\tfunction getSlidePastCount(slide = currentSlide) {\r\n\t\tconst horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t// The number of past slides\r\n\t\tlet pastCount = 0;\r\n\r\n\t\t// Step through all slides and count the past ones\r\n\t\tmainLoop: for (let i = 0; i < horizontalSlides.length; i++) {\r\n\t\t\tconst horizontalSlide = horizontalSlides[i];\r\n\t\t\tconst verticalSlides = horizontalSlide.querySelectorAll(\"section\");\r\n\r\n\t\t\tfor (let j = 0; j < verticalSlides.length; j++) {\r\n\t\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\t\tif (verticalSlides[j] === slide) {\r\n\t\t\t\t\tbreak mainLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't count slides with the \"uncounted\" class\r\n\t\t\t\tif (verticalSlides[j].dataset.visibility !== \"uncounted\") {\r\n\t\t\t\t\tpastCount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\tif (horizontalSlide === slide) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't count the wrapping section for vertical slides and\r\n\t\t\t// slides marked as uncounted\r\n\t\t\tif (\r\n\t\t\t\thorizontalSlide.classList.contains(\"stack\") === false &&\r\n\t\t\t\thorizontalSlide.dataset.visibility !== \"uncounted\"\r\n\t\t\t) {\r\n\t\t\t\tpastCount++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pastCount;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value ranging from 0-1 that represents\r\n\t * how far into the presentation we have navigated.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getProgress() {\r\n\t\t// The number of past and total slides\r\n\t\tconst totalCount = getTotalSlides();\r\n\t\tlet pastCount = getSlidePastCount();\r\n\r\n\t\tif (currentSlide) {\r\n\t\t\tconst allFragments = currentSlide.querySelectorAll(\".fragment\");\r\n\r\n\t\t\t// If there are fragments in the current slide those should be\r\n\t\t\t// accounted for in the progress.\r\n\t\t\tif (allFragments.length > 0) {\r\n\t\t\t\tconst visibleFragments =\r\n\t\t\t\t\tcurrentSlide.querySelectorAll(\".fragment.visible\");\r\n\r\n\t\t\t\t// This value represents how big a portion of the slide progress\r\n\t\t\t\t// that is made up by its fragments (0-1)\r\n\t\t\t\tconst fragmentWeight = 0.9;\r\n\r\n\t\t\t\t// Add fragment progress to the past slide count\r\n\t\t\t\tpastCount +=\r\n\t\t\t\t\t(visibleFragments.length / allFragments.length) * fragmentWeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Math.min(pastCount / (totalCount - 1), 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the h/v location and fragment of the current,\r\n\t * or specified, slide.\r\n\t *\r\n\t * @param {HTMLElement} [slide] If specified, the returned\r\n\t * index will be for this slide rather than the currently\r\n\t * active one\r\n\t *\r\n\t * @return {{h: number, v: number, f: number}}\r\n\t */\r\n\tfunction getIndices(slide) {\r\n\t\t// By default, return the current indices\r\n\t\tlet h = indexh;\r\n\t\tlet v = indexv;\r\n\t\tlet f;\r\n\r\n\t\t// If a slide is specified, return the indices of that slide\r\n\t\tif (slide) {\r\n\t\t\t// In scroll mode the original h/x index is stored on the slide\r\n\t\t\tif (scrollView.isActive()) {\r\n\t\t\t\th = Number.parseInt(slide.getAttribute(\"data-index-h\"), 10);\r\n\r\n\t\t\t\tif (slide.getAttribute(\"data-index-v\")) {\r\n\t\t\t\t\tv = Number.parseInt(slide.getAttribute(\"data-index-v\"), 10);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst isVertical = isVerticalSlide(slide);\r\n\t\t\t\tconst slideh = isVertical ? slide.parentNode : slide;\r\n\r\n\t\t\t\t// Select all horizontal slides\r\n\t\t\t\tconst horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\r\n\t\t\t\th = Math.max(horizontalSlides.indexOf(slideh), 0);\r\n\r\n\t\t\t\t// Assume we're not vertical\r\n\t\t\t\tv = undefined;\r\n\r\n\t\t\t\t// If this is a vertical slide, grab the vertical index\r\n\t\t\t\tif (isVertical) {\r\n\t\t\t\t\tv = Math.max(\r\n\t\t\t\t\t\tUtil.queryAll(slide.parentNode, \"section\").indexOf(slide),\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!slide && currentSlide) {\r\n\t\t\tconst hasFragments =\r\n\t\t\t\tcurrentSlide.querySelectorAll(\".fragment\").length > 0;\r\n\t\t\tif (hasFragments) {\r\n\t\t\t\tconst currentFragment = currentSlide.querySelector(\".current-fragment\");\r\n\t\t\t\tif (currentFragment?.hasAttribute(\"data-fragment-index\")) {\r\n\t\t\t\t\tf = Number.parseInt(\r\n\t\t\t\t\t\tcurrentFragment.getAttribute(\"data-fragment-index\"),\r\n\t\t\t\t\t\t10,\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tf = currentSlide.querySelectorAll(\".fragment.visible\").length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { h, v, f };\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all slides in this presentation.\r\n\t */\r\n\tfunction getSlides() {\r\n\t\treturn Util.queryAll(\r\n\t\t\tdom.wrapper,\r\n\t\t\t`${SLIDES_SELECTOR}:not(.stack):not([data-visibility=\"uncounted\"])`,\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of all horizontal slides in the deck. Each\r\n\t * vertical stack is included as one horizontal slide in the\r\n\t * resulting array.\r\n\t */\r\n\tfunction getHorizontalSlides() {\r\n\t\treturn Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical slides that exist within this deck.\r\n\t */\r\n\tfunction getVerticalSlides() {\r\n\t\treturn Util.queryAll(dom.wrapper, \".slides>section>section\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical stacks (each stack can contain multiple slides).\r\n\t */\r\n\tfunction getVerticalStacks() {\r\n\t\treturn Util.queryAll(dom.wrapper, `${HORIZONTAL_SLIDES_SELECTOR}.stack`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two horizontal slides.\r\n\t */\r\n\tfunction hasHorizontalSlides() {\r\n\t\treturn getHorizontalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two vertical slides.\r\n\t */\r\n\tfunction hasVerticalSlides() {\r\n\t\treturn getVerticalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each object represents the\r\n\t * attributes on its respective slide.\r\n\t */\r\n\tfunction getSlidesAttributes() {\r\n\t\treturn getSlides().map((slide) => {\r\n\t\t\tconst attributes = {};\r\n\t\t\tfor (let i = 0; i < slide.attributes.length; i++) {\r\n\t\t\t\tconst attribute = slide.attributes[i];\r\n\t\t\t\tattributes[attribute.name] = attribute.value;\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the total number of slides in this presentation.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getTotalSlides() {\r\n\t\treturn getSlides().length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide element matching the specified index.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction getSlide(x, y) {\r\n\t\tconst horizontalSlide = getHorizontalSlides()[x];\r\n\t\tconst verticalSlides = horizontalSlide?.querySelectorAll(\"section\");\r\n\r\n\t\tif (verticalSlides?.length && typeof y === \"number\") {\r\n\t\t\treturn verticalSlides ? verticalSlides[y] : undefined;\r\n\t\t}\r\n\r\n\t\treturn horizontalSlide;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the background element for the given slide.\r\n\t * All slides, even the ones with no background properties\r\n\t * defined, have a background element so as long as the\r\n\t * index is valid an element will be returned.\r\n\t *\r\n\t * @param {mixed} x Horizontal background index OR a slide\r\n\t * HTML element\r\n\t * @param {number} y Vertical background index\r\n\t * @return {(HTMLElement[]|*)}\r\n\t */\r\n\tfunction getSlideBackground(x, y) {\r\n\t\tconst slide = typeof x === \"number\" ? getSlide(x, y) : x;\r\n\t\tif (slide) {\r\n\t\t\treturn slide.slideBackgroundElement;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the current state of the presentation as\r\n\t * an object. This state can then be restored at any\r\n\t * time.\r\n\t *\r\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\r\n\t */\r\n\tfunction getState() {\r\n\t\tconst indices = getIndices();\r\n\r\n\t\treturn {\r\n\t\t\tindexh: indices.h,\r\n\t\t\tindexv: indices.v,\r\n\t\t\tindexf: indices.f,\r\n\t\t\tpaused: isPaused(),\r\n\t\t\toverview: overview.isActive(),\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the presentation to the given state.\r\n\t *\r\n\t * @param {object} state As generated by getState()\r\n\t * @see {@link getState} generates the parameter `state`\r\n\t */\r\n\tfunction setState(state) {\r\n\t\tif (typeof state === \"object\") {\r\n\t\t\tslide(\r\n\t\t\t\tUtil.deserialize(state.indexh),\r\n\t\t\t\tUtil.deserialize(state.indexv),\r\n\t\t\t\tUtil.deserialize(state.indexf),\r\n\t\t\t);\r\n\r\n\t\t\tconst pausedFlag = Util.deserialize(state.paused);\r\n\t\t\tconst overviewFlag = Util.deserialize(state.overview);\r\n\r\n\t\t\tif (typeof pausedFlag === \"boolean\" && pausedFlag !== isPaused()) {\r\n\t\t\t\ttogglePause(pausedFlag);\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\ttypeof overviewFlag === \"boolean\" &&\r\n\t\t\t\toverviewFlag !== overview.isActive()\r\n\t\t\t) {\r\n\t\t\t\toverview.toggle(overviewFlag);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cues a new automated slide if enabled in the config.\r\n\t */\r\n\tfunction cueAutoSlide() {\r\n\t\tcancelAutoSlide();\r\n\r\n\t\tif (currentSlide && config.autoSlide !== false) {\r\n\t\t\tconst fragment = currentSlide.querySelector(\r\n\t\t\t\t\".current-fragment[data-autoslide]\",\r\n\t\t\t);\r\n\r\n\t\t\tconst fragmentAutoSlide = fragment\r\n\t\t\t\t? fragment.getAttribute(\"data-autoslide\")\r\n\t\t\t\t: null;\r\n\t\t\tconst parentAutoSlide = currentSlide.parentNode\r\n\t\t\t\t? currentSlide.parentNode.getAttribute(\"data-autoslide\")\r\n\t\t\t\t: null;\r\n\t\t\tconst slideAutoSlide = currentSlide.getAttribute(\"data-autoslide\");\r\n\r\n\t\t\t// Pick value in the following priority order:\r\n\t\t\t// 1. Current fragment's data-autoslide\r\n\t\t\t// 2. Current slide's data-autoslide\r\n\t\t\t// 3. Parent slide's data-autoslide\r\n\t\t\t// 4. Global autoSlide setting\r\n\t\t\tif (fragmentAutoSlide) {\r\n\t\t\t\tautoSlide = Number.parseInt(fragmentAutoSlide, 10);\r\n\t\t\t} else if (slideAutoSlide) {\r\n\t\t\t\tautoSlide = Number.parseInt(slideAutoSlide, 10);\r\n\t\t\t} else if (parentAutoSlide) {\r\n\t\t\t\tautoSlide = Number.parseInt(parentAutoSlide, 10);\r\n\t\t\t} else {\r\n\t\t\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t\t\t// If there are media elements with data-autoplay,\r\n\t\t\t\t// automatically set the autoSlide duration to the\r\n\t\t\t\t// length of that media. Not applicable if the slide\r\n\t\t\t\t// is divided up into fragments.\r\n\t\t\t\t// playbackRate is accounted for in the duration.\r\n\t\t\t\tif (currentSlide.querySelectorAll(\".fragment\").length === 0) {\r\n\t\t\t\t\tUtil.queryAll(currentSlide, \"video, audio\").forEach((el) => {\r\n\t\t\t\t\t\tif (el.hasAttribute(\"data-autoplay\")) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tautoSlide &&\r\n\t\t\t\t\t\t\t\t(el.duration * 1000) / el.playbackRate > autoSlide\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tautoSlide = (el.duration * 1000) / el.playbackRate + 1000;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Cue the next auto-slide if:\r\n\t\t\t// - There is an autoSlide value\r\n\t\t\t// - Auto-sliding isn't paused by the user\r\n\t\t\t// - The presentation isn't paused\r\n\t\t\t// - The overview isn't active\r\n\t\t\t// - The presentation isn't over\r\n\t\t\tif (\r\n\t\t\t\tautoSlide &&\r\n\t\t\t\t!autoSlidePaused &&\r\n\t\t\t\t!isPaused() &&\r\n\t\t\t\t!overview.isActive() &&\r\n\t\t\t\t(!isLastSlide() ||\r\n\t\t\t\t\tfragments.availableRoutes().next ||\r\n\t\t\t\t\tconfig.loop === true)\r\n\t\t\t) {\r\n\t\t\t\tautoSlideTimeout = setTimeout(() => {\r\n\t\t\t\t\tif (typeof config.autoSlideMethod === \"function\") {\r\n\t\t\t\t\t\tconfig.autoSlideMethod();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnavigateNext();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcueAutoSlide();\r\n\t\t\t\t}, autoSlide);\r\n\t\t\t\tautoSlideStartTime = Date.now();\r\n\t\t\t}\r\n\r\n\t\t\tif (autoSlidePlayer) {\r\n\t\t\t\tautoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels any ongoing request to auto-slide.\r\n\t */\r\n\tfunction cancelAutoSlide() {\r\n\t\tclearTimeout(autoSlideTimeout);\r\n\t\tautoSlideTimeout = -1;\r\n\t}\r\n\r\n\tfunction pauseAutoSlide() {\r\n\t\tif (autoSlide && !autoSlidePaused) {\r\n\t\t\tautoSlidePaused = true;\r\n\t\t\tdispatchEvent({ type: \"autoslidepaused\" });\r\n\t\t\tclearTimeout(autoSlideTimeout);\r\n\r\n\t\t\tif (autoSlidePlayer) {\r\n\t\t\t\tautoSlidePlayer.setPlaying(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction resumeAutoSlide() {\r\n\t\tif (autoSlide && autoSlidePaused) {\r\n\t\t\tautoSlidePaused = false;\r\n\t\t\tdispatchEvent({ type: \"autoslideresumed\" });\r\n\t\t\tcueAutoSlide();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction navigateLeft({ skipFragments = false } = {}) {\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Scroll view navigation is handled independently\r\n\t\tif (scrollView.isActive()) return scrollView.prev();\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif (config.rtl) {\r\n\t\t\tif (\r\n\t\t\t\t(overview.isActive() || skipFragments || fragments.next() === false) &&\r\n\t\t\t\tavailableRoutes().left\r\n\t\t\t) {\r\n\t\t\t\tslide(\r\n\t\t\t\t\tindexh + 1,\r\n\t\t\t\t\tconfig.navigationMode === \"grid\" ? indexv : undefined,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if (\r\n\t\t\t(overview.isActive() || skipFragments || fragments.prev() === false) &&\r\n\t\t\tavailableRoutes().left\r\n\t\t) {\r\n\t\t\tslide(indexh - 1, config.navigationMode === \"grid\" ? indexv : undefined);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction navigateRight({ skipFragments = false } = {}) {\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Scroll view navigation is handled independently\r\n\t\tif (scrollView.isActive()) return scrollView.next();\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif (config.rtl) {\r\n\t\t\tif (\r\n\t\t\t\t(overview.isActive() || skipFragments || fragments.prev() === false) &&\r\n\t\t\t\tavailableRoutes().right\r\n\t\t\t) {\r\n\t\t\t\tslide(\r\n\t\t\t\t\tindexh - 1,\r\n\t\t\t\t\tconfig.navigationMode === \"grid\" ? indexv : undefined,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if (\r\n\t\t\t(overview.isActive() || skipFragments || fragments.next() === false) &&\r\n\t\t\tavailableRoutes().right\r\n\t\t) {\r\n\t\t\tslide(indexh + 1, config.navigationMode === \"grid\" ? indexv : undefined);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction navigateUp({ skipFragments = false } = {}) {\r\n\t\t// Scroll view navigation is handled independently\r\n\t\tif (scrollView.isActive()) return scrollView.prev();\r\n\r\n\t\t// Prioritize hiding fragments\r\n\t\tif (\r\n\t\t\t(overview.isActive() || skipFragments || fragments.prev() === false) &&\r\n\t\t\tavailableRoutes().up\r\n\t\t) {\r\n\t\t\tslide(indexh, indexv - 1);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction navigateDown({ skipFragments = false } = {}) {\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Scroll view navigation is handled independently\r\n\t\tif (scrollView.isActive()) return scrollView.next();\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif (\r\n\t\t\t(overview.isActive() || skipFragments || fragments.next() === false) &&\r\n\t\t\tavailableRoutes().down\r\n\t\t) {\r\n\t\t\tslide(indexh, indexv + 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates backwards, prioritized in the following order:\r\n\t * 1) Previous fragment\r\n\t * 2) Previous vertical slide\r\n\t * 3) Previous horizontal slide\r\n\t */\r\n\tfunction navigatePrev({ skipFragments = false } = {}) {\r\n\t\t// Scroll view navigation is handled independently\r\n\t\tif (scrollView.isActive()) return scrollView.prev();\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif (skipFragments || fragments.prev() === false) {\r\n\t\t\tif (availableRoutes().up) {\r\n\t\t\t\tnavigateUp({ skipFragments });\r\n\t\t\t} else {\r\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\r\n\t\t\t\tlet previousSlide;\r\n\r\n\t\t\t\tif (config.rtl) {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll(\r\n\t\t\t\t\t\tdom.wrapper,\r\n\t\t\t\t\t\t`${HORIZONTAL_SLIDES_SELECTOR}.future`,\r\n\t\t\t\t\t).pop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll(\r\n\t\t\t\t\t\tdom.wrapper,\r\n\t\t\t\t\t\t`${HORIZONTAL_SLIDES_SELECTOR}.past`,\r\n\t\t\t\t\t).pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When going backwards and arriving on a stack we start\r\n\t\t\t\t// at the bottom of the stack\r\n\t\t\t\tif (previousSlide?.classList.contains(\"stack\")) {\r\n\t\t\t\t\tconst v =\r\n\t\t\t\t\t\tpreviousSlide.querySelectorAll(\"section\").length - 1 || undefined;\r\n\t\t\t\t\tconst h = indexh - 1;\r\n\t\t\t\t\tslide(h, v);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnavigateLeft({ skipFragments });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The reverse of #navigatePrev().\r\n\t */\r\n\tfunction navigateNext({ skipFragments = false } = {}) {\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Scroll view navigation is handled independently\r\n\t\tif (scrollView.isActive()) return scrollView.next();\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif (skipFragments || fragments.next() === false) {\r\n\t\t\tconst routes = availableRoutes();\r\n\r\n\t\t\t// When looping is enabled `routes.down` is always available\r\n\t\t\t// so we need a separate check for when we've reached the\r\n\t\t\t// end of a stack and should move horizontally\r\n\t\t\tif (routes.down && routes.right && config.loop && isLastVerticalSlide()) {\r\n\t\t\t\troutes.down = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (routes.down) {\r\n\t\t\t\tnavigateDown({ skipFragments });\r\n\t\t\t} else if (config.rtl) {\r\n\t\t\t\tnavigateLeft({ skipFragments });\r\n\t\t\t} else {\r\n\t\t\t\tnavigateRight({ skipFragments });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ----------------------------- EVENTS -------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t/**\r\n\t * Called by all event handlers that are based on user\r\n\t * input.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onUserInput(event) {\r\n\t\tif (config.autoSlideStoppable) {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Listener for post message events posted to this window.\r\n\t */\r\n\tfunction onPostMessage(event) {\r\n\t\tlet data = event.data;\r\n\r\n\t\t// Make sure we're dealing with JSON\r\n\t\tif (\r\n\t\t\ttypeof data === \"string\" &&\r\n\t\t\tdata.charAt(0) === \"{\" &&\r\n\t\t\tdata.charAt(data.length - 1) === \"}\"\r\n\t\t) {\r\n\t\t\tdata = JSON.parse(data);\r\n\r\n\t\t\t// Check if the requested method can be found\r\n\t\t\tif (data.method && typeof Reveal[data.method] === \"function\") {\r\n\t\t\t\tif (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\r\n\t\t\t\t\tconst result = Reveal[data.method].apply(Reveal, data.args);\r\n\r\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\r\n\t\t\t\t\t// our method invocation for getter functions\r\n\t\t\t\t\tdispatchPostMessage(\"callback\", {\r\n\t\t\t\t\t\tmethod: data.method,\r\n\t\t\t\t\t\tresult: result,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t`reveal.js: \"${data.method}\" is is blacklisted from the postMessage API`,\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event listener for transition end on the current slide.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onTransitionEnd(event) {\r\n\t\tif (transition === \"running\" && /section/gi.test(event.target.nodeName)) {\r\n\t\t\ttransition = \"idle\";\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: \"slidetransitionend\",\r\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide },\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A global listener for all click events inside of the\r\n\t * .slides container.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onSlidesClicked(event) {\r\n\t\tconst anchor = Util.closest(event.target, 'a[href^=\"#\"]');\r\n\r\n\t\t// If a hash link is clicked, we find the target slide\r\n\t\t// and navigate to it. We previously relied on 'hashchange'\r\n\t\t// for links like these but that prevented media with\r\n\t\t// audio tracks from playing in mobile browsers since it\r\n\t\t// wasn't considered a direct interaction with the document.\r\n\t\tif (anchor) {\r\n\t\t\tconst hash = anchor.getAttribute(\"href\");\r\n\t\t\tconst indices = location.getIndicesFromHash(hash);\r\n\r\n\t\t\tif (indices) {\r\n\t\t\t\tReveal.slide(indices.h, indices.v, indices.f);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'resize' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onWindowResize(event) {\r\n\t\tlayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Handle for the window level 'visibilitychange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onPageVisibilityChange(event) {\r\n\t\t// If, after clicking a link or similar and we're coming back,\r\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\r\n\t\tif (document.hidden === false && document.activeElement !== document.body) {\r\n\t\t\t// Not all elements support .blur() - SVGs among them.\r\n\t\t\tif (typeof document.activeElement.blur === \"function\") {\r\n\t\t\t\tdocument.activeElement.blur();\r\n\t\t\t}\r\n\t\t\tdocument.body.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'fullscreenchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onFullscreenChange(event) {\r\n\t\tconst element =\r\n\t\t\tdocument.fullscreenElement || document.webkitFullscreenElement;\r\n\t\tif (element === dom.wrapper) {\r\n\t\t\tevent.stopImmediatePropagation();\r\n\r\n\t\t\t// Timeout to avoid layout shift in Safari\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tReveal.layout();\r\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles clicks on links that are set to preview in the\r\n\t * iframe overlay.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tfunction onPreviewLinkClicked(event) {\r\n\t\tif (event.currentTarget?.hasAttribute(\"href\")) {\r\n\t\t\tconst url = event.currentTarget.getAttribute(\"href\");\r\n\t\t\tif (url) {\r\n\t\t\t\tshowPreview(url);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on the auto-sliding controls element.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onAutoSlidePlayerClick(event) {\r\n\t\t// Replay\r\n\t\tif (isLastSlide() && config.loop === false) {\r\n\t\t\tslide(0, 0);\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Resume\r\n\t\telse if (autoSlidePaused) {\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Pause\r\n\t\telse {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\t}\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ------------------------------- API --------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t// The public reveal.js API\r\n\tconst API = {\r\n\t\tVERSION,\r\n\r\n\t\tinitialize,\r\n\t\tconfigure,\r\n\t\tdestroy,\r\n\r\n\t\tsync,\r\n\t\tsyncSlide,\r\n\t\tsyncFragments: fragments.sync.bind(fragments),\r\n\r\n\t\t// Navigation methods\r\n\t\tslide,\r\n\t\tleft: navigateLeft,\r\n\t\tright: navigateRight,\r\n\t\tup: navigateUp,\r\n\t\tdown: navigateDown,\r\n\t\tprev: navigatePrev,\r\n\t\tnext: navigateNext,\r\n\r\n\t\t// Navigation aliases\r\n\t\tnavigateLeft,\r\n\t\tnavigateRight,\r\n\t\tnavigateUp,\r\n\t\tnavigateDown,\r\n\t\tnavigatePrev,\r\n\t\tnavigateNext,\r\n\r\n\t\t// Fragment methods\r\n\t\tnavigateFragment: fragments.goto.bind(fragments),\r\n\t\tprevFragment: fragments.prev.bind(fragments),\r\n\t\tnextFragment: fragments.next.bind(fragments),\r\n\r\n\t\t// Event binding\r\n\t\ton,\r\n\t\toff,\r\n\r\n\t\t// Legacy event binding methods left in for backwards compatibility\r\n\t\taddEventListener: on,\r\n\t\tremoveEventListener: off,\r\n\r\n\t\t// Forces an update in slide layout\r\n\t\tlayout,\r\n\r\n\t\t// Randomizes the order of slides\r\n\t\tshuffle,\r\n\r\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\r\n\t\tavailableRoutes,\r\n\r\n\t\t// Returns an object with the available fragments as booleans (prev/next)\r\n\t\tavailableFragments: fragments.availableRoutes.bind(fragments),\r\n\r\n\t\t// Toggles a help overlay with keyboard shortcuts\r\n\t\ttoggleHelp,\r\n\r\n\t\t// Toggles the overview mode on/off\r\n\t\ttoggleOverview: overview.toggle.bind(overview),\r\n\r\n\t\t// Toggles the scroll view on/off\r\n\t\ttoggleScrollView: scrollView.toggle.bind(scrollView),\r\n\r\n\t\t// Toggles the \"black screen\" mode on/off\r\n\t\ttogglePause,\r\n\r\n\t\t// Toggles the auto slide mode on/off\r\n\t\ttoggleAutoSlide,\r\n\r\n\t\t// Toggles visibility of the jump-to-slide UI\r\n\t\ttoggleJumpToSlide,\r\n\r\n\t\t// Slide navigation checks\r\n\t\tisFirstSlide,\r\n\t\tisLastSlide,\r\n\t\tisLastVerticalSlide,\r\n\t\tisVerticalSlide,\r\n\t\tisVerticalStack,\r\n\r\n\t\t// State checks\r\n\t\tisPaused,\r\n\t\tisAutoSliding,\r\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind(notes),\r\n\t\tisOverview: overview.isActive.bind(overview),\r\n\t\tisFocused: focus.isFocused.bind(focus),\r\n\r\n\t\tisScrollView: scrollView.isActive.bind(scrollView),\r\n\t\tisPrintView: printView.isActive.bind(printView),\r\n\r\n\t\t// Checks if reveal.js has been loaded and is ready for use\r\n\t\tisReady: () => ready,\r\n\r\n\t\t// Slide preloading\r\n\t\tloadSlide: slideContent.load.bind(slideContent),\r\n\t\tunloadSlide: slideContent.unload.bind(slideContent),\r\n\r\n\t\t// Media playback\r\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent(currentSlide),\r\n\t\tstopEmbeddedContent: () =>\r\n\t\t\tslideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false }),\r\n\r\n\t\t// Preview management\r\n\t\tshowPreview,\r\n\t\thidePreview: closeOverlay,\r\n\r\n\t\t// Adds or removes all internal event listeners\r\n\t\taddEventListeners,\r\n\t\tremoveEventListeners,\r\n\t\tdispatchEvent,\r\n\r\n\t\t// Facility for persisting and restoring the presentation state\r\n\t\tgetState,\r\n\t\tsetState,\r\n\r\n\t\t// Presentation progress on range of 0-1\r\n\t\tgetProgress,\r\n\r\n\t\t// Returns the indices of the current, or specified, slide\r\n\t\tgetIndices,\r\n\r\n\t\t// Returns an Array of key:value maps of the attributes of each\r\n\t\t// slide in the deck\r\n\t\tgetSlidesAttributes,\r\n\r\n\t\t// Returns the number of slides that we have passed\r\n\t\tgetSlidePastCount,\r\n\r\n\t\t// Returns the total number of slides\r\n\t\tgetTotalSlides,\r\n\r\n\t\t// Returns the slide element at the specified index\r\n\t\tgetSlide,\r\n\r\n\t\t// Returns the previous slide element, may be null\r\n\t\tgetPreviousSlide: () => previousSlide,\r\n\r\n\t\t// Returns the current slide element\r\n\t\tgetCurrentSlide: () => currentSlide,\r\n\r\n\t\t// Returns the slide background element at the specified index\r\n\t\tgetSlideBackground,\r\n\r\n\t\t// Returns the speaker notes string for a slide, or null\r\n\t\tgetSlideNotes: notes.getSlideNotes.bind(notes),\r\n\r\n\t\t// Returns an Array of all slides\r\n\t\tgetSlides,\r\n\r\n\t\t// Returns an array with all horizontal/vertical slides in the deck\r\n\t\tgetHorizontalSlides,\r\n\t\tgetVerticalSlides,\r\n\r\n\t\t// Checks if the presentation contains two or more horizontal\r\n\t\t// and vertical slides\r\n\t\thasHorizontalSlides,\r\n\t\thasVerticalSlides,\r\n\r\n\t\t// Checks if the deck has navigated on either axis at least once\r\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\r\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\r\n\r\n\t\tshouldAutoAnimateBetween,\r\n\r\n\t\t// Adds/removes a custom key binding\r\n\t\taddKeyBinding: keyboard.addKeyBinding.bind(keyboard),\r\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind(keyboard),\r\n\r\n\t\t// Programmatically triggers a keyboard event\r\n\t\ttriggerKey: keyboard.triggerKey.bind(keyboard),\r\n\r\n\t\t// Registers a new shortcut to include in the help overlay\r\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind(keyboard),\r\n\r\n\t\tgetComputedSlideSize,\r\n\t\tsetCurrentScrollPage,\r\n\r\n\t\t// Returns the current scale of the presentation content\r\n\t\tgetScale: () => scale,\r\n\r\n\t\t// Returns the current configuration object\r\n\t\tgetConfig: () => config,\r\n\r\n\t\t// Helper method, retrieves query string as a key:value map\r\n\t\tgetQueryHash: Util.getQueryHash,\r\n\r\n\t\t// Returns the path to the current slide as represented in the URL\r\n\t\tgetSlidePath: location.getHash.bind(location),\r\n\r\n\t\t// Returns reveal.js DOM elements\r\n\t\tgetRevealElement: () => revealElement,\r\n\t\tgetSlidesElement: () => dom.slides,\r\n\t\tgetViewportElement: () => dom.viewport,\r\n\t\tgetBackgroundsElement: () => backgrounds.element,\r\n\r\n\t\t// API for registering and retrieving plugins\r\n\t\tregisterPlugin: plugins.registerPlugin.bind(plugins),\r\n\t\thasPlugin: plugins.hasPlugin.bind(plugins),\r\n\t\tgetPlugin: plugins.getPlugin.bind(plugins),\r\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind(plugins),\r\n\t};\r\n\r\n\t// Our internal API which controllers have access to\r\n\tUtil.extend(Reveal, {\r\n\t\t...API,\r\n\r\n\t\t// Methods for announcing content to screen readers\r\n\t\tannounceStatus,\r\n\t\tgetStatusText,\r\n\r\n\t\t// Controllers\r\n\t\tfocus,\r\n\t\tscroll: scrollView,\r\n\t\tprogress,\r\n\t\tcontrols,\r\n\t\tlocation,\r\n\t\toverview,\r\n\t\tfragments,\r\n\t\tbackgrounds,\r\n\t\tslideContent,\r\n\t\tslideNumber,\r\n\r\n\t\tonUserInput,\r\n\t\tcloseOverlay,\r\n\t\tupdateSlidesVisibility,\r\n\t\tlayoutSlideContents,\r\n\t\ttransformSlides,\r\n\t\tcueAutoSlide,\r\n\t\tcancelAutoSlide,\r\n\t});\r\n\r\n\treturn API;\r\n}\r\n","import Deck, { VERSION } from \"./reveal.js\";\r\n\r\n/**\r\n * Expose the Reveal class to the window. To create a\r\n * new instance:\r\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\r\n *   controls: false\r\n * } );\r\n * deck.initialize().then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\nconst Reveal = Deck;\r\n\r\n/**\r\n * The below is a thin shell that mimics the pre 4.0\r\n * reveal.js API and ensures backwards compatibility.\r\n * This API only allows for one Reveal instance per\r\n * page, whereas the new API above lets you run many\r\n * presentations on the same page.\r\n *\r\n * Reveal.initialize( { controls: false } ).then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\n\r\nconst enqueuedAPICalls = [];\r\n\r\nReveal.initialize = (options) => {\r\n\t// Create our singleton reveal.js instance\r\n\tObject.assign(Reveal, new Deck(document.querySelector(\".reveal\"), options));\r\n\r\n\t// Invoke any enqueued API calls\r\n\tenqueuedAPICalls.map((method) => method(Reveal));\r\n\r\n\treturn Reveal.initialize();\r\n};\r\n\r\n/**\r\n * The pre 4.0 API let you add event listener before\r\n * initializing. We maintain the same behavior by\r\n * queuing up premature API calls and invoking all\r\n * of them when Reveal.initialize is called.\r\n */\r\n[\r\n\t\"configure\",\r\n\t\"on\",\r\n\t\"off\",\r\n\t\"addEventListener\",\r\n\t\"removeEventListener\",\r\n\t\"registerPlugin\",\r\n].forEach((method) => {\r\n\tReveal[method] = (...args) => {\r\n\t\tenqueuedAPICalls.push((deck) => deck[method].call(null, ...args));\r\n\t};\r\n});\r\n\r\nReveal.isReady = () => false;\r\n\r\nReveal.VERSION = VERSION;\r\n\r\nexport default Reveal;\r\n"],"names":["Playback","constructor","container","progressCheck","this","diameter","diameter2","thickness","playing","progress","progressOffset","canvas","document","createElement","className","width","height","style","context","getContext","appendChild","render","setPlaying","value","wasPlaying","animate","progressBefore","requestAnimationFrame","bind","radius","x","y","iconSize","endAngle","Math","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","translate","fillRect","moveTo","lineTo","restore","on","type","listener","addEventListener","off","removeEventListener","destroy","parentNode","removeChild","defaultConfig","margin","minScale","maxScale","controls","controlsTutorial","controlsLayout","controlsBackArrows","slideNumber","showSlideNumber","hashOneBasedIndex","hash","respondToHashChanges","jumpToSlide","history","keyboard","keyboardCondition","disableLayout","overview","center","touch","loop","rtl","navigationMode","shuffle","fragments","fragmentInURL","embedded","help","pause","showNotes","showHiddenSlides","autoPlayMedia","preloadIframes","autoAnimate","autoAnimateMatcher","autoAnimateEasing","autoAnimateDuration","autoAnimateUnmatched","autoAnimateStyles","autoSlide","autoSlideStoppable","autoSlideMethod","defaultTiming","mouseWheel","previewLinks","postMessage","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","backgroundTransition","parallaxBackgroundImage","parallaxBackgroundSize","parallaxBackgroundRepeat","parallaxBackgroundPosition","parallaxBackgroundHorizontal","parallaxBackgroundVertical","view","scrollLayout","scrollSnap","scrollProgress","scrollActivationWidth","pdfMaxPagesPerSlide","Number","POSITIVE_INFINITY","pdfSeparateFragments","pdfPageHeightOffset","viewDistance","mobileViewDistance","display","hideInactiveCursor","hideCursorTime","sortFragmentsOnSync","dependencies","plugins","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","createStyleSheet","tag","length","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","undefined","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","autoAnimateCounter","AutoAnimate","Reveal","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","indexOf","fromSlideIndex","hasAttribute","getAttribute","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","dataset","slideDirection","fromSlideIsHidden","getConfig","css","getAutoAnimatableElements","map","elements","autoAnimateElements","to","options","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","forEach","unmatchedElement","unmatchedOptions","id","delay","push","autoAnimateTarget","innerHTML","join","getComputedStyle","fontWeight","dispatchEvent","data","sheet","getRevealElement","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","contains","styles","opacity","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","Object","keys","inheritedOptions","autoAnimatedParent","autoAnimateDelay","direction","config","properties","bounds","measure","getBoundingClientRect","offsetLeft","offsetTop","offsetWidth","offsetHeight","computedStyles","property","isNaN","pairs","getAutoAnimatePairs","reserved","filter","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","slice","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","querySelector","concat","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","getHorizontalSlides","slideh","backgroundStack","createBackground","slidev","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","slide","contentElement","slideBackgroundElement","slideBackgroundContentElement","sync","background","backgroundVideo","backgroundIframe","backgroundColor","backgroundGradient","backgroundOpacity","dataPreload","removeAttribute","test","setAttribute","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","window","bubbleSlideContrastClassToElement","classToBubble","update","includeAll","currentSlide","getCurrentSlide","indices","getIndices","currentBackground","horizontalPast","horizontalFuture","childNodes","backgroundh","h","backgroundv","v","indexv","previousBackground","slideContent","stopEmbeddedContent","unloadIframes","shouldPreload","startEmbeddedContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","horizontalSlides","verticalSlides","getVerticalSlides","backgroundWidth","backgroundHeight","slideWidth","horizontalSlideCount","horizontalOffsetMultiplier","horizontalOffset","slideHeight","verticalSlideCount","verticalOffsetMultiplier","verticalOffset","UA","navigator","userAgent","isMobile","platform","maxTouchPoints","isAndroid","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","configure","oldConfig","pointerEvents","eventName","unbind","routes","availableRoutes","left","right","up","down","fragmentsRoutes","prev","next","isVerticalSlide","hasNavigatedVertically","hasNavigatedHorizontally","event","preventDefault","onUserInput","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","state","isFocused","Fragments","disable","enable","getSlidesElement","hiddenFragments","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","max","wasVisible","announceStatus","getStatusText","bubbles","min","goto","offset","lastVisibleFragment","writeURL","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","hide","isVisible","clearTimeout","jumpTimeout","jump","trim","slideNumberFormat","getIndicesFromHash","oneBasedIndex","f","jumpAfter","regex","RegExp","find","cancel","confirm","keyCode","stopImmediatePropagation","Keyboard","shortcuts","bindings","onDocumentKeyDown","F","G","addKeyBinding","binding","callback","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","autoSlideWasPaused","isAutoSliding","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","tagName","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","isActive","MAX_VALUE","deactivate","includes","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","getViewportElement","toggleAutoSlide","toggleJumpToSlide","toggleHelp","closeOverlay","toggle","cueAutoSlide","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","name","bits","hashIndexBase","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","getHash","debouncedReplaceState","pathname","replaceState","url","Date","now","replaceStateTimeout","s","encodeURIComponent","Notes","isScrollView","isPrintView","getSlideNotes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","notesElement","Overview","active","onSlideClicked","activate","cancelAutoSlide","getBackgroundsElement","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","layout","indexh","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","override","loadScript","script","async","defer","src","onload","onreadystatechange","readyState","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","registeredPlugins","asyncDependencies","load","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","promise","arguments","hasPlugin","getPlugin","getRegisteredPlugins","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","showCursor","cursor","hideCursor","detail","wheelDelta","PrintView","slides","injectPageNumbers","pageWidth","floor","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","page","notes","notesSpacing","notesLayout","bottom","numberElement","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Progress","onProgressClicked","bar","getProgress","getTotalSlides","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","ScrollView","activatedCallbacks","onScroll","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","pageElements","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","slideBackground","pageBackground","stickyContainer","isVerticalStack","createProgressBar","stack","setState","restoreScrollPosition","passive","stateBeforeDeactivation","removeProgressBar","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","clientY","progressBarHeight","scrollTop","handleDocumentMouseUp","draggingProgressBar","showProgressBar","syncPages","syncScrollPosition","useCompactLayout","viewportHeight","compactHeight","scrollTriggerHeight","setProperty","scrollSnapType","slideTriggers","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","autoAnimateElement","autoAnimatePage","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","unload","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","e","t","o","l","u","cancelAnimationFrame","n","dirty","c","styleComputed","m","p","d","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","minSize","maxSize","whiteSpace","multiLine","getPropertyValue","preStyleTestCompleted","fontSize","CustomEvent","oldValue","newValue","scaleFactor","w","observeMutations","observer","disconnect","originalStyle","z","MutationObserver","observe","subtree","childList","characterData","W","E","observeWindowDelay","M","defineProperty","set","observeWindow","fitAll","C","assign","newbie","fit","unfreeze","freeze","unsubscribe","SlideContent","startEmbeddedIframe","preload","media","sources","source","backgroundContent","backgroundVideoLoop","backgroundVideoMuted","encodeRFC3986URI","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","isSpeakerNotes","video","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","maxHeight","maxWidth","backgroundIframeElement","scopeElement","fitty","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","autoplay","play","startEmbeddedMedia","catch","isAttachedToDOM","currentTime","contentWindow","SlideNumber","slideNumberDisplay","getSlideNumber","format","visibility","getSlidePastCount","sep","formatNumber","delimiter","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","VERSION","Deck","ready","navigationHistory","slidesTransform","dom","autoSlidePlayer","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","viewport","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","horizontalSlidesLength","distanceX","distanceY","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[22]}